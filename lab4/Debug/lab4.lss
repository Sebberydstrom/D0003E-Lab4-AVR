
lab4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000074  00800100  000023b8  0000244c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000023b8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000357  00800174  00800174  000024c0  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000024c0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000024f0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000298  00000000  00000000  00002530  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000030eb  00000000  00000000  000027c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000011f1  00000000  00000000  000058b3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001916  00000000  00000000  00006aa4  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000d50  00000000  00000000  000083bc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000a55  00000000  00000000  0000910c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00003259  00000000  00000000  00009b61  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000270  00000000  00000000  0000cdba  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2e 00 	jmp	0x5c	; 0x5c <__ctors_end>
       4:	0c 94 6f 05 	jmp	0xade	; 0xade <__vector_1>
       8:	0c 94 db 05 	jmp	0xbb6	; 0xbb6 <__vector_2>
       c:	0c 94 47 06 	jmp	0xc8e	; 0xc8e <__vector_3>
      10:	0c 94 b3 06 	jmp	0xd66	; 0xd66 <__vector_4>
      14:	0c 94 1f 07 	jmp	0xe3e	; 0xe3e <__vector_5>
      18:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      1c:	0c 94 f6 0d 	jmp	0x1bec	; 0x1bec <__vector_7>
      20:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      24:	0c 94 a4 0d 	jmp	0x1b48	; 0x1b48 <__vector_9>
      28:	0c 94 8b 07 	jmp	0xf16	; 0xf16 <__vector_10>
      2c:	0c 94 f7 07 	jmp	0xfee	; 0xfee <__vector_11>
      30:	0c 94 63 08 	jmp	0x10c6	; 0x10c6 <__vector_12>
      34:	0c 94 cf 08 	jmp	0x119e	; 0x119e <__vector_13>
      38:	0c 94 3b 09 	jmp	0x1276	; 0x1276 <__vector_14>
      3c:	0c 94 a7 09 	jmp	0x134e	; 0x134e <__vector_15>
      40:	0c 94 13 0a 	jmp	0x1426	; 0x1426 <__vector_16>
      44:	0c 94 7f 0a 	jmp	0x14fe	; 0x14fe <__vector_17>
      48:	0c 94 eb 0a 	jmp	0x15d6	; 0x15d6 <__vector_18>
      4c:	0c 94 57 0b 	jmp	0x16ae	; 0x16ae <__vector_19>
      50:	0c 94 c3 0b 	jmp	0x1786	; 0x1786 <__vector_20>
      54:	0c 94 2f 0c 	jmp	0x185e	; 0x185e <__vector_21>
      58:	0c 94 9b 0c 	jmp	0x1936	; 0x1936 <__vector_22>

0000005c <__ctors_end>:
      5c:	11 24       	eor	r1, r1
      5e:	1f be       	out	0x3f, r1	; 63
      60:	cf ef       	ldi	r28, 0xFF	; 255
      62:	d4 e0       	ldi	r29, 0x04	; 4
      64:	de bf       	out	0x3e, r29	; 62
      66:	cd bf       	out	0x3d, r28	; 61

00000068 <__do_copy_data>:
      68:	11 e0       	ldi	r17, 0x01	; 1
      6a:	a0 e0       	ldi	r26, 0x00	; 0
      6c:	b1 e0       	ldi	r27, 0x01	; 1
      6e:	e8 eb       	ldi	r30, 0xB8	; 184
      70:	f3 e2       	ldi	r31, 0x23	; 35
      72:	02 c0       	rjmp	.+4      	; 0x78 <__do_copy_data+0x10>
      74:	05 90       	lpm	r0, Z+
      76:	0d 92       	st	X+, r0
      78:	a4 37       	cpi	r26, 0x74	; 116
      7a:	b1 07       	cpc	r27, r17
      7c:	d9 f7       	brne	.-10     	; 0x74 <__do_copy_data+0xc>

0000007e <__do_clear_bss>:
      7e:	24 e0       	ldi	r18, 0x04	; 4
      80:	a4 e7       	ldi	r26, 0x74	; 116
      82:	b1 e0       	ldi	r27, 0x01	; 1
      84:	01 c0       	rjmp	.+2      	; 0x88 <.do_clear_bss_start>

00000086 <.do_clear_bss_loop>:
      86:	1d 92       	st	X+, r1

00000088 <.do_clear_bss_start>:
      88:	ab 3c       	cpi	r26, 0xCB	; 203
      8a:	b2 07       	cpc	r27, r18
      8c:	e1 f7       	brne	.-8      	; 0x86 <.do_clear_bss_loop>
      8e:	0e 94 41 01 	call	0x282	; 0x282 <main>
      92:	0c 94 da 11 	jmp	0x23b4	; 0x23b4 <_exit>

00000096 <__bad_interrupt>:
      96:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000009a <init_lcd>:
		if (writeChar(digit + '0', MAX_CHARS - 1 - j) == -1) {
			return -1;
		}
	}
	return 0;
}
      9a:	87 eb       	ldi	r24, 0xB7	; 183
      9c:	80 93 e5 00 	sts	0x00E5, r24	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7fc0e5>
      a0:	87 e0       	ldi	r24, 0x07	; 7
      a2:	80 93 e6 00 	sts	0x00E6, r24	; 0x8000e6 <__TEXT_REGION_LENGTH__+0x7fc0e6>
      a6:	8f e0       	ldi	r24, 0x0F	; 15
      a8:	80 93 e7 00 	sts	0x00E7, r24	; 0x8000e7 <__TEXT_REGION_LENGTH__+0x7fc0e7>
      ac:	80 ec       	ldi	r24, 0xC0	; 192
      ae:	80 93 e4 00 	sts	0x00E4, r24	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7fc0e4>
      b2:	08 95       	ret

000000b4 <clear>:
      b4:	ec ee       	ldi	r30, 0xEC	; 236
      b6:	f0 e0       	ldi	r31, 0x00	; 0
      b8:	80 81       	ld	r24, Z
      ba:	86 76       	andi	r24, 0x66	; 102
      bc:	80 83       	st	Z, r24
      be:	ed ee       	ldi	r30, 0xED	; 237
      c0:	f0 e0       	ldi	r31, 0x00	; 0
      c2:	80 81       	ld	r24, Z
      c4:	86 76       	andi	r24, 0x66	; 102
      c6:	80 83       	st	Z, r24
      c8:	ee ee       	ldi	r30, 0xEE	; 238
      ca:	f0 e0       	ldi	r31, 0x00	; 0
      cc:	80 81       	ld	r24, Z
      ce:	86 76       	andi	r24, 0x66	; 102
      d0:	80 83       	st	Z, r24
      d2:	10 92 f1 00 	sts	0x00F1, r1	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7fc0f1>
      d6:	10 92 f2 00 	sts	0x00F2, r1	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7fc0f2>
      da:	10 92 f3 00 	sts	0x00F3, r1	; 0x8000f3 <__TEXT_REGION_LENGTH__+0x7fc0f3>
      de:	10 92 f6 00 	sts	0x00F6, r1	; 0x8000f6 <__TEXT_REGION_LENGTH__+0x7fc0f6>
      e2:	10 92 f7 00 	sts	0x00F7, r1	; 0x8000f7 <__TEXT_REGION_LENGTH__+0x7fc0f7>
      e6:	10 92 f8 00 	sts	0x00F8, r1	; 0x8000f8 <__TEXT_REGION_LENGTH__+0x7fc0f8>
      ea:	10 92 fb 00 	sts	0x00FB, r1	; 0x8000fb <__TEXT_REGION_LENGTH__+0x7fc0fb>
      ee:	10 92 fc 00 	sts	0x00FC, r1	; 0x8000fc <__TEXT_REGION_LENGTH__+0x7fc0fc>
      f2:	10 92 fd 00 	sts	0x00FD, r1	; 0x8000fd <__TEXT_REGION_LENGTH__+0x7fc0fd>
      f6:	08 95       	ret

000000f8 <writeChar>:
      f8:	cf 93       	push	r28
      fa:	df 93       	push	r29
      fc:	9b 01       	movw	r18, r22
      fe:	9f eb       	ldi	r25, 0xBF	; 191
     100:	98 0f       	add	r25, r24
     102:	9a 31       	cpi	r25, 0x1A	; 26
     104:	28 f4       	brcc	.+10     	; 0x110 <writeChar+0x18>
     106:	80 5e       	subi	r24, 0xE0	; 224
     108:	66 30       	cpi	r22, 0x06	; 6
     10a:	71 05       	cpc	r23, r1
     10c:	60 f0       	brcs	.+24     	; 0x126 <writeChar+0x2e>
     10e:	5e c0       	rjmp	.+188    	; 0x1cc <writeChar+0xd4>
     110:	9f e9       	ldi	r25, 0x9F	; 159
     112:	98 0f       	add	r25, r24
     114:	9a 31       	cpi	r25, 0x1A	; 26
     116:	08 f4       	brcc	.+2      	; 0x11a <writeChar+0x22>
     118:	65 c0       	rjmp	.+202    	; 0x1e4 <writeChar+0xec>
     11a:	90 ed       	ldi	r25, 0xD0	; 208
     11c:	98 0f       	add	r25, r24
     11e:	9a 30       	cpi	r25, 0x0A	; 10
     120:	08 f4       	brcc	.+2      	; 0x124 <writeChar+0x2c>
     122:	65 c0       	rjmp	.+202    	; 0x1ee <writeChar+0xf6>
     124:	56 c0       	rjmp	.+172    	; 0x1d2 <writeChar+0xda>
     126:	e8 2f       	mov	r30, r24
     128:	f0 e0       	ldi	r31, 0x00	; 0
     12a:	ee 0f       	add	r30, r30
     12c:	ff 1f       	adc	r31, r31
     12e:	e2 58       	subi	r30, 0x82	; 130
     130:	ff 4f       	sbci	r31, 0xFF	; 255
     132:	40 81       	ld	r20, Z
     134:	51 81       	ldd	r21, Z+1	; 0x01
     136:	08 c0       	rjmp	.+16     	; 0x148 <writeChar+0x50>
     138:	e8 2f       	mov	r30, r24
     13a:	f0 e0       	ldi	r31, 0x00	; 0
     13c:	ee 0f       	add	r30, r30
     13e:	ff 1f       	adc	r31, r31
     140:	e4 53       	subi	r30, 0x34	; 52
     142:	ff 4f       	sbci	r31, 0xFF	; 255
     144:	40 81       	ld	r20, Z
     146:	51 81       	ldd	r21, Z+1	; 0x01
     148:	db 01       	movw	r26, r22
     14a:	a1 70       	andi	r26, 0x01	; 1
     14c:	bb 27       	eor	r27, r27
     14e:	60 ff       	sbrs	r22, 0
     150:	02 c0       	rjmp	.+4      	; 0x156 <writeChar+0x5e>
     152:	70 ef       	ldi	r23, 0xF0	; 240
     154:	01 c0       	rjmp	.+2      	; 0x158 <writeChar+0x60>
     156:	7f e0       	ldi	r23, 0x0F	; 15
     158:	f9 01       	movw	r30, r18
     15a:	ff 23       	and	r31, r31
     15c:	0c f4       	brge	.+2      	; 0x160 <writeChar+0x68>
     15e:	31 96       	adiw	r30, 0x01	; 1
     160:	f5 95       	asr	r31
     162:	e7 95       	ror	r30
     164:	e4 51       	subi	r30, 0x14	; 20
     166:	ff 4f       	sbci	r31, 0xFF	; 255
     168:	21 e0       	ldi	r18, 0x01	; 1
     16a:	30 e0       	ldi	r19, 0x00	; 0
     16c:	67 2f       	mov	r22, r23
     16e:	60 95       	com	r22
     170:	c7 2f       	mov	r28, r23
     172:	c9 79       	andi	r28, 0x99	; 153
     174:	dc 2f       	mov	r29, r28
     176:	d0 95       	com	r29
     178:	03 c0       	rjmp	.+6      	; 0x180 <writeChar+0x88>
     17a:	2f 5f       	subi	r18, 0xFF	; 255
     17c:	3f 4f       	sbci	r19, 0xFF	; 255
     17e:	35 96       	adiw	r30, 0x05	; 5
     180:	84 2f       	mov	r24, r20
     182:	8f 70       	andi	r24, 0x0F	; 15
     184:	10 97       	sbiw	r26, 0x00	; 0
     186:	11 f0       	breq	.+4      	; 0x18c <writeChar+0x94>
     188:	82 95       	swap	r24
     18a:	80 7f       	andi	r24, 0xF0	; 240
     18c:	21 30       	cpi	r18, 0x01	; 1
     18e:	31 05       	cpc	r19, r1
     190:	61 f4       	brne	.+24     	; 0x1aa <writeChar+0xb2>
     192:	90 81       	ld	r25, Z
     194:	9d 23       	and	r25, r29
     196:	8c 23       	and	r24, r28
     198:	89 2b       	or	r24, r25
     19a:	80 83       	st	Z, r24
     19c:	52 95       	swap	r21
     19e:	42 95       	swap	r20
     1a0:	4f 70       	andi	r20, 0x0F	; 15
     1a2:	45 27       	eor	r20, r21
     1a4:	5f 70       	andi	r21, 0x0F	; 15
     1a6:	45 27       	eor	r20, r21
     1a8:	e8 cf       	rjmp	.-48     	; 0x17a <writeChar+0x82>
     1aa:	90 81       	ld	r25, Z
     1ac:	96 23       	and	r25, r22
     1ae:	87 23       	and	r24, r23
     1b0:	89 2b       	or	r24, r25
     1b2:	80 83       	st	Z, r24
     1b4:	52 95       	swap	r21
     1b6:	42 95       	swap	r20
     1b8:	4f 70       	andi	r20, 0x0F	; 15
     1ba:	45 27       	eor	r20, r21
     1bc:	5f 70       	andi	r21, 0x0F	; 15
     1be:	45 27       	eor	r20, r21
     1c0:	24 30       	cpi	r18, 0x04	; 4
     1c2:	31 05       	cpc	r19, r1
     1c4:	d4 f2       	brlt	.-76     	; 0x17a <writeChar+0x82>
     1c6:	80 e0       	ldi	r24, 0x00	; 0
     1c8:	90 e0       	ldi	r25, 0x00	; 0
     1ca:	16 c0       	rjmp	.+44     	; 0x1f8 <writeChar+0x100>
     1cc:	8f ef       	ldi	r24, 0xFF	; 255
     1ce:	9f ef       	ldi	r25, 0xFF	; 255
     1d0:	13 c0       	rjmp	.+38     	; 0x1f8 <writeChar+0x100>
     1d2:	8f ef       	ldi	r24, 0xFF	; 255
     1d4:	9f ef       	ldi	r25, 0xFF	; 255
     1d6:	10 c0       	rjmp	.+32     	; 0x1f8 <writeChar+0x100>
     1d8:	8f ef       	ldi	r24, 0xFF	; 255
     1da:	9f ef       	ldi	r25, 0xFF	; 255
     1dc:	0d c0       	rjmp	.+26     	; 0x1f8 <writeChar+0x100>
     1de:	8f ef       	ldi	r24, 0xFF	; 255
     1e0:	9f ef       	ldi	r25, 0xFF	; 255
     1e2:	0a c0       	rjmp	.+20     	; 0x1f8 <writeChar+0x100>
     1e4:	66 30       	cpi	r22, 0x06	; 6
     1e6:	71 05       	cpc	r23, r1
     1e8:	08 f4       	brcc	.+2      	; 0x1ec <writeChar+0xf4>
     1ea:	9d cf       	rjmp	.-198    	; 0x126 <writeChar+0x2e>
     1ec:	f5 cf       	rjmp	.-22     	; 0x1d8 <writeChar+0xe0>
     1ee:	66 30       	cpi	r22, 0x06	; 6
     1f0:	71 05       	cpc	r23, r1
     1f2:	08 f4       	brcc	.+2      	; 0x1f6 <writeChar+0xfe>
     1f4:	a1 cf       	rjmp	.-190    	; 0x138 <writeChar+0x40>
     1f6:	f3 cf       	rjmp	.-26     	; 0x1de <writeChar+0xe6>
     1f8:	df 91       	pop	r29
     1fa:	cf 91       	pop	r28
     1fc:	08 95       	ret

000001fe <printAt>:

int printAt(long num, int pos) {
     1fe:	cf 92       	push	r12
     200:	df 92       	push	r13
     202:	ef 92       	push	r14
     204:	ff 92       	push	r15
     206:	cf 93       	push	r28
     208:	df 93       	push	r29
     20a:	6b 01       	movw	r12, r22
     20c:	7c 01       	movw	r14, r24
     20e:	ea 01       	movw	r28, r20
	if (writeChar((num % 100) / 10 + '0', pos) == -1) return -1;
     210:	24 e6       	ldi	r18, 0x64	; 100
     212:	30 e0       	ldi	r19, 0x00	; 0
     214:	40 e0       	ldi	r20, 0x00	; 0
     216:	50 e0       	ldi	r21, 0x00	; 0
     218:	0e 94 3e 11 	call	0x227c	; 0x227c <__divmodsi4>
     21c:	2a e0       	ldi	r18, 0x0A	; 10
     21e:	30 e0       	ldi	r19, 0x00	; 0
     220:	40 e0       	ldi	r20, 0x00	; 0
     222:	50 e0       	ldi	r21, 0x00	; 0
     224:	0e 94 3e 11 	call	0x227c	; 0x227c <__divmodsi4>
     228:	be 01       	movw	r22, r28
     22a:	80 e3       	ldi	r24, 0x30	; 48
     22c:	82 0f       	add	r24, r18
     22e:	0e 94 7c 00 	call	0xf8	; 0xf8 <writeChar>
     232:	8f 3f       	cpi	r24, 0xFF	; 255
     234:	2f ef       	ldi	r18, 0xFF	; 255
     236:	92 07       	cpc	r25, r18
     238:	71 f0       	breq	.+28     	; 0x256 <__EEPROM_REGION_LENGTH__+0x56>
	return writeChar(num % 10 + '0', pos+1);
     23a:	21 96       	adiw	r28, 0x01	; 1
     23c:	c7 01       	movw	r24, r14
     23e:	b6 01       	movw	r22, r12
     240:	2a e0       	ldi	r18, 0x0A	; 10
     242:	30 e0       	ldi	r19, 0x00	; 0
     244:	40 e0       	ldi	r20, 0x00	; 0
     246:	50 e0       	ldi	r21, 0x00	; 0
     248:	0e 94 3e 11 	call	0x227c	; 0x227c <__divmodsi4>
     24c:	86 2f       	mov	r24, r22
     24e:	be 01       	movw	r22, r28
     250:	80 5d       	subi	r24, 0xD0	; 208
     252:	0e 94 7c 00 	call	0xf8	; 0xf8 <writeChar>
}
     256:	df 91       	pop	r29
     258:	cf 91       	pop	r28
     25a:	ff 90       	pop	r15
     25c:	ef 90       	pop	r14
     25e:	df 90       	pop	r13
     260:	cf 90       	pop	r12
     262:	08 95       	ret

00000264 <init_joyst>:
#include "objects/Controller.h"
#include "objects/SignalWriter.h"


void init_joyst() {
	PORTB = PORTB | (1 << PB7) | (1 << PB6) | (1 << PB4);
     264:	85 b1       	in	r24, 0x05	; 5
     266:	80 6d       	ori	r24, 0xD0	; 208
     268:	85 b9       	out	0x05, r24	; 5
	PORTE = PORTE | (1 << PE3) | (1 << PE2);
     26a:	8e b1       	in	r24, 0x0e	; 14
     26c:	8c 60       	ori	r24, 0x0C	; 12
     26e:	8e b9       	out	0x0e, r24	; 14
	// Setup external interrupts.
	EIMSK  = (1 << PCIE1) | (1 << PCIE0);
     270:	80 ec       	ldi	r24, 0xC0	; 192
     272:	8d bb       	out	0x1d, r24	; 29
	// Register that is connected to the joystick for generating interrupts.
	// PB6 is for example connected to Pin Change Interrupt 14 = PCINT14, means that PB6 can serve as 
	// an external interrupt source.
	PCMSK1 = (1 << PCINT15) | (1 << PCINT14) | (1 << PCINT12);
     274:	80 ed       	ldi	r24, 0xD0	; 208
     276:	80 93 6c 00 	sts	0x006C, r24	; 0x80006c <__TEXT_REGION_LENGTH__+0x7fc06c>
	PCMSK0 = (1 << PCINT2) | (1 << PCINT3);
     27a:	8c e0       	ldi	r24, 0x0C	; 12
     27c:	80 93 6b 00 	sts	0x006B, r24	; 0x80006b <__TEXT_REGION_LENGTH__+0x7fc06b>
     280:	08 95       	ret

00000282 <main>:
static Controller ctrl = initController(&pg0, &pg1);
// Setup joystick with the pulse generators.
static Joystick js = initJoystick(&ctrl);

int main(void) {
	init_lcd();
     282:	0e 94 4d 00 	call	0x9a	; 0x9a <init_lcd>
	init_joyst();
     286:	0e 94 32 01 	call	0x264	; 0x264 <init_joyst>
	clear();
     28a:	0e 94 5a 00 	call	0xb4	; 0xb4 <clear>
	
	INSTALL(&js, joystick_change_porte, IRQ_PCINT0);
     28e:	41 e0       	ldi	r20, 0x01	; 1
     290:	6b e3       	ldi	r22, 0x3B	; 59
     292:	73 e0       	ldi	r23, 0x03	; 3
     294:	80 e0       	ldi	r24, 0x00	; 0
     296:	91 e0       	ldi	r25, 0x01	; 1
     298:	0e 94 08 11 	call	0x2210	; 0x2210 <install>
	INSTALL(&js, joystick_change_portb, IRQ_PCINT1);
     29c:	42 e0       	ldi	r20, 0x02	; 2
     29e:	6b ed       	ldi	r22, 0xDB	; 219
     2a0:	72 e0       	ldi	r23, 0x02	; 2
     2a2:	80 e0       	ldi	r24, 0x00	; 0
     2a4:	91 e0       	ldi	r25, 0x01	; 1
     2a6:	0e 94 08 11 	call	0x2210	; 0x2210 <install>
	
	return TINYTIMBER(&ctrl, ctrl_start, 0);
     2aa:	40 e0       	ldi	r20, 0x00	; 0
     2ac:	50 e0       	ldi	r21, 0x00	; 0
     2ae:	6d ea       	ldi	r22, 0xAD	; 173
     2b0:	72 e0       	ldi	r23, 0x02	; 2
     2b2:	87 e0       	ldi	r24, 0x07	; 7
     2b4:	91 e0       	ldi	r25, 0x01	; 1
     2b6:	0e 94 22 11 	call	0x2244	; 0x2244 <tinytimber>
}
     2ba:	08 95       	ret

000002bc <ctrl_set_active>:
#define POS_ONE 0
#define POS_TWO 4
#define GET_POS(s) ((s) == 0 ? POS_ONE : POS_TWO)

int ctrl_set_active(Controller* self, int arg) {
	self->currently_selected = arg;
     2bc:	fc 01       	movw	r30, r24
     2be:	64 83       	std	Z+4, r22	; 0x04
	LCDDR0 = (LCDDR0 & ~SPECIAL_MASK) | (arg == 0 ? DISPLAY_ONE : DISPLAY_TWO);
     2c0:	80 91 ec 00 	lds	r24, 0x00EC	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7fc0ec>
     2c4:	89 79       	andi	r24, 0x99	; 153
     2c6:	67 2b       	or	r22, r23
     2c8:	11 f0       	breq	.+4      	; 0x2ce <ctrl_set_active+0x12>
     2ca:	90 e6       	ldi	r25, 0x60	; 96
     2cc:	01 c0       	rjmp	.+2      	; 0x2d0 <ctrl_set_active+0x14>
     2ce:	96 e0       	ldi	r25, 0x06	; 6
     2d0:	89 2b       	or	r24, r25
     2d2:	80 93 ec 00 	sts	0x00EC, r24	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7fc0ec>
	return 0;
}
     2d6:	80 e0       	ldi	r24, 0x00	; 0
     2d8:	90 e0       	ldi	r25, 0x00	; 0
     2da:	08 95       	ret

000002dc <ctrl_delayed_inc>:
	printAt(freq, GET_POS(self->currently_selected));
	self->temp_msg = AFTER(SEC(1), self, ctrl_delayed_dec, arg);
	return 0;
}

int ctrl_delayed_inc(Controller* self, int arg) {
     2dc:	cf 92       	push	r12
     2de:	df 92       	push	r13
     2e0:	ef 92       	push	r14
     2e2:	ff 92       	push	r15
     2e4:	0f 93       	push	r16
     2e6:	1f 93       	push	r17
     2e8:	cf 93       	push	r28
     2ea:	df 93       	push	r29
	if (self->temp_msg != NULL) {
     2ec:	fc 01       	movw	r30, r24
     2ee:	21 85       	ldd	r18, Z+9	; 0x09
     2f0:	32 85       	ldd	r19, Z+10	; 0x0a
     2f2:	23 2b       	or	r18, r19
     2f4:	89 f1       	breq	.+98     	; 0x358 <ctrl_delayed_inc+0x7c>
     2f6:	6b 01       	movw	r12, r22
     2f8:	ec 01       	movw	r28, r24
		PGenerator* current = self->pgs[self->currently_selected];
     2fa:	e4 81       	ldd	r30, Z+4	; 0x04
     2fc:	f0 e0       	ldi	r31, 0x00	; 0
     2fe:	ee 0f       	add	r30, r30
     300:	ff 1f       	adc	r31, r31
     302:	e8 0f       	add	r30, r24
     304:	f9 1f       	adc	r31, r25
		int freq = SYNC(current, pg_increase_freq, 1);
     306:	41 e0       	ldi	r20, 0x01	; 1
     308:	50 e0       	ldi	r21, 0x00	; 0
     30a:	61 ed       	ldi	r22, 0xD1	; 209
     30c:	73 e0       	ldi	r23, 0x03	; 3
     30e:	85 81       	ldd	r24, Z+5	; 0x05
     310:	96 81       	ldd	r25, Z+6	; 0x06
     312:	0e 94 bc 0f 	call	0x1f78	; 0x1f78 <sync>
     316:	bc 01       	movw	r22, r24
		printAt(freq, GET_POS(self->currently_selected));
     318:	8c 81       	ldd	r24, Y+4	; 0x04
     31a:	88 23       	and	r24, r24
     31c:	19 f0       	breq	.+6      	; 0x324 <ctrl_delayed_inc+0x48>
     31e:	44 e0       	ldi	r20, 0x04	; 4
     320:	50 e0       	ldi	r21, 0x00	; 0
     322:	02 c0       	rjmp	.+4      	; 0x328 <ctrl_delayed_inc+0x4c>
     324:	40 e0       	ldi	r20, 0x00	; 0
     326:	50 e0       	ldi	r21, 0x00	; 0
     328:	07 2e       	mov	r0, r23
     32a:	00 0c       	add	r0, r0
     32c:	88 0b       	sbc	r24, r24
     32e:	99 0b       	sbc	r25, r25
     330:	0e 94 ff 00 	call	0x1fe	; 0x1fe <printAt>
		self->temp_msg = AFTER(MSEC(100), self, ctrl_delayed_inc, arg);
     334:	0f 2e       	mov	r0, r31
     336:	fe e6       	ldi	r31, 0x6E	; 110
     338:	ef 2e       	mov	r14, r31
     33a:	f1 e0       	ldi	r31, 0x01	; 1
     33c:	ff 2e       	mov	r15, r31
     33e:	f0 2d       	mov	r31, r0
     340:	8e 01       	movw	r16, r28
     342:	20 e0       	ldi	r18, 0x00	; 0
     344:	30 e0       	ldi	r19, 0x00	; 0
     346:	a9 01       	movw	r20, r18
     348:	65 e3       	ldi	r22, 0x35	; 53
     34a:	7c e0       	ldi	r23, 0x0C	; 12
     34c:	80 e0       	ldi	r24, 0x00	; 0
     34e:	90 e0       	ldi	r25, 0x00	; 0
     350:	0e 94 ab 0e 	call	0x1d56	; 0x1d56 <async>
     354:	9a 87       	std	Y+10, r25	; 0x0a
     356:	89 87       	std	Y+9, r24	; 0x09
	}
	return 0;
}
     358:	80 e0       	ldi	r24, 0x00	; 0
     35a:	90 e0       	ldi	r25, 0x00	; 0
     35c:	df 91       	pop	r29
     35e:	cf 91       	pop	r28
     360:	1f 91       	pop	r17
     362:	0f 91       	pop	r16
     364:	ff 90       	pop	r15
     366:	ef 90       	pop	r14
     368:	df 90       	pop	r13
     36a:	cf 90       	pop	r12
     36c:	08 95       	ret

0000036e <ctrl_delayed_dec>:

int ctrl_delayed_dec(Controller* self, int arg) {
     36e:	cf 92       	push	r12
     370:	df 92       	push	r13
     372:	ef 92       	push	r14
     374:	ff 92       	push	r15
     376:	0f 93       	push	r16
     378:	1f 93       	push	r17
     37a:	cf 93       	push	r28
     37c:	df 93       	push	r29
	if (self->temp_msg != NULL) {
     37e:	fc 01       	movw	r30, r24
     380:	21 85       	ldd	r18, Z+9	; 0x09
     382:	32 85       	ldd	r19, Z+10	; 0x0a
     384:	23 2b       	or	r18, r19
     386:	89 f1       	breq	.+98     	; 0x3ea <ctrl_delayed_dec+0x7c>
     388:	6b 01       	movw	r12, r22
     38a:	ec 01       	movw	r28, r24
		PGenerator* current = self->pgs[self->currently_selected];
     38c:	e4 81       	ldd	r30, Z+4	; 0x04
     38e:	f0 e0       	ldi	r31, 0x00	; 0
     390:	ee 0f       	add	r30, r30
     392:	ff 1f       	adc	r31, r31
     394:	e8 0f       	add	r30, r24
     396:	f9 1f       	adc	r31, r25
		int freq = SYNC(current, pg_decrease_freq, 1);
     398:	41 e0       	ldi	r20, 0x01	; 1
     39a:	50 e0       	ldi	r21, 0x00	; 0
     39c:	62 e0       	ldi	r22, 0x02	; 2
     39e:	74 e0       	ldi	r23, 0x04	; 4
     3a0:	85 81       	ldd	r24, Z+5	; 0x05
     3a2:	96 81       	ldd	r25, Z+6	; 0x06
     3a4:	0e 94 bc 0f 	call	0x1f78	; 0x1f78 <sync>
     3a8:	bc 01       	movw	r22, r24
		printAt(freq, GET_POS(self->currently_selected));
     3aa:	8c 81       	ldd	r24, Y+4	; 0x04
     3ac:	88 23       	and	r24, r24
     3ae:	19 f0       	breq	.+6      	; 0x3b6 <ctrl_delayed_dec+0x48>
     3b0:	44 e0       	ldi	r20, 0x04	; 4
     3b2:	50 e0       	ldi	r21, 0x00	; 0
     3b4:	02 c0       	rjmp	.+4      	; 0x3ba <ctrl_delayed_dec+0x4c>
     3b6:	40 e0       	ldi	r20, 0x00	; 0
     3b8:	50 e0       	ldi	r21, 0x00	; 0
     3ba:	07 2e       	mov	r0, r23
     3bc:	00 0c       	add	r0, r0
     3be:	88 0b       	sbc	r24, r24
     3c0:	99 0b       	sbc	r25, r25
     3c2:	0e 94 ff 00 	call	0x1fe	; 0x1fe <printAt>
		self->temp_msg = AFTER(MSEC(100), self, ctrl_delayed_dec, arg);
     3c6:	0f 2e       	mov	r0, r31
     3c8:	f7 eb       	ldi	r31, 0xB7	; 183
     3ca:	ef 2e       	mov	r14, r31
     3cc:	f1 e0       	ldi	r31, 0x01	; 1
     3ce:	ff 2e       	mov	r15, r31
     3d0:	f0 2d       	mov	r31, r0
     3d2:	8e 01       	movw	r16, r28
     3d4:	20 e0       	ldi	r18, 0x00	; 0
     3d6:	30 e0       	ldi	r19, 0x00	; 0
     3d8:	a9 01       	movw	r20, r18
     3da:	65 e3       	ldi	r22, 0x35	; 53
     3dc:	7c e0       	ldi	r23, 0x0C	; 12
     3de:	80 e0       	ldi	r24, 0x00	; 0
     3e0:	90 e0       	ldi	r25, 0x00	; 0
     3e2:	0e 94 ab 0e 	call	0x1d56	; 0x1d56 <async>
     3e6:	9a 87       	std	Y+10, r25	; 0x0a
     3e8:	89 87       	std	Y+9, r24	; 0x09
	}
	return 0;
}
     3ea:	80 e0       	ldi	r24, 0x00	; 0
     3ec:	90 e0       	ldi	r25, 0x00	; 0
     3ee:	df 91       	pop	r29
     3f0:	cf 91       	pop	r28
     3f2:	1f 91       	pop	r17
     3f4:	0f 91       	pop	r16
     3f6:	ff 90       	pop	r15
     3f8:	ef 90       	pop	r14
     3fa:	df 90       	pop	r13
     3fc:	cf 90       	pop	r12
     3fe:	08 95       	ret

00000400 <ctrl_save_state>:
	self->currently_selected = arg;
	LCDDR0 = (LCDDR0 & ~SPECIAL_MASK) | (arg == 0 ? DISPLAY_ONE : DISPLAY_TWO);
	return 0;
}

int ctrl_save_state(Controller* self, __attribute__((unused)) int arg) {
     400:	cf 93       	push	r28
     402:	df 93       	push	r29
     404:	ec 01       	movw	r28, r24
	PGenerator* current = self->pgs[self->currently_selected];
     406:	ec 81       	ldd	r30, Y+4	; 0x04
     408:	f0 e0       	ldi	r31, 0x00	; 0
     40a:	ee 0f       	add	r30, r30
     40c:	ff 1f       	adc	r31, r31
     40e:	e8 0f       	add	r30, r24
     410:	f9 1f       	adc	r31, r25
	int freq = SYNC(current, pg_save_state, 0);
     412:	40 e0       	ldi	r20, 0x00	; 0
     414:	50 e0       	ldi	r21, 0x00	; 0
     416:	60 e3       	ldi	r22, 0x30	; 48
     418:	74 e0       	ldi	r23, 0x04	; 4
     41a:	85 81       	ldd	r24, Z+5	; 0x05
     41c:	96 81       	ldd	r25, Z+6	; 0x06
     41e:	0e 94 bc 0f 	call	0x1f78	; 0x1f78 <sync>
     422:	bc 01       	movw	r22, r24
	
	printAt(freq, GET_POS(self->currently_selected));
     424:	8c 81       	ldd	r24, Y+4	; 0x04
     426:	88 23       	and	r24, r24
     428:	19 f0       	breq	.+6      	; 0x430 <ctrl_save_state+0x30>
     42a:	44 e0       	ldi	r20, 0x04	; 4
     42c:	50 e0       	ldi	r21, 0x00	; 0
     42e:	02 c0       	rjmp	.+4      	; 0x434 <ctrl_save_state+0x34>
     430:	40 e0       	ldi	r20, 0x00	; 0
     432:	50 e0       	ldi	r21, 0x00	; 0
     434:	07 2e       	mov	r0, r23
     436:	00 0c       	add	r0, r0
     438:	88 0b       	sbc	r24, r24
     43a:	99 0b       	sbc	r25, r25
     43c:	0e 94 ff 00 	call	0x1fe	; 0x1fe <printAt>
	return 0;
}
     440:	80 e0       	ldi	r24, 0x00	; 0
     442:	90 e0       	ldi	r25, 0x00	; 0
     444:	df 91       	pop	r29
     446:	cf 91       	pop	r28
     448:	08 95       	ret

0000044a <ctrl_increase_freq>:



int ctrl_increase_freq(Controller* self, __attribute__((unused)) int arg) {
     44a:	cf 92       	push	r12
     44c:	df 92       	push	r13
     44e:	ef 92       	push	r14
     450:	ff 92       	push	r15
     452:	0f 93       	push	r16
     454:	1f 93       	push	r17
     456:	cf 93       	push	r28
     458:	df 93       	push	r29
     45a:	ec 01       	movw	r28, r24
     45c:	6b 01       	movw	r12, r22
	PGenerator* current = self->pgs[self->currently_selected];
     45e:	ec 81       	ldd	r30, Y+4	; 0x04
     460:	f0 e0       	ldi	r31, 0x00	; 0
     462:	ee 0f       	add	r30, r30
     464:	ff 1f       	adc	r31, r31
     466:	e8 0f       	add	r30, r24
     468:	f9 1f       	adc	r31, r25
	int freq = SYNC(current, pg_increase_freq, 1);
     46a:	41 e0       	ldi	r20, 0x01	; 1
     46c:	50 e0       	ldi	r21, 0x00	; 0
     46e:	61 ed       	ldi	r22, 0xD1	; 209
     470:	73 e0       	ldi	r23, 0x03	; 3
     472:	85 81       	ldd	r24, Z+5	; 0x05
     474:	96 81       	ldd	r25, Z+6	; 0x06
     476:	0e 94 bc 0f 	call	0x1f78	; 0x1f78 <sync>
     47a:	bc 01       	movw	r22, r24
	
	printAt(freq, GET_POS(self->currently_selected));
     47c:	8c 81       	ldd	r24, Y+4	; 0x04
     47e:	88 23       	and	r24, r24
     480:	19 f0       	breq	.+6      	; 0x488 <ctrl_increase_freq+0x3e>
     482:	44 e0       	ldi	r20, 0x04	; 4
     484:	50 e0       	ldi	r21, 0x00	; 0
     486:	02 c0       	rjmp	.+4      	; 0x48c <ctrl_increase_freq+0x42>
     488:	40 e0       	ldi	r20, 0x00	; 0
     48a:	50 e0       	ldi	r21, 0x00	; 0
     48c:	07 2e       	mov	r0, r23
     48e:	00 0c       	add	r0, r0
     490:	88 0b       	sbc	r24, r24
     492:	99 0b       	sbc	r25, r25
     494:	0e 94 ff 00 	call	0x1fe	; 0x1fe <printAt>
	self->temp_msg = AFTER(SEC(1), self, ctrl_delayed_inc, arg);
     498:	0f 2e       	mov	r0, r31
     49a:	fe e6       	ldi	r31, 0x6E	; 110
     49c:	ef 2e       	mov	r14, r31
     49e:	f1 e0       	ldi	r31, 0x01	; 1
     4a0:	ff 2e       	mov	r15, r31
     4a2:	f0 2d       	mov	r31, r0
     4a4:	8e 01       	movw	r16, r28
     4a6:	20 e0       	ldi	r18, 0x00	; 0
     4a8:	30 e0       	ldi	r19, 0x00	; 0
     4aa:	a9 01       	movw	r20, r18
     4ac:	62 e1       	ldi	r22, 0x12	; 18
     4ae:	7a e7       	ldi	r23, 0x7A	; 122
     4b0:	80 e0       	ldi	r24, 0x00	; 0
     4b2:	90 e0       	ldi	r25, 0x00	; 0
     4b4:	0e 94 ab 0e 	call	0x1d56	; 0x1d56 <async>
     4b8:	9a 87       	std	Y+10, r25	; 0x0a
     4ba:	89 87       	std	Y+9, r24	; 0x09
	return 0;
}
     4bc:	80 e0       	ldi	r24, 0x00	; 0
     4be:	90 e0       	ldi	r25, 0x00	; 0
     4c0:	df 91       	pop	r29
     4c2:	cf 91       	pop	r28
     4c4:	1f 91       	pop	r17
     4c6:	0f 91       	pop	r16
     4c8:	ff 90       	pop	r15
     4ca:	ef 90       	pop	r14
     4cc:	df 90       	pop	r13
     4ce:	cf 90       	pop	r12
     4d0:	08 95       	ret

000004d2 <ctrl_decrease_freq>:

int ctrl_decrease_freq(Controller* self, __attribute__((unused)) int arg) {
     4d2:	cf 92       	push	r12
     4d4:	df 92       	push	r13
     4d6:	ef 92       	push	r14
     4d8:	ff 92       	push	r15
     4da:	0f 93       	push	r16
     4dc:	1f 93       	push	r17
     4de:	cf 93       	push	r28
     4e0:	df 93       	push	r29
     4e2:	ec 01       	movw	r28, r24
     4e4:	6b 01       	movw	r12, r22
	PGenerator* current = self->pgs[self->currently_selected];
     4e6:	ec 81       	ldd	r30, Y+4	; 0x04
     4e8:	f0 e0       	ldi	r31, 0x00	; 0
     4ea:	ee 0f       	add	r30, r30
     4ec:	ff 1f       	adc	r31, r31
     4ee:	e8 0f       	add	r30, r24
     4f0:	f9 1f       	adc	r31, r25
	int freq = SYNC(current, pg_decrease_freq, 1);
     4f2:	41 e0       	ldi	r20, 0x01	; 1
     4f4:	50 e0       	ldi	r21, 0x00	; 0
     4f6:	62 e0       	ldi	r22, 0x02	; 2
     4f8:	74 e0       	ldi	r23, 0x04	; 4
     4fa:	85 81       	ldd	r24, Z+5	; 0x05
     4fc:	96 81       	ldd	r25, Z+6	; 0x06
     4fe:	0e 94 bc 0f 	call	0x1f78	; 0x1f78 <sync>
     502:	bc 01       	movw	r22, r24
	
	printAt(freq, GET_POS(self->currently_selected));
     504:	8c 81       	ldd	r24, Y+4	; 0x04
     506:	88 23       	and	r24, r24
     508:	19 f0       	breq	.+6      	; 0x510 <__stack+0x11>
     50a:	44 e0       	ldi	r20, 0x04	; 4
     50c:	50 e0       	ldi	r21, 0x00	; 0
     50e:	02 c0       	rjmp	.+4      	; 0x514 <__stack+0x15>
     510:	40 e0       	ldi	r20, 0x00	; 0
     512:	50 e0       	ldi	r21, 0x00	; 0
     514:	07 2e       	mov	r0, r23
     516:	00 0c       	add	r0, r0
     518:	88 0b       	sbc	r24, r24
     51a:	99 0b       	sbc	r25, r25
     51c:	0e 94 ff 00 	call	0x1fe	; 0x1fe <printAt>
	self->temp_msg = AFTER(SEC(1), self, ctrl_delayed_dec, arg);
     520:	0f 2e       	mov	r0, r31
     522:	f7 eb       	ldi	r31, 0xB7	; 183
     524:	ef 2e       	mov	r14, r31
     526:	f1 e0       	ldi	r31, 0x01	; 1
     528:	ff 2e       	mov	r15, r31
     52a:	f0 2d       	mov	r31, r0
     52c:	8e 01       	movw	r16, r28
     52e:	20 e0       	ldi	r18, 0x00	; 0
     530:	30 e0       	ldi	r19, 0x00	; 0
     532:	a9 01       	movw	r20, r18
     534:	62 e1       	ldi	r22, 0x12	; 18
     536:	7a e7       	ldi	r23, 0x7A	; 122
     538:	80 e0       	ldi	r24, 0x00	; 0
     53a:	90 e0       	ldi	r25, 0x00	; 0
     53c:	0e 94 ab 0e 	call	0x1d56	; 0x1d56 <async>
     540:	9a 87       	std	Y+10, r25	; 0x0a
     542:	89 87       	std	Y+9, r24	; 0x09
	return 0;
}
     544:	80 e0       	ldi	r24, 0x00	; 0
     546:	90 e0       	ldi	r25, 0x00	; 0
     548:	df 91       	pop	r29
     54a:	cf 91       	pop	r28
     54c:	1f 91       	pop	r17
     54e:	0f 91       	pop	r16
     550:	ff 90       	pop	r15
     552:	ef 90       	pop	r14
     554:	df 90       	pop	r13
     556:	cf 90       	pop	r12
     558:	08 95       	ret

0000055a <ctrl_start>:
		self->temp_msg = AFTER(MSEC(100), self, ctrl_delayed_dec, arg);
	}
	return 0;
}

int ctrl_start(Controller* self, __attribute__((unused)) int arg) {
     55a:	cf 92       	push	r12
     55c:	df 92       	push	r13
     55e:	ef 92       	push	r14
     560:	ff 92       	push	r15
     562:	0f 93       	push	r16
     564:	1f 93       	push	r17
	ASYNC(self, ctrl_set_active, 0);
     566:	c1 2c       	mov	r12, r1
     568:	d1 2c       	mov	r13, r1
     56a:	0f 2e       	mov	r0, r31
     56c:	fe e5       	ldi	r31, 0x5E	; 94
     56e:	ef 2e       	mov	r14, r31
     570:	f1 e0       	ldi	r31, 0x01	; 1
     572:	ff 2e       	mov	r15, r31
     574:	f0 2d       	mov	r31, r0
     576:	8c 01       	movw	r16, r24
     578:	20 e0       	ldi	r18, 0x00	; 0
     57a:	30 e0       	ldi	r19, 0x00	; 0
     57c:	a9 01       	movw	r20, r18
     57e:	60 e0       	ldi	r22, 0x00	; 0
     580:	70 e0       	ldi	r23, 0x00	; 0
     582:	cb 01       	movw	r24, r22
     584:	0e 94 ab 0e 	call	0x1d56	; 0x1d56 <async>
	printAt(0, POS_ONE);
     588:	40 e0       	ldi	r20, 0x00	; 0
     58a:	50 e0       	ldi	r21, 0x00	; 0
     58c:	60 e0       	ldi	r22, 0x00	; 0
     58e:	70 e0       	ldi	r23, 0x00	; 0
     590:	cb 01       	movw	r24, r22
     592:	0e 94 ff 00 	call	0x1fe	; 0x1fe <printAt>
	printAt(0, POS_TWO);
     596:	44 e0       	ldi	r20, 0x04	; 4
     598:	50 e0       	ldi	r21, 0x00	; 0
     59a:	60 e0       	ldi	r22, 0x00	; 0
     59c:	70 e0       	ldi	r23, 0x00	; 0
     59e:	cb 01       	movw	r24, r22
     5a0:	0e 94 ff 00 	call	0x1fe	; 0x1fe <printAt>
	return 0;
}
     5a4:	80 e0       	ldi	r24, 0x00	; 0
     5a6:	90 e0       	ldi	r25, 0x00	; 0
     5a8:	1f 91       	pop	r17
     5aa:	0f 91       	pop	r16
     5ac:	ff 90       	pop	r15
     5ae:	ef 90       	pop	r14
     5b0:	df 90       	pop	r13
     5b2:	cf 90       	pop	r12
     5b4:	08 95       	ret

000005b6 <joystick_change_portb>:
*/

// Check if bit `b` in `p` is set to zero.
#define BIT_NOT_SET(p, b) ((((p) >> (b)) & 0x1) == 0)

int joystick_change_portb(Joystick* self, __attribute__((unused)) int arg) {
     5b6:	cf 92       	push	r12
     5b8:	df 92       	push	r13
     5ba:	ef 92       	push	r14
     5bc:	ff 92       	push	r15
     5be:	0f 93       	push	r16
     5c0:	1f 93       	push	r17
     5c2:	cf 93       	push	r28
     5c4:	df 93       	push	r29
     5c6:	ec 01       	movw	r28, r24
	uint8_t p = PINB;
     5c8:	83 b1       	in	r24, 0x03	; 3
	
	if (BIT_NOT_SET(p, PINB7)) {
     5ca:	88 23       	and	r24, r24
     5cc:	9c f0       	brlt	.+38     	; 0x5f4 <joystick_change_portb+0x3e>
		ASYNC(self->ctrl, ctrl_decrease_freq, 0); // Joystick down.
     5ce:	0c 81       	ldd	r16, Y+4	; 0x04
     5d0:	1d 81       	ldd	r17, Y+5	; 0x05
     5d2:	c1 2c       	mov	r12, r1
     5d4:	d1 2c       	mov	r13, r1
     5d6:	0f 2e       	mov	r0, r31
     5d8:	f9 e6       	ldi	r31, 0x69	; 105
     5da:	ef 2e       	mov	r14, r31
     5dc:	f2 e0       	ldi	r31, 0x02	; 2
     5de:	ff 2e       	mov	r15, r31
     5e0:	f0 2d       	mov	r31, r0
     5e2:	20 e0       	ldi	r18, 0x00	; 0
     5e4:	30 e0       	ldi	r19, 0x00	; 0
     5e6:	a9 01       	movw	r20, r18
     5e8:	60 e0       	ldi	r22, 0x00	; 0
     5ea:	70 e0       	ldi	r23, 0x00	; 0
     5ec:	cb 01       	movw	r24, r22
     5ee:	0e 94 ab 0e 	call	0x1d56	; 0x1d56 <async>
     5f2:	36 c0       	rjmp	.+108    	; 0x660 <joystick_change_portb+0xaa>
	} else if (BIT_NOT_SET(p, PINB6)) {
     5f4:	86 fd       	sbrc	r24, 6
     5f6:	13 c0       	rjmp	.+38     	; 0x61e <joystick_change_portb+0x68>
		ASYNC(self->ctrl, ctrl_increase_freq, 0); // Joystick up.
     5f8:	0c 81       	ldd	r16, Y+4	; 0x04
     5fa:	1d 81       	ldd	r17, Y+5	; 0x05
     5fc:	c1 2c       	mov	r12, r1
     5fe:	d1 2c       	mov	r13, r1
     600:	0f 2e       	mov	r0, r31
     602:	f5 e2       	ldi	r31, 0x25	; 37
     604:	ef 2e       	mov	r14, r31
     606:	f2 e0       	ldi	r31, 0x02	; 2
     608:	ff 2e       	mov	r15, r31
     60a:	f0 2d       	mov	r31, r0
     60c:	20 e0       	ldi	r18, 0x00	; 0
     60e:	30 e0       	ldi	r19, 0x00	; 0
     610:	a9 01       	movw	r20, r18
     612:	60 e0       	ldi	r22, 0x00	; 0
     614:	70 e0       	ldi	r23, 0x00	; 0
     616:	cb 01       	movw	r24, r22
     618:	0e 94 ab 0e 	call	0x1d56	; 0x1d56 <async>
     61c:	21 c0       	rjmp	.+66     	; 0x660 <joystick_change_portb+0xaa>
	} else if (BIT_NOT_SET(p, PINB4)) {
     61e:	84 fd       	sbrc	r24, 4
     620:	13 c0       	rjmp	.+38     	; 0x648 <joystick_change_portb+0x92>
		ASYNC(self->ctrl, ctrl_save_state, 0); // Joystick pushed down.
     622:	0c 81       	ldd	r16, Y+4	; 0x04
     624:	1d 81       	ldd	r17, Y+5	; 0x05
     626:	c1 2c       	mov	r12, r1
     628:	d1 2c       	mov	r13, r1
     62a:	0f 2e       	mov	r0, r31
     62c:	f0 e0       	ldi	r31, 0x00	; 0
     62e:	ef 2e       	mov	r14, r31
     630:	f2 e0       	ldi	r31, 0x02	; 2
     632:	ff 2e       	mov	r15, r31
     634:	f0 2d       	mov	r31, r0
     636:	20 e0       	ldi	r18, 0x00	; 0
     638:	30 e0       	ldi	r19, 0x00	; 0
     63a:	a9 01       	movw	r20, r18
     63c:	60 e0       	ldi	r22, 0x00	; 0
     63e:	70 e0       	ldi	r23, 0x00	; 0
     640:	cb 01       	movw	r24, r22
     642:	0e 94 ab 0e 	call	0x1d56	; 0x1d56 <async>
     646:	0c c0       	rjmp	.+24     	; 0x660 <joystick_change_portb+0xaa>
	} else {
		//ASYNC(self->ctrl, ctrl_reset, 0);
			if(self->ctrl->temp_msg) {
     648:	ec 81       	ldd	r30, Y+4	; 0x04
     64a:	fd 81       	ldd	r31, Y+5	; 0x05
     64c:	81 85       	ldd	r24, Z+9	; 0x09
     64e:	92 85       	ldd	r25, Z+10	; 0x0a
     650:	00 97       	sbiw	r24, 0x00	; 0
     652:	31 f0       	breq	.+12     	; 0x660 <joystick_change_portb+0xaa>
				ABORT(self->ctrl->temp_msg);
     654:	0e 94 b7 10 	call	0x216e	; 0x216e <ABORT>
				self->ctrl->temp_msg = NULL;
     658:	ec 81       	ldd	r30, Y+4	; 0x04
     65a:	fd 81       	ldd	r31, Y+5	; 0x05
     65c:	12 86       	std	Z+10, r1	; 0x0a
     65e:	11 86       	std	Z+9, r1	; 0x09
			}
	}
	
	return 0;
}
     660:	80 e0       	ldi	r24, 0x00	; 0
     662:	90 e0       	ldi	r25, 0x00	; 0
     664:	df 91       	pop	r29
     666:	cf 91       	pop	r28
     668:	1f 91       	pop	r17
     66a:	0f 91       	pop	r16
     66c:	ff 90       	pop	r15
     66e:	ef 90       	pop	r14
     670:	df 90       	pop	r13
     672:	cf 90       	pop	r12
     674:	08 95       	ret

00000676 <joystick_change_porte>:

int joystick_change_porte(Joystick* self, __attribute__((unused)) int arg) {
     676:	cf 92       	push	r12
     678:	df 92       	push	r13
     67a:	ef 92       	push	r14
     67c:	ff 92       	push	r15
     67e:	0f 93       	push	r16
     680:	1f 93       	push	r17
     682:	fc 01       	movw	r30, r24
	uint8_t p = PINE;
     684:	9c b1       	in	r25, 0x0c	; 12
	
	if (BIT_NOT_SET(p, PINE2)) {
     686:	92 fd       	sbrc	r25, 2
     688:	13 c0       	rjmp	.+38     	; 0x6b0 <joystick_change_porte+0x3a>
		ASYNC(self->ctrl, ctrl_set_active, 0); // Joystick left.
     68a:	04 81       	ldd	r16, Z+4	; 0x04
     68c:	15 81       	ldd	r17, Z+5	; 0x05
     68e:	c1 2c       	mov	r12, r1
     690:	d1 2c       	mov	r13, r1
     692:	0f 2e       	mov	r0, r31
     694:	fe e5       	ldi	r31, 0x5E	; 94
     696:	ef 2e       	mov	r14, r31
     698:	f1 e0       	ldi	r31, 0x01	; 1
     69a:	ff 2e       	mov	r15, r31
     69c:	f0 2d       	mov	r31, r0
     69e:	20 e0       	ldi	r18, 0x00	; 0
     6a0:	30 e0       	ldi	r19, 0x00	; 0
     6a2:	a9 01       	movw	r20, r18
     6a4:	60 e0       	ldi	r22, 0x00	; 0
     6a6:	70 e0       	ldi	r23, 0x00	; 0
     6a8:	cb 01       	movw	r24, r22
     6aa:	0e 94 ab 0e 	call	0x1d56	; 0x1d56 <async>
     6ae:	15 c0       	rjmp	.+42     	; 0x6da <joystick_change_porte+0x64>
	} else if (BIT_NOT_SET(p, PINE3)) {
     6b0:	93 fd       	sbrc	r25, 3
     6b2:	13 c0       	rjmp	.+38     	; 0x6da <joystick_change_porte+0x64>
		ASYNC(self->ctrl, ctrl_set_active, 1); // Joystick right.
     6b4:	04 81       	ldd	r16, Z+4	; 0x04
     6b6:	15 81       	ldd	r17, Z+5	; 0x05
     6b8:	cc 24       	eor	r12, r12
     6ba:	c3 94       	inc	r12
     6bc:	d1 2c       	mov	r13, r1
     6be:	0f 2e       	mov	r0, r31
     6c0:	fe e5       	ldi	r31, 0x5E	; 94
     6c2:	ef 2e       	mov	r14, r31
     6c4:	f1 e0       	ldi	r31, 0x01	; 1
     6c6:	ff 2e       	mov	r15, r31
     6c8:	f0 2d       	mov	r31, r0
     6ca:	20 e0       	ldi	r18, 0x00	; 0
     6cc:	30 e0       	ldi	r19, 0x00	; 0
     6ce:	a9 01       	movw	r20, r18
     6d0:	60 e0       	ldi	r22, 0x00	; 0
     6d2:	70 e0       	ldi	r23, 0x00	; 0
     6d4:	cb 01       	movw	r24, r22
     6d6:	0e 94 ab 0e 	call	0x1d56	; 0x1d56 <async>
	}
	
	return 0;
}
     6da:	80 e0       	ldi	r24, 0x00	; 0
     6dc:	90 e0       	ldi	r25, 0x00	; 0
     6de:	1f 91       	pop	r17
     6e0:	0f 91       	pop	r16
     6e2:	ff 90       	pop	r15
     6e4:	ef 90       	pop	r14
     6e6:	df 90       	pop	r13
     6e8:	cf 90       	pop	r12
     6ea:	08 95       	ret

000006ec <pg_update>:
		ASYNC(self->writer, write_zero, self->write_mask);
	}
	return self->freq;
}

int pg_update(PGenerator* self, __attribute__((unused)) int arg) {
     6ec:	cf 92       	push	r12
     6ee:	df 92       	push	r13
     6f0:	ef 92       	push	r14
     6f2:	ff 92       	push	r15
     6f4:	0f 93       	push	r16
     6f6:	1f 93       	push	r17
     6f8:	cf 93       	push	r28
     6fa:	df 93       	push	r29
	if (self->freq != 0) {
     6fc:	fc 01       	movw	r30, r24
     6fe:	24 81       	ldd	r18, Z+4	; 0x04
     700:	22 23       	and	r18, r18
     702:	09 f4       	brne	.+2      	; 0x706 <pg_update+0x1a>
     704:	43 c0       	rjmp	.+134    	; 0x78c <pg_update+0xa0>
     706:	ec 01       	movw	r28, r24
		ASYNC(self->writer, write, self->write_mask);
     708:	c6 80       	ldd	r12, Z+6	; 0x06
     70a:	d1 2c       	mov	r13, r1
     70c:	07 81       	ldd	r16, Z+7	; 0x07
     70e:	10 85       	ldd	r17, Z+8	; 0x08
     710:	0f 2e       	mov	r0, r31
     712:	f0 e7       	ldi	r31, 0x70	; 112
     714:	ef 2e       	mov	r14, r31
     716:	f4 e0       	ldi	r31, 0x04	; 4
     718:	ff 2e       	mov	r15, r31
     71a:	f0 2d       	mov	r31, r0
     71c:	20 e0       	ldi	r18, 0x00	; 0
     71e:	30 e0       	ldi	r19, 0x00	; 0
     720:	a9 01       	movw	r20, r18
     722:	60 e0       	ldi	r22, 0x00	; 0
     724:	70 e0       	ldi	r23, 0x00	; 0
     726:	cb 01       	movw	r24, r22
     728:	0e 94 ab 0e 	call	0x1d56	; 0x1d56 <async>

		uint32_t delay = 1000000 / self->freq;
		AFTER(USEC(delay / 2), self, pg_update, 0);
     72c:	2c 81       	ldd	r18, Y+4	; 0x04
     72e:	30 e0       	ldi	r19, 0x00	; 0
     730:	40 e0       	ldi	r20, 0x00	; 0
     732:	50 e0       	ldi	r21, 0x00	; 0
     734:	60 e4       	ldi	r22, 0x40	; 64
     736:	72 e4       	ldi	r23, 0x42	; 66
     738:	8f e0       	ldi	r24, 0x0F	; 15
     73a:	90 e0       	ldi	r25, 0x00	; 0
     73c:	0e 94 3e 11 	call	0x227c	; 0x227c <__divmodsi4>
     740:	56 95       	lsr	r21
     742:	47 95       	ror	r20
     744:	37 95       	ror	r19
     746:	27 95       	ror	r18
     748:	ad e7       	ldi	r26, 0x7D	; 125
     74a:	b0 e0       	ldi	r27, 0x00	; 0
     74c:	0e 94 5d 11 	call	0x22ba	; 0x22ba <__muluhisi3>
     750:	96 95       	lsr	r25
     752:	87 95       	ror	r24
     754:	77 95       	ror	r23
     756:	67 95       	ror	r22
     758:	96 95       	lsr	r25
     75a:	87 95       	ror	r24
     75c:	77 95       	ror	r23
     75e:	67 95       	ror	r22
     760:	28 ee       	ldi	r18, 0xE8	; 232
     762:	33 e0       	ldi	r19, 0x03	; 3
     764:	40 e0       	ldi	r20, 0x00	; 0
     766:	50 e0       	ldi	r21, 0x00	; 0
     768:	0e 94 3e 11 	call	0x227c	; 0x227c <__divmodsi4>
     76c:	ca 01       	movw	r24, r20
     76e:	b9 01       	movw	r22, r18
     770:	c1 2c       	mov	r12, r1
     772:	d1 2c       	mov	r13, r1
     774:	0f 2e       	mov	r0, r31
     776:	f6 e7       	ldi	r31, 0x76	; 118
     778:	ef 2e       	mov	r14, r31
     77a:	f3 e0       	ldi	r31, 0x03	; 3
     77c:	ff 2e       	mov	r15, r31
     77e:	f0 2d       	mov	r31, r0
     780:	8e 01       	movw	r16, r28
     782:	20 e0       	ldi	r18, 0x00	; 0
     784:	30 e0       	ldi	r19, 0x00	; 0
     786:	a9 01       	movw	r20, r18
     788:	0e 94 ab 0e 	call	0x1d56	; 0x1d56 <async>
	}
	return 0;
     78c:	80 e0       	ldi	r24, 0x00	; 0
     78e:	90 e0       	ldi	r25, 0x00	; 0
     790:	df 91       	pop	r29
     792:	cf 91       	pop	r28
     794:	1f 91       	pop	r17
     796:	0f 91       	pop	r16
     798:	ff 90       	pop	r15
     79a:	ef 90       	pop	r14
     79c:	df 90       	pop	r13
     79e:	cf 90       	pop	r12
     7a0:	08 95       	ret

000007a2 <pg_increase_freq>:
#include "PGenerator.h"

#define MAX_FREQ 99

int pg_increase_freq(PGenerator* self, __attribute__((unused)) int arg) {
     7a2:	cf 92       	push	r12
     7a4:	df 92       	push	r13
     7a6:	ef 92       	push	r14
     7a8:	ff 92       	push	r15
     7aa:	0f 93       	push	r16
     7ac:	1f 93       	push	r17
     7ae:	cf 93       	push	r28
     7b0:	df 93       	push	r29
     7b2:	ec 01       	movw	r28, r24
	if (self->freq == 0) {
     7b4:	8c 81       	ldd	r24, Y+4	; 0x04
     7b6:	81 11       	cpse	r24, r1
     7b8:	11 c0       	rjmp	.+34     	; 0x7dc <pg_increase_freq+0x3a>
		// If freq = 0, start it!
		ASYNC(self, pg_update, 0);
     7ba:	c1 2c       	mov	r12, r1
     7bc:	d1 2c       	mov	r13, r1
     7be:	0f 2e       	mov	r0, r31
     7c0:	f6 e7       	ldi	r31, 0x76	; 118
     7c2:	ef 2e       	mov	r14, r31
     7c4:	f3 e0       	ldi	r31, 0x03	; 3
     7c6:	ff 2e       	mov	r15, r31
     7c8:	f0 2d       	mov	r31, r0
     7ca:	8e 01       	movw	r16, r28
     7cc:	20 e0       	ldi	r18, 0x00	; 0
     7ce:	30 e0       	ldi	r19, 0x00	; 0
     7d0:	a9 01       	movw	r20, r18
     7d2:	60 e0       	ldi	r22, 0x00	; 0
     7d4:	70 e0       	ldi	r23, 0x00	; 0
     7d6:	cb 01       	movw	r24, r22
     7d8:	0e 94 ab 0e 	call	0x1d56	; 0x1d56 <async>
	}
	
	if (self->freq + 1 <= MAX_FREQ) {
     7dc:	2c 81       	ldd	r18, Y+4	; 0x04
     7de:	82 2f       	mov	r24, r18
     7e0:	90 e0       	ldi	r25, 0x00	; 0
     7e2:	01 96       	adiw	r24, 0x01	; 1
     7e4:	84 36       	cpi	r24, 0x64	; 100
     7e6:	91 05       	cpc	r25, r1
     7e8:	14 f4       	brge	.+4      	; 0x7ee <pg_increase_freq+0x4c>
		self->freq += 1;
     7ea:	2f 5f       	subi	r18, 0xFF	; 255
     7ec:	2c 83       	std	Y+4, r18	; 0x04
	}
	return self->freq;
     7ee:	8c 81       	ldd	r24, Y+4	; 0x04
}
     7f0:	90 e0       	ldi	r25, 0x00	; 0
     7f2:	df 91       	pop	r29
     7f4:	cf 91       	pop	r28
     7f6:	1f 91       	pop	r17
     7f8:	0f 91       	pop	r16
     7fa:	ff 90       	pop	r15
     7fc:	ef 90       	pop	r14
     7fe:	df 90       	pop	r13
     800:	cf 90       	pop	r12
     802:	08 95       	ret

00000804 <pg_decrease_freq>:

int pg_decrease_freq(PGenerator* self, __attribute__((unused)) int arg) {
     804:	cf 92       	push	r12
     806:	df 92       	push	r13
     808:	ef 92       	push	r14
     80a:	ff 92       	push	r15
     80c:	0f 93       	push	r16
     80e:	1f 93       	push	r17
     810:	cf 93       	push	r28
     812:	df 93       	push	r29
     814:	ec 01       	movw	r28, r24
	if (self->freq == 1) {
     816:	8c 81       	ldd	r24, Y+4	; 0x04
     818:	81 30       	cpi	r24, 0x01	; 1
     81a:	91 f4       	brne	.+36     	; 0x840 <pg_decrease_freq+0x3c>
		ASYNC(self->writer, write_zero, self->write_mask);
     81c:	ce 80       	ldd	r12, Y+6	; 0x06
     81e:	d1 2c       	mov	r13, r1
     820:	0f 81       	ldd	r16, Y+7	; 0x07
     822:	18 85       	ldd	r17, Y+8	; 0x08
     824:	0f 2e       	mov	r0, r31
     826:	f6 e7       	ldi	r31, 0x76	; 118
     828:	ef 2e       	mov	r14, r31
     82a:	f4 e0       	ldi	r31, 0x04	; 4
     82c:	ff 2e       	mov	r15, r31
     82e:	f0 2d       	mov	r31, r0
     830:	20 e0       	ldi	r18, 0x00	; 0
     832:	30 e0       	ldi	r19, 0x00	; 0
     834:	a9 01       	movw	r20, r18
     836:	60 e0       	ldi	r22, 0x00	; 0
     838:	70 e0       	ldi	r23, 0x00	; 0
     83a:	cb 01       	movw	r24, r22
     83c:	0e 94 ab 0e 	call	0x1d56	; 0x1d56 <async>
	}
	if (self->freq != 0) {
     840:	8c 81       	ldd	r24, Y+4	; 0x04
     842:	88 23       	and	r24, r24
     844:	11 f0       	breq	.+4      	; 0x84a <pg_decrease_freq+0x46>
		self->freq -= 1;
     846:	81 50       	subi	r24, 0x01	; 1
     848:	8c 83       	std	Y+4, r24	; 0x04
	}
	
	return self->freq;
     84a:	8c 81       	ldd	r24, Y+4	; 0x04
}
     84c:	90 e0       	ldi	r25, 0x00	; 0
     84e:	df 91       	pop	r29
     850:	cf 91       	pop	r28
     852:	1f 91       	pop	r17
     854:	0f 91       	pop	r16
     856:	ff 90       	pop	r15
     858:	ef 90       	pop	r14
     85a:	df 90       	pop	r13
     85c:	cf 90       	pop	r12
     85e:	08 95       	ret

00000860 <pg_save_state>:

int pg_save_state(PGenerator* self, __attribute__((unused)) int arg) {
     860:	cf 92       	push	r12
     862:	df 92       	push	r13
     864:	ef 92       	push	r14
     866:	ff 92       	push	r15
     868:	0f 93       	push	r16
     86a:	1f 93       	push	r17
     86c:	cf 93       	push	r28
     86e:	df 93       	push	r29
     870:	ec 01       	movw	r28, r24
	if (self->freq == 0) {
     872:	8c 81       	ldd	r24, Y+4	; 0x04
     874:	81 11       	cpse	r24, r1
     876:	15 c0       	rjmp	.+42     	; 0x8a2 <pg_save_state+0x42>
		self->freq = self->saved_freq;
     878:	8d 81       	ldd	r24, Y+5	; 0x05
     87a:	8c 83       	std	Y+4, r24	; 0x04
		self->saved_freq = 0;
     87c:	1d 82       	std	Y+5, r1	; 0x05
		ASYNC(self, pg_update, 0);
     87e:	c1 2c       	mov	r12, r1
     880:	d1 2c       	mov	r13, r1
     882:	0f 2e       	mov	r0, r31
     884:	f6 e7       	ldi	r31, 0x76	; 118
     886:	ef 2e       	mov	r14, r31
     888:	f3 e0       	ldi	r31, 0x03	; 3
     88a:	ff 2e       	mov	r15, r31
     88c:	f0 2d       	mov	r31, r0
     88e:	8e 01       	movw	r16, r28
     890:	20 e0       	ldi	r18, 0x00	; 0
     892:	30 e0       	ldi	r19, 0x00	; 0
     894:	a9 01       	movw	r20, r18
     896:	60 e0       	ldi	r22, 0x00	; 0
     898:	70 e0       	ldi	r23, 0x00	; 0
     89a:	cb 01       	movw	r24, r22
     89c:	0e 94 ab 0e 	call	0x1d56	; 0x1d56 <async>
     8a0:	14 c0       	rjmp	.+40     	; 0x8ca <pg_save_state+0x6a>
		} else {
		self->saved_freq = self->freq;
     8a2:	8d 83       	std	Y+5, r24	; 0x05
		self->freq = DEFAULT_FREQ;
     8a4:	1c 82       	std	Y+4, r1	; 0x04
		ASYNC(self->writer, write_zero, self->write_mask);
     8a6:	ce 80       	ldd	r12, Y+6	; 0x06
     8a8:	d1 2c       	mov	r13, r1
     8aa:	0f 81       	ldd	r16, Y+7	; 0x07
     8ac:	18 85       	ldd	r17, Y+8	; 0x08
     8ae:	0f 2e       	mov	r0, r31
     8b0:	f6 e7       	ldi	r31, 0x76	; 118
     8b2:	ef 2e       	mov	r14, r31
     8b4:	f4 e0       	ldi	r31, 0x04	; 4
     8b6:	ff 2e       	mov	r15, r31
     8b8:	f0 2d       	mov	r31, r0
     8ba:	20 e0       	ldi	r18, 0x00	; 0
     8bc:	30 e0       	ldi	r19, 0x00	; 0
     8be:	a9 01       	movw	r20, r18
     8c0:	60 e0       	ldi	r22, 0x00	; 0
     8c2:	70 e0       	ldi	r23, 0x00	; 0
     8c4:	cb 01       	movw	r24, r22
     8c6:	0e 94 ab 0e 	call	0x1d56	; 0x1d56 <async>
	}
	return self->freq;
     8ca:	8c 81       	ldd	r24, Y+4	; 0x04
}
     8cc:	90 e0       	ldi	r25, 0x00	; 0
     8ce:	df 91       	pop	r29
     8d0:	cf 91       	pop	r28
     8d2:	1f 91       	pop	r17
     8d4:	0f 91       	pop	r16
     8d6:	ff 90       	pop	r15
     8d8:	ef 90       	pop	r14
     8da:	df 90       	pop	r13
     8dc:	cf 90       	pop	r12
     8de:	08 95       	ret

000008e0 <write>:
#include "SignalWriter.h"
#include <avr/io.h>

int write(__attribute__((unused)) SignalWriter* self, int mask) {
	PORTE = PORTE ^ mask;
     8e0:	8e b1       	in	r24, 0x0e	; 14
     8e2:	68 27       	eor	r22, r24
     8e4:	6e b9       	out	0x0e, r22	; 14
	return 0;
}
     8e6:	80 e0       	ldi	r24, 0x00	; 0
     8e8:	90 e0       	ldi	r25, 0x00	; 0
     8ea:	08 95       	ret

000008ec <write_zero>:

int write_zero(__attribute__((unused)) SignalWriter* self, int mask) {
	PORTE = PORTE & ~mask;
     8ec:	8e b1       	in	r24, 0x0e	; 14
     8ee:	60 95       	com	r22
     8f0:	68 23       	and	r22, r24
     8f2:	6e b9       	out	0x0e, r22	; 14
	return 0;
}
     8f4:	80 e0       	ldi	r24, 0x00	; 0
     8f6:	90 e0       	ldi	r25, 0x00	; 0
     8f8:	08 95       	ret

000008fa <remove>:
    Time now;
    DISABLE(status);
    TIMERGET(now);
    ENABLE(status);
    return now - (status ? current->msg->baseline : timestamp);
}
     8fa:	fb 01       	movw	r30, r22
     8fc:	a0 81       	ld	r26, Z
     8fe:	b1 81       	ldd	r27, Z+1	; 0x01
     900:	10 97       	sbiw	r26, 0x00	; 0
     902:	f1 f0       	breq	.+60     	; 0x940 <remove+0x46>
     904:	a8 17       	cp	r26, r24
     906:	b9 07       	cpc	r27, r25
     908:	11 f4       	brne	.+4      	; 0x90e <remove+0x14>
     90a:	11 c0       	rjmp	.+34     	; 0x92e <remove+0x34>
     90c:	df 01       	movw	r26, r30
     90e:	ed 91       	ld	r30, X+
     910:	fc 91       	ld	r31, X
     912:	11 97       	sbiw	r26, 0x01	; 1
     914:	30 97       	sbiw	r30, 0x00	; 0
     916:	b9 f0       	breq	.+46     	; 0x946 <remove+0x4c>
     918:	8e 17       	cp	r24, r30
     91a:	9f 07       	cpc	r25, r31
     91c:	b9 f7       	brne	.-18     	; 0x90c <remove+0x12>
     91e:	16 c0       	rjmp	.+44     	; 0x94c <remove+0x52>
     920:	80 81       	ld	r24, Z
     922:	91 81       	ldd	r25, Z+1	; 0x01
     924:	8d 93       	st	X+, r24
     926:	9c 93       	st	X, r25
     928:	81 e0       	ldi	r24, 0x01	; 1
     92a:	90 e0       	ldi	r25, 0x00	; 0
     92c:	08 95       	ret
     92e:	fd 01       	movw	r30, r26
     930:	80 81       	ld	r24, Z
     932:	91 81       	ldd	r25, Z+1	; 0x01
     934:	fb 01       	movw	r30, r22
     936:	91 83       	std	Z+1, r25	; 0x01
     938:	80 83       	st	Z, r24
     93a:	81 e0       	ldi	r24, 0x01	; 1
     93c:	90 e0       	ldi	r25, 0x00	; 0
     93e:	08 95       	ret
     940:	80 e0       	ldi	r24, 0x00	; 0
     942:	90 e0       	ldi	r25, 0x00	; 0
     944:	08 95       	ret
     946:	80 e0       	ldi	r24, 0x00	; 0
     948:	90 e0       	ldi	r25, 0x00	; 0
     94a:	08 95       	ret
     94c:	10 97       	sbiw	r26, 0x00	; 0
     94e:	41 f7       	brne	.-48     	; 0x920 <remove+0x26>
     950:	ef cf       	rjmp	.-34     	; 0x930 <remove+0x36>

00000952 <initialize>:
     952:	cf 93       	push	r28
     954:	df 93       	push	r29
     956:	00 d0       	rcall	.+0      	; 0x958 <initialize+0x6>
     958:	00 d0       	rcall	.+0      	; 0x95a <initialize+0x8>
     95a:	cd b7       	in	r28, 0x3d	; 61
     95c:	de b7       	in	r29, 0x3e	; 62
     95e:	8b e6       	ldi	r24, 0x6B	; 107
     960:	92 e0       	ldi	r25, 0x02	; 2
     962:	2b e4       	ldi	r18, 0x4B	; 75
     964:	33 e0       	ldi	r19, 0x03	; 3
     966:	fc 01       	movw	r30, r24
     968:	70 97       	sbiw	r30, 0x10	; 16
     96a:	91 83       	std	Z+1, r25	; 0x01
     96c:	80 83       	st	Z, r24
     96e:	40 96       	adiw	r24, 0x10	; 16
     970:	82 17       	cp	r24, r18
     972:	93 07       	cpc	r25, r19
     974:	c1 f7       	brne	.-16     	; 0x966 <initialize+0x14>
     976:	10 92 3c 03 	sts	0x033C, r1	; 0x80033c <messages+0xe1>
     97a:	10 92 3b 03 	sts	0x033B, r1	; 0x80033b <messages+0xe0>
     97e:	e6 ea       	ldi	r30, 0xA6	; 166
     980:	f1 e0       	ldi	r31, 0x01	; 1
     982:	83 ec       	ldi	r24, 0xC3	; 195
     984:	91 e0       	ldi	r25, 0x01	; 1
     986:	91 83       	std	Z+1, r25	; 0x01
     988:	80 83       	st	Z, r24
     98a:	80 ee       	ldi	r24, 0xE0	; 224
     98c:	91 e0       	ldi	r25, 0x01	; 1
     98e:	96 8f       	std	Z+30, r25	; 0x1e
     990:	85 8f       	std	Z+29, r24	; 0x1d
     992:	ad ef       	ldi	r26, 0xFD	; 253
     994:	b1 e0       	ldi	r27, 0x01	; 1
     996:	b3 af       	std	Z+59, r27	; 0x3b
     998:	a2 af       	std	Z+58, r26	; 0x3a
     99a:	1d 92       	st	X+, r1
     99c:	1c 92       	st	X, r1
     99e:	fa 83       	std	Y+2, r31	; 0x02
     9a0:	e9 83       	std	Y+1, r30	; 0x01
     9a2:	e7 ea       	ldi	r30, 0xA7	; 167
     9a4:	f3 e0       	ldi	r31, 0x03	; 3
     9a6:	fc 83       	std	Y+4, r31	; 0x04
     9a8:	eb 83       	std	Y+3, r30	; 0x03
     9aa:	89 81       	ldd	r24, Y+1	; 0x01
     9ac:	9a 81       	ldd	r25, Y+2	; 0x02
     9ae:	06 96       	adiw	r24, 0x06	; 6
     9b0:	0e 94 99 11 	call	0x2332	; 0x2332 <setjmp>
     9b4:	8b 81       	ldd	r24, Y+3	; 0x03
     9b6:	9c 81       	ldd	r25, Y+4	; 0x04
     9b8:	e9 81       	ldd	r30, Y+1	; 0x01
     9ba:	fa 81       	ldd	r31, Y+2	; 0x02
     9bc:	97 8b       	std	Z+23, r25	; 0x17
     9be:	86 8b       	std	Z+22, r24	; 0x16
     9c0:	91 8f       	std	Z+25, r25	; 0x19
     9c2:	80 8f       	std	Z+24, r24	; 0x18
     9c4:	89 e4       	ldi	r24, 0x49	; 73
     9c6:	90 e1       	ldi	r25, 0x10	; 16
     9c8:	94 8f       	std	Z+28, r25	; 0x1c
     9ca:	83 8f       	std	Z+27, r24	; 0x1b
     9cc:	15 82       	std	Z+5, r1	; 0x05
     9ce:	14 82       	std	Z+4, r1	; 0x04
     9d0:	7d 96       	adiw	r30, 0x1d	; 29
     9d2:	fa 83       	std	Y+2, r31	; 0x02
     9d4:	e9 83       	std	Y+1, r30	; 0x01
     9d6:	eb 81       	ldd	r30, Y+3	; 0x03
     9d8:	fc 81       	ldd	r31, Y+4	; 0x04
     9da:	e0 5a       	subi	r30, 0xA0	; 160
     9dc:	ff 4f       	sbci	r31, 0xFF	; 255
     9de:	fc 83       	std	Y+4, r31	; 0x04
     9e0:	eb 83       	std	Y+3, r30	; 0x03
     9e2:	89 81       	ldd	r24, Y+1	; 0x01
     9e4:	9a 81       	ldd	r25, Y+2	; 0x02
     9e6:	8a 51       	subi	r24, 0x1A	; 26
     9e8:	92 40       	sbci	r25, 0x02	; 2
     9ea:	f9 f6       	brne	.-66     	; 0x9aa <initialize+0x58>
     9ec:	ee e3       	ldi	r30, 0x3E	; 62
     9ee:	f2 e0       	ldi	r31, 0x02	; 2
     9f0:	11 82       	std	Z+1, r1	; 0x01
     9f2:	10 82       	st	Z, r1
     9f4:	15 82       	std	Z+5, r1	; 0x05
     9f6:	14 82       	std	Z+4, r1	; 0x04
     9f8:	13 82       	std	Z+3, r1	; 0x03
     9fa:	12 82       	std	Z+2, r1	; 0x02
     9fc:	e1 e6       	ldi	r30, 0x61	; 97
     9fe:	f0 e0       	ldi	r31, 0x00	; 0
     a00:	80 e8       	ldi	r24, 0x80	; 128
     a02:	80 83       	st	Z, r24
     a04:	10 82       	st	Z, r1
     a06:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     a0a:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     a0e:	84 e0       	ldi	r24, 0x04	; 4
     a10:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7fc081>
     a14:	81 e0       	ldi	r24, 0x01	; 1
     a16:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
     a1a:	0f 90       	pop	r0
     a1c:	0f 90       	pop	r0
     a1e:	0f 90       	pop	r0
     a20:	0f 90       	pop	r0
     a22:	df 91       	pop	r29
     a24:	cf 91       	pop	r28
     a26:	08 95       	ret

00000a28 <dispatch>:
     a28:	cf 93       	push	r28
     a2a:	df 93       	push	r29
     a2c:	00 d0       	rcall	.+0      	; 0xa2e <dispatch+0x6>
     a2e:	cd b7       	in	r28, 0x3d	; 61
     a30:	de b7       	in	r29, 0x3e	; 62
     a32:	9a 83       	std	Y+2, r25	; 0x02
     a34:	89 83       	std	Y+1, r24	; 0x01
     a36:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <current>
     a3a:	90 91 25 01 	lds	r25, 0x0125	; 0x800125 <current+0x1>
     a3e:	06 96       	adiw	r24, 0x06	; 6
     a40:	0e 94 99 11 	call	0x2332	; 0x2332 <setjmp>
     a44:	89 2b       	or	r24, r25
     a46:	59 f4       	brne	.+22     	; 0xa5e <dispatch+0x36>
     a48:	89 81       	ldd	r24, Y+1	; 0x01
     a4a:	9a 81       	ldd	r25, Y+2	; 0x02
     a4c:	90 93 25 01 	sts	0x0125, r25	; 0x800125 <current+0x1>
     a50:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <current>
     a54:	61 e0       	ldi	r22, 0x01	; 1
     a56:	70 e0       	ldi	r23, 0x00	; 0
     a58:	06 96       	adiw	r24, 0x06	; 6
     a5a:	0e 94 b9 11 	call	0x2372	; 0x2372 <longjmp>
     a5e:	0f 90       	pop	r0
     a60:	0f 90       	pop	r0
     a62:	df 91       	pop	r29
     a64:	cf 91       	pop	r28
     a66:	08 95       	ret

00000a68 <schedule>:
     a68:	0f 93       	push	r16
     a6a:	1f 93       	push	r17
     a6c:	cf 93       	push	r28
     a6e:	df 93       	push	r29
     a70:	e0 91 80 01 	lds	r30, 0x0180	; 0x800180 <msgQ>
     a74:	f0 91 81 01 	lds	r31, 0x0181	; 0x800181 <msgQ+0x1>
     a78:	30 97       	sbiw	r30, 0x00	; 0
     a7a:	61 f1       	breq	.+88     	; 0xad4 <schedule+0x6c>
     a7c:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <threadPool>
     a80:	90 91 29 01 	lds	r25, 0x0129	; 0x800129 <threadPool+0x1>
     a84:	00 97       	sbiw	r24, 0x00	; 0
     a86:	31 f1       	breq	.+76     	; 0xad4 <schedule+0x6c>
     a88:	c0 91 26 01 	lds	r28, 0x0126	; 0x800126 <activeStack>
     a8c:	d0 91 27 01 	lds	r29, 0x0127	; 0x800127 <activeStack+0x1>
     a90:	aa 81       	ldd	r26, Y+2	; 0x02
     a92:	bb 81       	ldd	r27, Y+3	; 0x03
     a94:	10 97       	sbiw	r26, 0x00	; 0
     a96:	79 f0       	breq	.+30     	; 0xab6 <schedule+0x4e>
     a98:	46 81       	ldd	r20, Z+6	; 0x06
     a9a:	57 81       	ldd	r21, Z+7	; 0x07
     a9c:	60 85       	ldd	r22, Z+8	; 0x08
     a9e:	71 85       	ldd	r23, Z+9	; 0x09
     aa0:	16 96       	adiw	r26, 0x06	; 6
     aa2:	0d 91       	ld	r16, X+
     aa4:	1d 91       	ld	r17, X+
     aa6:	2d 91       	ld	r18, X+
     aa8:	3c 91       	ld	r19, X
     aaa:	19 97       	sbiw	r26, 0x09	; 9
     aac:	40 1b       	sub	r20, r16
     aae:	51 0b       	sbc	r21, r17
     ab0:	62 0b       	sbc	r22, r18
     ab2:	73 0b       	sbc	r23, r19
     ab4:	7a f4       	brpl	.+30     	; 0xad4 <schedule+0x6c>
     ab6:	fc 01       	movw	r30, r24
     ab8:	20 81       	ld	r18, Z
     aba:	31 81       	ldd	r19, Z+1	; 0x01
     abc:	30 93 29 01 	sts	0x0129, r19	; 0x800129 <threadPool+0x1>
     ac0:	20 93 28 01 	sts	0x0128, r18	; 0x800128 <threadPool>
     ac4:	d1 83       	std	Z+1, r29	; 0x01
     ac6:	c0 83       	st	Z, r28
     ac8:	90 93 27 01 	sts	0x0127, r25	; 0x800127 <activeStack+0x1>
     acc:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <activeStack>
     ad0:	0e 94 14 05 	call	0xa28	; 0xa28 <dispatch>
     ad4:	df 91       	pop	r29
     ad6:	cf 91       	pop	r28
     ad8:	1f 91       	pop	r17
     ada:	0f 91       	pop	r16
     adc:	08 95       	ret

00000ade <__vector_1>:
     ade:	1f 92       	push	r1
     ae0:	0f 92       	push	r0
     ae2:	0f b6       	in	r0, 0x3f	; 63
     ae4:	0f 92       	push	r0
     ae6:	11 24       	eor	r1, r1
     ae8:	2f 93       	push	r18
     aea:	3f 93       	push	r19
     aec:	4f 93       	push	r20
     aee:	5f 93       	push	r21
     af0:	6f 93       	push	r22
     af2:	7f 93       	push	r23
     af4:	8f 93       	push	r24
     af6:	9f 93       	push	r25
     af8:	af 93       	push	r26
     afa:	bf 93       	push	r27
     afc:	ef 93       	push	r30
     afe:	ff 93       	push	r31
     b00:	20 91 78 01 	lds	r18, 0x0178	; 0x800178 <overflows>
     b04:	30 91 79 01 	lds	r19, 0x0179	; 0x800179 <overflows+0x1>
     b08:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     b0c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     b10:	c9 01       	movw	r24, r18
     b12:	03 2e       	mov	r0, r19
     b14:	00 0c       	add	r0, r0
     b16:	aa 0b       	sbc	r26, r26
     b18:	bb 0b       	sbc	r27, r27
     b1a:	dc 01       	movw	r26, r24
     b1c:	99 27       	eor	r25, r25
     b1e:	88 27       	eor	r24, r24
     b20:	60 e0       	ldi	r22, 0x00	; 0
     b22:	70 e0       	ldi	r23, 0x00	; 0
     b24:	84 2b       	or	r24, r20
     b26:	95 2b       	or	r25, r21
     b28:	a6 2b       	or	r26, r22
     b2a:	b7 2b       	or	r27, r23
     b2c:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <timestamp>
     b30:	90 93 7b 01 	sts	0x017B, r25	; 0x80017b <timestamp+0x1>
     b34:	a0 93 7c 01 	sts	0x017C, r26	; 0x80017c <timestamp+0x2>
     b38:	b0 93 7d 01 	sts	0x017D, r27	; 0x80017d <timestamp+0x3>
     b3c:	b0 9b       	sbis	0x16, 0	; 22
     b3e:	1b c0       	rjmp	.+54     	; 0xb76 <__vector_1+0x98>
     b40:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     b44:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     b48:	c9 01       	movw	r24, r18
     b4a:	01 96       	adiw	r24, 0x01	; 1
     b4c:	09 2e       	mov	r0, r25
     b4e:	00 0c       	add	r0, r0
     b50:	aa 0b       	sbc	r26, r26
     b52:	bb 0b       	sbc	r27, r27
     b54:	dc 01       	movw	r26, r24
     b56:	99 27       	eor	r25, r25
     b58:	88 27       	eor	r24, r24
     b5a:	60 e0       	ldi	r22, 0x00	; 0
     b5c:	70 e0       	ldi	r23, 0x00	; 0
     b5e:	84 2b       	or	r24, r20
     b60:	95 2b       	or	r25, r21
     b62:	a6 2b       	or	r26, r22
     b64:	b7 2b       	or	r27, r23
     b66:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <timestamp>
     b6a:	90 93 7b 01 	sts	0x017B, r25	; 0x80017b <timestamp+0x1>
     b6e:	a0 93 7c 01 	sts	0x017C, r26	; 0x80017c <timestamp+0x2>
     b72:	b0 93 7d 01 	sts	0x017D, r27	; 0x80017d <timestamp+0x3>
     b76:	e0 91 1a 02 	lds	r30, 0x021A	; 0x80021a <mtable>
     b7a:	f0 91 1b 02 	lds	r31, 0x021B	; 0x80021b <mtable+0x1>
     b7e:	30 97       	sbiw	r30, 0x00	; 0
     b80:	39 f0       	breq	.+14     	; 0xb90 <__vector_1+0xb2>
     b82:	60 e0       	ldi	r22, 0x00	; 0
     b84:	70 e0       	ldi	r23, 0x00	; 0
     b86:	80 91 82 01 	lds	r24, 0x0182	; 0x800182 <otable>
     b8a:	90 91 83 01 	lds	r25, 0x0183	; 0x800183 <otable+0x1>
     b8e:	09 95       	icall
     b90:	0e 94 34 05 	call	0xa68	; 0xa68 <schedule>
     b94:	ff 91       	pop	r31
     b96:	ef 91       	pop	r30
     b98:	bf 91       	pop	r27
     b9a:	af 91       	pop	r26
     b9c:	9f 91       	pop	r25
     b9e:	8f 91       	pop	r24
     ba0:	7f 91       	pop	r23
     ba2:	6f 91       	pop	r22
     ba4:	5f 91       	pop	r21
     ba6:	4f 91       	pop	r20
     ba8:	3f 91       	pop	r19
     baa:	2f 91       	pop	r18
     bac:	0f 90       	pop	r0
     bae:	0f be       	out	0x3f, r0	; 63
     bb0:	0f 90       	pop	r0
     bb2:	1f 90       	pop	r1
     bb4:	18 95       	reti

00000bb6 <__vector_2>:
     bb6:	1f 92       	push	r1
     bb8:	0f 92       	push	r0
     bba:	0f b6       	in	r0, 0x3f	; 63
     bbc:	0f 92       	push	r0
     bbe:	11 24       	eor	r1, r1
     bc0:	2f 93       	push	r18
     bc2:	3f 93       	push	r19
     bc4:	4f 93       	push	r20
     bc6:	5f 93       	push	r21
     bc8:	6f 93       	push	r22
     bca:	7f 93       	push	r23
     bcc:	8f 93       	push	r24
     bce:	9f 93       	push	r25
     bd0:	af 93       	push	r26
     bd2:	bf 93       	push	r27
     bd4:	ef 93       	push	r30
     bd6:	ff 93       	push	r31
     bd8:	20 91 78 01 	lds	r18, 0x0178	; 0x800178 <overflows>
     bdc:	30 91 79 01 	lds	r19, 0x0179	; 0x800179 <overflows+0x1>
     be0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     be4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     be8:	c9 01       	movw	r24, r18
     bea:	03 2e       	mov	r0, r19
     bec:	00 0c       	add	r0, r0
     bee:	aa 0b       	sbc	r26, r26
     bf0:	bb 0b       	sbc	r27, r27
     bf2:	dc 01       	movw	r26, r24
     bf4:	99 27       	eor	r25, r25
     bf6:	88 27       	eor	r24, r24
     bf8:	60 e0       	ldi	r22, 0x00	; 0
     bfa:	70 e0       	ldi	r23, 0x00	; 0
     bfc:	84 2b       	or	r24, r20
     bfe:	95 2b       	or	r25, r21
     c00:	a6 2b       	or	r26, r22
     c02:	b7 2b       	or	r27, r23
     c04:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <timestamp>
     c08:	90 93 7b 01 	sts	0x017B, r25	; 0x80017b <timestamp+0x1>
     c0c:	a0 93 7c 01 	sts	0x017C, r26	; 0x80017c <timestamp+0x2>
     c10:	b0 93 7d 01 	sts	0x017D, r27	; 0x80017d <timestamp+0x3>
     c14:	b0 9b       	sbis	0x16, 0	; 22
     c16:	1b c0       	rjmp	.+54     	; 0xc4e <__vector_2+0x98>
     c18:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     c1c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     c20:	c9 01       	movw	r24, r18
     c22:	01 96       	adiw	r24, 0x01	; 1
     c24:	09 2e       	mov	r0, r25
     c26:	00 0c       	add	r0, r0
     c28:	aa 0b       	sbc	r26, r26
     c2a:	bb 0b       	sbc	r27, r27
     c2c:	dc 01       	movw	r26, r24
     c2e:	99 27       	eor	r25, r25
     c30:	88 27       	eor	r24, r24
     c32:	60 e0       	ldi	r22, 0x00	; 0
     c34:	70 e0       	ldi	r23, 0x00	; 0
     c36:	84 2b       	or	r24, r20
     c38:	95 2b       	or	r25, r21
     c3a:	a6 2b       	or	r26, r22
     c3c:	b7 2b       	or	r27, r23
     c3e:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <timestamp>
     c42:	90 93 7b 01 	sts	0x017B, r25	; 0x80017b <timestamp+0x1>
     c46:	a0 93 7c 01 	sts	0x017C, r26	; 0x80017c <timestamp+0x2>
     c4a:	b0 93 7d 01 	sts	0x017D, r27	; 0x80017d <timestamp+0x3>
     c4e:	e0 91 1c 02 	lds	r30, 0x021C	; 0x80021c <mtable+0x2>
     c52:	f0 91 1d 02 	lds	r31, 0x021D	; 0x80021d <mtable+0x3>
     c56:	30 97       	sbiw	r30, 0x00	; 0
     c58:	39 f0       	breq	.+14     	; 0xc68 <__vector_2+0xb2>
     c5a:	61 e0       	ldi	r22, 0x01	; 1
     c5c:	70 e0       	ldi	r23, 0x00	; 0
     c5e:	80 91 84 01 	lds	r24, 0x0184	; 0x800184 <otable+0x2>
     c62:	90 91 85 01 	lds	r25, 0x0185	; 0x800185 <otable+0x3>
     c66:	09 95       	icall
     c68:	0e 94 34 05 	call	0xa68	; 0xa68 <schedule>
     c6c:	ff 91       	pop	r31
     c6e:	ef 91       	pop	r30
     c70:	bf 91       	pop	r27
     c72:	af 91       	pop	r26
     c74:	9f 91       	pop	r25
     c76:	8f 91       	pop	r24
     c78:	7f 91       	pop	r23
     c7a:	6f 91       	pop	r22
     c7c:	5f 91       	pop	r21
     c7e:	4f 91       	pop	r20
     c80:	3f 91       	pop	r19
     c82:	2f 91       	pop	r18
     c84:	0f 90       	pop	r0
     c86:	0f be       	out	0x3f, r0	; 63
     c88:	0f 90       	pop	r0
     c8a:	1f 90       	pop	r1
     c8c:	18 95       	reti

00000c8e <__vector_3>:
     c8e:	1f 92       	push	r1
     c90:	0f 92       	push	r0
     c92:	0f b6       	in	r0, 0x3f	; 63
     c94:	0f 92       	push	r0
     c96:	11 24       	eor	r1, r1
     c98:	2f 93       	push	r18
     c9a:	3f 93       	push	r19
     c9c:	4f 93       	push	r20
     c9e:	5f 93       	push	r21
     ca0:	6f 93       	push	r22
     ca2:	7f 93       	push	r23
     ca4:	8f 93       	push	r24
     ca6:	9f 93       	push	r25
     ca8:	af 93       	push	r26
     caa:	bf 93       	push	r27
     cac:	ef 93       	push	r30
     cae:	ff 93       	push	r31
     cb0:	20 91 78 01 	lds	r18, 0x0178	; 0x800178 <overflows>
     cb4:	30 91 79 01 	lds	r19, 0x0179	; 0x800179 <overflows+0x1>
     cb8:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     cbc:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     cc0:	c9 01       	movw	r24, r18
     cc2:	03 2e       	mov	r0, r19
     cc4:	00 0c       	add	r0, r0
     cc6:	aa 0b       	sbc	r26, r26
     cc8:	bb 0b       	sbc	r27, r27
     cca:	dc 01       	movw	r26, r24
     ccc:	99 27       	eor	r25, r25
     cce:	88 27       	eor	r24, r24
     cd0:	60 e0       	ldi	r22, 0x00	; 0
     cd2:	70 e0       	ldi	r23, 0x00	; 0
     cd4:	84 2b       	or	r24, r20
     cd6:	95 2b       	or	r25, r21
     cd8:	a6 2b       	or	r26, r22
     cda:	b7 2b       	or	r27, r23
     cdc:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <timestamp>
     ce0:	90 93 7b 01 	sts	0x017B, r25	; 0x80017b <timestamp+0x1>
     ce4:	a0 93 7c 01 	sts	0x017C, r26	; 0x80017c <timestamp+0x2>
     ce8:	b0 93 7d 01 	sts	0x017D, r27	; 0x80017d <timestamp+0x3>
     cec:	b0 9b       	sbis	0x16, 0	; 22
     cee:	1b c0       	rjmp	.+54     	; 0xd26 <__vector_3+0x98>
     cf0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     cf4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     cf8:	c9 01       	movw	r24, r18
     cfa:	01 96       	adiw	r24, 0x01	; 1
     cfc:	09 2e       	mov	r0, r25
     cfe:	00 0c       	add	r0, r0
     d00:	aa 0b       	sbc	r26, r26
     d02:	bb 0b       	sbc	r27, r27
     d04:	dc 01       	movw	r26, r24
     d06:	99 27       	eor	r25, r25
     d08:	88 27       	eor	r24, r24
     d0a:	60 e0       	ldi	r22, 0x00	; 0
     d0c:	70 e0       	ldi	r23, 0x00	; 0
     d0e:	84 2b       	or	r24, r20
     d10:	95 2b       	or	r25, r21
     d12:	a6 2b       	or	r26, r22
     d14:	b7 2b       	or	r27, r23
     d16:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <timestamp>
     d1a:	90 93 7b 01 	sts	0x017B, r25	; 0x80017b <timestamp+0x1>
     d1e:	a0 93 7c 01 	sts	0x017C, r26	; 0x80017c <timestamp+0x2>
     d22:	b0 93 7d 01 	sts	0x017D, r27	; 0x80017d <timestamp+0x3>
     d26:	e0 91 1e 02 	lds	r30, 0x021E	; 0x80021e <mtable+0x4>
     d2a:	f0 91 1f 02 	lds	r31, 0x021F	; 0x80021f <mtable+0x5>
     d2e:	30 97       	sbiw	r30, 0x00	; 0
     d30:	39 f0       	breq	.+14     	; 0xd40 <__vector_3+0xb2>
     d32:	62 e0       	ldi	r22, 0x02	; 2
     d34:	70 e0       	ldi	r23, 0x00	; 0
     d36:	80 91 86 01 	lds	r24, 0x0186	; 0x800186 <otable+0x4>
     d3a:	90 91 87 01 	lds	r25, 0x0187	; 0x800187 <otable+0x5>
     d3e:	09 95       	icall
     d40:	0e 94 34 05 	call	0xa68	; 0xa68 <schedule>
     d44:	ff 91       	pop	r31
     d46:	ef 91       	pop	r30
     d48:	bf 91       	pop	r27
     d4a:	af 91       	pop	r26
     d4c:	9f 91       	pop	r25
     d4e:	8f 91       	pop	r24
     d50:	7f 91       	pop	r23
     d52:	6f 91       	pop	r22
     d54:	5f 91       	pop	r21
     d56:	4f 91       	pop	r20
     d58:	3f 91       	pop	r19
     d5a:	2f 91       	pop	r18
     d5c:	0f 90       	pop	r0
     d5e:	0f be       	out	0x3f, r0	; 63
     d60:	0f 90       	pop	r0
     d62:	1f 90       	pop	r1
     d64:	18 95       	reti

00000d66 <__vector_4>:
     d66:	1f 92       	push	r1
     d68:	0f 92       	push	r0
     d6a:	0f b6       	in	r0, 0x3f	; 63
     d6c:	0f 92       	push	r0
     d6e:	11 24       	eor	r1, r1
     d70:	2f 93       	push	r18
     d72:	3f 93       	push	r19
     d74:	4f 93       	push	r20
     d76:	5f 93       	push	r21
     d78:	6f 93       	push	r22
     d7a:	7f 93       	push	r23
     d7c:	8f 93       	push	r24
     d7e:	9f 93       	push	r25
     d80:	af 93       	push	r26
     d82:	bf 93       	push	r27
     d84:	ef 93       	push	r30
     d86:	ff 93       	push	r31
     d88:	20 91 78 01 	lds	r18, 0x0178	; 0x800178 <overflows>
     d8c:	30 91 79 01 	lds	r19, 0x0179	; 0x800179 <overflows+0x1>
     d90:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     d94:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     d98:	c9 01       	movw	r24, r18
     d9a:	03 2e       	mov	r0, r19
     d9c:	00 0c       	add	r0, r0
     d9e:	aa 0b       	sbc	r26, r26
     da0:	bb 0b       	sbc	r27, r27
     da2:	dc 01       	movw	r26, r24
     da4:	99 27       	eor	r25, r25
     da6:	88 27       	eor	r24, r24
     da8:	60 e0       	ldi	r22, 0x00	; 0
     daa:	70 e0       	ldi	r23, 0x00	; 0
     dac:	84 2b       	or	r24, r20
     dae:	95 2b       	or	r25, r21
     db0:	a6 2b       	or	r26, r22
     db2:	b7 2b       	or	r27, r23
     db4:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <timestamp>
     db8:	90 93 7b 01 	sts	0x017B, r25	; 0x80017b <timestamp+0x1>
     dbc:	a0 93 7c 01 	sts	0x017C, r26	; 0x80017c <timestamp+0x2>
     dc0:	b0 93 7d 01 	sts	0x017D, r27	; 0x80017d <timestamp+0x3>
     dc4:	b0 9b       	sbis	0x16, 0	; 22
     dc6:	1b c0       	rjmp	.+54     	; 0xdfe <__vector_4+0x98>
     dc8:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     dcc:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     dd0:	c9 01       	movw	r24, r18
     dd2:	01 96       	adiw	r24, 0x01	; 1
     dd4:	09 2e       	mov	r0, r25
     dd6:	00 0c       	add	r0, r0
     dd8:	aa 0b       	sbc	r26, r26
     dda:	bb 0b       	sbc	r27, r27
     ddc:	dc 01       	movw	r26, r24
     dde:	99 27       	eor	r25, r25
     de0:	88 27       	eor	r24, r24
     de2:	60 e0       	ldi	r22, 0x00	; 0
     de4:	70 e0       	ldi	r23, 0x00	; 0
     de6:	84 2b       	or	r24, r20
     de8:	95 2b       	or	r25, r21
     dea:	a6 2b       	or	r26, r22
     dec:	b7 2b       	or	r27, r23
     dee:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <timestamp>
     df2:	90 93 7b 01 	sts	0x017B, r25	; 0x80017b <timestamp+0x1>
     df6:	a0 93 7c 01 	sts	0x017C, r26	; 0x80017c <timestamp+0x2>
     dfa:	b0 93 7d 01 	sts	0x017D, r27	; 0x80017d <timestamp+0x3>
     dfe:	e0 91 20 02 	lds	r30, 0x0220	; 0x800220 <mtable+0x6>
     e02:	f0 91 21 02 	lds	r31, 0x0221	; 0x800221 <mtable+0x7>
     e06:	30 97       	sbiw	r30, 0x00	; 0
     e08:	39 f0       	breq	.+14     	; 0xe18 <__vector_4+0xb2>
     e0a:	63 e0       	ldi	r22, 0x03	; 3
     e0c:	70 e0       	ldi	r23, 0x00	; 0
     e0e:	80 91 88 01 	lds	r24, 0x0188	; 0x800188 <otable+0x6>
     e12:	90 91 89 01 	lds	r25, 0x0189	; 0x800189 <otable+0x7>
     e16:	09 95       	icall
     e18:	0e 94 34 05 	call	0xa68	; 0xa68 <schedule>
     e1c:	ff 91       	pop	r31
     e1e:	ef 91       	pop	r30
     e20:	bf 91       	pop	r27
     e22:	af 91       	pop	r26
     e24:	9f 91       	pop	r25
     e26:	8f 91       	pop	r24
     e28:	7f 91       	pop	r23
     e2a:	6f 91       	pop	r22
     e2c:	5f 91       	pop	r21
     e2e:	4f 91       	pop	r20
     e30:	3f 91       	pop	r19
     e32:	2f 91       	pop	r18
     e34:	0f 90       	pop	r0
     e36:	0f be       	out	0x3f, r0	; 63
     e38:	0f 90       	pop	r0
     e3a:	1f 90       	pop	r1
     e3c:	18 95       	reti

00000e3e <__vector_5>:
     e3e:	1f 92       	push	r1
     e40:	0f 92       	push	r0
     e42:	0f b6       	in	r0, 0x3f	; 63
     e44:	0f 92       	push	r0
     e46:	11 24       	eor	r1, r1
     e48:	2f 93       	push	r18
     e4a:	3f 93       	push	r19
     e4c:	4f 93       	push	r20
     e4e:	5f 93       	push	r21
     e50:	6f 93       	push	r22
     e52:	7f 93       	push	r23
     e54:	8f 93       	push	r24
     e56:	9f 93       	push	r25
     e58:	af 93       	push	r26
     e5a:	bf 93       	push	r27
     e5c:	ef 93       	push	r30
     e5e:	ff 93       	push	r31
     e60:	20 91 78 01 	lds	r18, 0x0178	; 0x800178 <overflows>
     e64:	30 91 79 01 	lds	r19, 0x0179	; 0x800179 <overflows+0x1>
     e68:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     e6c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     e70:	c9 01       	movw	r24, r18
     e72:	03 2e       	mov	r0, r19
     e74:	00 0c       	add	r0, r0
     e76:	aa 0b       	sbc	r26, r26
     e78:	bb 0b       	sbc	r27, r27
     e7a:	dc 01       	movw	r26, r24
     e7c:	99 27       	eor	r25, r25
     e7e:	88 27       	eor	r24, r24
     e80:	60 e0       	ldi	r22, 0x00	; 0
     e82:	70 e0       	ldi	r23, 0x00	; 0
     e84:	84 2b       	or	r24, r20
     e86:	95 2b       	or	r25, r21
     e88:	a6 2b       	or	r26, r22
     e8a:	b7 2b       	or	r27, r23
     e8c:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <timestamp>
     e90:	90 93 7b 01 	sts	0x017B, r25	; 0x80017b <timestamp+0x1>
     e94:	a0 93 7c 01 	sts	0x017C, r26	; 0x80017c <timestamp+0x2>
     e98:	b0 93 7d 01 	sts	0x017D, r27	; 0x80017d <timestamp+0x3>
     e9c:	b0 9b       	sbis	0x16, 0	; 22
     e9e:	1b c0       	rjmp	.+54     	; 0xed6 <__vector_5+0x98>
     ea0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     ea4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     ea8:	c9 01       	movw	r24, r18
     eaa:	01 96       	adiw	r24, 0x01	; 1
     eac:	09 2e       	mov	r0, r25
     eae:	00 0c       	add	r0, r0
     eb0:	aa 0b       	sbc	r26, r26
     eb2:	bb 0b       	sbc	r27, r27
     eb4:	dc 01       	movw	r26, r24
     eb6:	99 27       	eor	r25, r25
     eb8:	88 27       	eor	r24, r24
     eba:	60 e0       	ldi	r22, 0x00	; 0
     ebc:	70 e0       	ldi	r23, 0x00	; 0
     ebe:	84 2b       	or	r24, r20
     ec0:	95 2b       	or	r25, r21
     ec2:	a6 2b       	or	r26, r22
     ec4:	b7 2b       	or	r27, r23
     ec6:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <timestamp>
     eca:	90 93 7b 01 	sts	0x017B, r25	; 0x80017b <timestamp+0x1>
     ece:	a0 93 7c 01 	sts	0x017C, r26	; 0x80017c <timestamp+0x2>
     ed2:	b0 93 7d 01 	sts	0x017D, r27	; 0x80017d <timestamp+0x3>
     ed6:	e0 91 22 02 	lds	r30, 0x0222	; 0x800222 <mtable+0x8>
     eda:	f0 91 23 02 	lds	r31, 0x0223	; 0x800223 <mtable+0x9>
     ede:	30 97       	sbiw	r30, 0x00	; 0
     ee0:	39 f0       	breq	.+14     	; 0xef0 <__vector_5+0xb2>
     ee2:	64 e0       	ldi	r22, 0x04	; 4
     ee4:	70 e0       	ldi	r23, 0x00	; 0
     ee6:	80 91 8a 01 	lds	r24, 0x018A	; 0x80018a <otable+0x8>
     eea:	90 91 8b 01 	lds	r25, 0x018B	; 0x80018b <otable+0x9>
     eee:	09 95       	icall
     ef0:	0e 94 34 05 	call	0xa68	; 0xa68 <schedule>
     ef4:	ff 91       	pop	r31
     ef6:	ef 91       	pop	r30
     ef8:	bf 91       	pop	r27
     efa:	af 91       	pop	r26
     efc:	9f 91       	pop	r25
     efe:	8f 91       	pop	r24
     f00:	7f 91       	pop	r23
     f02:	6f 91       	pop	r22
     f04:	5f 91       	pop	r21
     f06:	4f 91       	pop	r20
     f08:	3f 91       	pop	r19
     f0a:	2f 91       	pop	r18
     f0c:	0f 90       	pop	r0
     f0e:	0f be       	out	0x3f, r0	; 63
     f10:	0f 90       	pop	r0
     f12:	1f 90       	pop	r1
     f14:	18 95       	reti

00000f16 <__vector_10>:
     f16:	1f 92       	push	r1
     f18:	0f 92       	push	r0
     f1a:	0f b6       	in	r0, 0x3f	; 63
     f1c:	0f 92       	push	r0
     f1e:	11 24       	eor	r1, r1
     f20:	2f 93       	push	r18
     f22:	3f 93       	push	r19
     f24:	4f 93       	push	r20
     f26:	5f 93       	push	r21
     f28:	6f 93       	push	r22
     f2a:	7f 93       	push	r23
     f2c:	8f 93       	push	r24
     f2e:	9f 93       	push	r25
     f30:	af 93       	push	r26
     f32:	bf 93       	push	r27
     f34:	ef 93       	push	r30
     f36:	ff 93       	push	r31
     f38:	20 91 78 01 	lds	r18, 0x0178	; 0x800178 <overflows>
     f3c:	30 91 79 01 	lds	r19, 0x0179	; 0x800179 <overflows+0x1>
     f40:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     f44:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     f48:	c9 01       	movw	r24, r18
     f4a:	03 2e       	mov	r0, r19
     f4c:	00 0c       	add	r0, r0
     f4e:	aa 0b       	sbc	r26, r26
     f50:	bb 0b       	sbc	r27, r27
     f52:	dc 01       	movw	r26, r24
     f54:	99 27       	eor	r25, r25
     f56:	88 27       	eor	r24, r24
     f58:	60 e0       	ldi	r22, 0x00	; 0
     f5a:	70 e0       	ldi	r23, 0x00	; 0
     f5c:	84 2b       	or	r24, r20
     f5e:	95 2b       	or	r25, r21
     f60:	a6 2b       	or	r26, r22
     f62:	b7 2b       	or	r27, r23
     f64:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <timestamp>
     f68:	90 93 7b 01 	sts	0x017B, r25	; 0x80017b <timestamp+0x1>
     f6c:	a0 93 7c 01 	sts	0x017C, r26	; 0x80017c <timestamp+0x2>
     f70:	b0 93 7d 01 	sts	0x017D, r27	; 0x80017d <timestamp+0x3>
     f74:	b0 9b       	sbis	0x16, 0	; 22
     f76:	1b c0       	rjmp	.+54     	; 0xfae <__vector_10+0x98>
     f78:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     f7c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     f80:	c9 01       	movw	r24, r18
     f82:	01 96       	adiw	r24, 0x01	; 1
     f84:	09 2e       	mov	r0, r25
     f86:	00 0c       	add	r0, r0
     f88:	aa 0b       	sbc	r26, r26
     f8a:	bb 0b       	sbc	r27, r27
     f8c:	dc 01       	movw	r26, r24
     f8e:	99 27       	eor	r25, r25
     f90:	88 27       	eor	r24, r24
     f92:	60 e0       	ldi	r22, 0x00	; 0
     f94:	70 e0       	ldi	r23, 0x00	; 0
     f96:	84 2b       	or	r24, r20
     f98:	95 2b       	or	r25, r21
     f9a:	a6 2b       	or	r26, r22
     f9c:	b7 2b       	or	r27, r23
     f9e:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <timestamp>
     fa2:	90 93 7b 01 	sts	0x017B, r25	; 0x80017b <timestamp+0x1>
     fa6:	a0 93 7c 01 	sts	0x017C, r26	; 0x80017c <timestamp+0x2>
     faa:	b0 93 7d 01 	sts	0x017D, r27	; 0x80017d <timestamp+0x3>
     fae:	e0 91 24 02 	lds	r30, 0x0224	; 0x800224 <mtable+0xa>
     fb2:	f0 91 25 02 	lds	r31, 0x0225	; 0x800225 <mtable+0xb>
     fb6:	30 97       	sbiw	r30, 0x00	; 0
     fb8:	39 f0       	breq	.+14     	; 0xfc8 <__vector_10+0xb2>
     fba:	65 e0       	ldi	r22, 0x05	; 5
     fbc:	70 e0       	ldi	r23, 0x00	; 0
     fbe:	80 91 8c 01 	lds	r24, 0x018C	; 0x80018c <otable+0xa>
     fc2:	90 91 8d 01 	lds	r25, 0x018D	; 0x80018d <otable+0xb>
     fc6:	09 95       	icall
     fc8:	0e 94 34 05 	call	0xa68	; 0xa68 <schedule>
     fcc:	ff 91       	pop	r31
     fce:	ef 91       	pop	r30
     fd0:	bf 91       	pop	r27
     fd2:	af 91       	pop	r26
     fd4:	9f 91       	pop	r25
     fd6:	8f 91       	pop	r24
     fd8:	7f 91       	pop	r23
     fda:	6f 91       	pop	r22
     fdc:	5f 91       	pop	r21
     fde:	4f 91       	pop	r20
     fe0:	3f 91       	pop	r19
     fe2:	2f 91       	pop	r18
     fe4:	0f 90       	pop	r0
     fe6:	0f be       	out	0x3f, r0	; 63
     fe8:	0f 90       	pop	r0
     fea:	1f 90       	pop	r1
     fec:	18 95       	reti

00000fee <__vector_11>:
     fee:	1f 92       	push	r1
     ff0:	0f 92       	push	r0
     ff2:	0f b6       	in	r0, 0x3f	; 63
     ff4:	0f 92       	push	r0
     ff6:	11 24       	eor	r1, r1
     ff8:	2f 93       	push	r18
     ffa:	3f 93       	push	r19
     ffc:	4f 93       	push	r20
     ffe:	5f 93       	push	r21
    1000:	6f 93       	push	r22
    1002:	7f 93       	push	r23
    1004:	8f 93       	push	r24
    1006:	9f 93       	push	r25
    1008:	af 93       	push	r26
    100a:	bf 93       	push	r27
    100c:	ef 93       	push	r30
    100e:	ff 93       	push	r31
    1010:	20 91 78 01 	lds	r18, 0x0178	; 0x800178 <overflows>
    1014:	30 91 79 01 	lds	r19, 0x0179	; 0x800179 <overflows+0x1>
    1018:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    101c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1020:	c9 01       	movw	r24, r18
    1022:	03 2e       	mov	r0, r19
    1024:	00 0c       	add	r0, r0
    1026:	aa 0b       	sbc	r26, r26
    1028:	bb 0b       	sbc	r27, r27
    102a:	dc 01       	movw	r26, r24
    102c:	99 27       	eor	r25, r25
    102e:	88 27       	eor	r24, r24
    1030:	60 e0       	ldi	r22, 0x00	; 0
    1032:	70 e0       	ldi	r23, 0x00	; 0
    1034:	84 2b       	or	r24, r20
    1036:	95 2b       	or	r25, r21
    1038:	a6 2b       	or	r26, r22
    103a:	b7 2b       	or	r27, r23
    103c:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <timestamp>
    1040:	90 93 7b 01 	sts	0x017B, r25	; 0x80017b <timestamp+0x1>
    1044:	a0 93 7c 01 	sts	0x017C, r26	; 0x80017c <timestamp+0x2>
    1048:	b0 93 7d 01 	sts	0x017D, r27	; 0x80017d <timestamp+0x3>
    104c:	b0 9b       	sbis	0x16, 0	; 22
    104e:	1b c0       	rjmp	.+54     	; 0x1086 <__vector_11+0x98>
    1050:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1054:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1058:	c9 01       	movw	r24, r18
    105a:	01 96       	adiw	r24, 0x01	; 1
    105c:	09 2e       	mov	r0, r25
    105e:	00 0c       	add	r0, r0
    1060:	aa 0b       	sbc	r26, r26
    1062:	bb 0b       	sbc	r27, r27
    1064:	dc 01       	movw	r26, r24
    1066:	99 27       	eor	r25, r25
    1068:	88 27       	eor	r24, r24
    106a:	60 e0       	ldi	r22, 0x00	; 0
    106c:	70 e0       	ldi	r23, 0x00	; 0
    106e:	84 2b       	or	r24, r20
    1070:	95 2b       	or	r25, r21
    1072:	a6 2b       	or	r26, r22
    1074:	b7 2b       	or	r27, r23
    1076:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <timestamp>
    107a:	90 93 7b 01 	sts	0x017B, r25	; 0x80017b <timestamp+0x1>
    107e:	a0 93 7c 01 	sts	0x017C, r26	; 0x80017c <timestamp+0x2>
    1082:	b0 93 7d 01 	sts	0x017D, r27	; 0x80017d <timestamp+0x3>
    1086:	e0 91 26 02 	lds	r30, 0x0226	; 0x800226 <mtable+0xc>
    108a:	f0 91 27 02 	lds	r31, 0x0227	; 0x800227 <mtable+0xd>
    108e:	30 97       	sbiw	r30, 0x00	; 0
    1090:	39 f0       	breq	.+14     	; 0x10a0 <__vector_11+0xb2>
    1092:	66 e0       	ldi	r22, 0x06	; 6
    1094:	70 e0       	ldi	r23, 0x00	; 0
    1096:	80 91 8e 01 	lds	r24, 0x018E	; 0x80018e <otable+0xc>
    109a:	90 91 8f 01 	lds	r25, 0x018F	; 0x80018f <otable+0xd>
    109e:	09 95       	icall
    10a0:	0e 94 34 05 	call	0xa68	; 0xa68 <schedule>
    10a4:	ff 91       	pop	r31
    10a6:	ef 91       	pop	r30
    10a8:	bf 91       	pop	r27
    10aa:	af 91       	pop	r26
    10ac:	9f 91       	pop	r25
    10ae:	8f 91       	pop	r24
    10b0:	7f 91       	pop	r23
    10b2:	6f 91       	pop	r22
    10b4:	5f 91       	pop	r21
    10b6:	4f 91       	pop	r20
    10b8:	3f 91       	pop	r19
    10ba:	2f 91       	pop	r18
    10bc:	0f 90       	pop	r0
    10be:	0f be       	out	0x3f, r0	; 63
    10c0:	0f 90       	pop	r0
    10c2:	1f 90       	pop	r1
    10c4:	18 95       	reti

000010c6 <__vector_12>:
    10c6:	1f 92       	push	r1
    10c8:	0f 92       	push	r0
    10ca:	0f b6       	in	r0, 0x3f	; 63
    10cc:	0f 92       	push	r0
    10ce:	11 24       	eor	r1, r1
    10d0:	2f 93       	push	r18
    10d2:	3f 93       	push	r19
    10d4:	4f 93       	push	r20
    10d6:	5f 93       	push	r21
    10d8:	6f 93       	push	r22
    10da:	7f 93       	push	r23
    10dc:	8f 93       	push	r24
    10de:	9f 93       	push	r25
    10e0:	af 93       	push	r26
    10e2:	bf 93       	push	r27
    10e4:	ef 93       	push	r30
    10e6:	ff 93       	push	r31
    10e8:	20 91 78 01 	lds	r18, 0x0178	; 0x800178 <overflows>
    10ec:	30 91 79 01 	lds	r19, 0x0179	; 0x800179 <overflows+0x1>
    10f0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    10f4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    10f8:	c9 01       	movw	r24, r18
    10fa:	03 2e       	mov	r0, r19
    10fc:	00 0c       	add	r0, r0
    10fe:	aa 0b       	sbc	r26, r26
    1100:	bb 0b       	sbc	r27, r27
    1102:	dc 01       	movw	r26, r24
    1104:	99 27       	eor	r25, r25
    1106:	88 27       	eor	r24, r24
    1108:	60 e0       	ldi	r22, 0x00	; 0
    110a:	70 e0       	ldi	r23, 0x00	; 0
    110c:	84 2b       	or	r24, r20
    110e:	95 2b       	or	r25, r21
    1110:	a6 2b       	or	r26, r22
    1112:	b7 2b       	or	r27, r23
    1114:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <timestamp>
    1118:	90 93 7b 01 	sts	0x017B, r25	; 0x80017b <timestamp+0x1>
    111c:	a0 93 7c 01 	sts	0x017C, r26	; 0x80017c <timestamp+0x2>
    1120:	b0 93 7d 01 	sts	0x017D, r27	; 0x80017d <timestamp+0x3>
    1124:	b0 9b       	sbis	0x16, 0	; 22
    1126:	1b c0       	rjmp	.+54     	; 0x115e <__vector_12+0x98>
    1128:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    112c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1130:	c9 01       	movw	r24, r18
    1132:	01 96       	adiw	r24, 0x01	; 1
    1134:	09 2e       	mov	r0, r25
    1136:	00 0c       	add	r0, r0
    1138:	aa 0b       	sbc	r26, r26
    113a:	bb 0b       	sbc	r27, r27
    113c:	dc 01       	movw	r26, r24
    113e:	99 27       	eor	r25, r25
    1140:	88 27       	eor	r24, r24
    1142:	60 e0       	ldi	r22, 0x00	; 0
    1144:	70 e0       	ldi	r23, 0x00	; 0
    1146:	84 2b       	or	r24, r20
    1148:	95 2b       	or	r25, r21
    114a:	a6 2b       	or	r26, r22
    114c:	b7 2b       	or	r27, r23
    114e:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <timestamp>
    1152:	90 93 7b 01 	sts	0x017B, r25	; 0x80017b <timestamp+0x1>
    1156:	a0 93 7c 01 	sts	0x017C, r26	; 0x80017c <timestamp+0x2>
    115a:	b0 93 7d 01 	sts	0x017D, r27	; 0x80017d <timestamp+0x3>
    115e:	e0 91 28 02 	lds	r30, 0x0228	; 0x800228 <mtable+0xe>
    1162:	f0 91 29 02 	lds	r31, 0x0229	; 0x800229 <mtable+0xf>
    1166:	30 97       	sbiw	r30, 0x00	; 0
    1168:	39 f0       	breq	.+14     	; 0x1178 <__vector_12+0xb2>
    116a:	67 e0       	ldi	r22, 0x07	; 7
    116c:	70 e0       	ldi	r23, 0x00	; 0
    116e:	80 91 90 01 	lds	r24, 0x0190	; 0x800190 <otable+0xe>
    1172:	90 91 91 01 	lds	r25, 0x0191	; 0x800191 <otable+0xf>
    1176:	09 95       	icall
    1178:	0e 94 34 05 	call	0xa68	; 0xa68 <schedule>
    117c:	ff 91       	pop	r31
    117e:	ef 91       	pop	r30
    1180:	bf 91       	pop	r27
    1182:	af 91       	pop	r26
    1184:	9f 91       	pop	r25
    1186:	8f 91       	pop	r24
    1188:	7f 91       	pop	r23
    118a:	6f 91       	pop	r22
    118c:	5f 91       	pop	r21
    118e:	4f 91       	pop	r20
    1190:	3f 91       	pop	r19
    1192:	2f 91       	pop	r18
    1194:	0f 90       	pop	r0
    1196:	0f be       	out	0x3f, r0	; 63
    1198:	0f 90       	pop	r0
    119a:	1f 90       	pop	r1
    119c:	18 95       	reti

0000119e <__vector_13>:
    119e:	1f 92       	push	r1
    11a0:	0f 92       	push	r0
    11a2:	0f b6       	in	r0, 0x3f	; 63
    11a4:	0f 92       	push	r0
    11a6:	11 24       	eor	r1, r1
    11a8:	2f 93       	push	r18
    11aa:	3f 93       	push	r19
    11ac:	4f 93       	push	r20
    11ae:	5f 93       	push	r21
    11b0:	6f 93       	push	r22
    11b2:	7f 93       	push	r23
    11b4:	8f 93       	push	r24
    11b6:	9f 93       	push	r25
    11b8:	af 93       	push	r26
    11ba:	bf 93       	push	r27
    11bc:	ef 93       	push	r30
    11be:	ff 93       	push	r31
    11c0:	20 91 78 01 	lds	r18, 0x0178	; 0x800178 <overflows>
    11c4:	30 91 79 01 	lds	r19, 0x0179	; 0x800179 <overflows+0x1>
    11c8:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    11cc:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    11d0:	c9 01       	movw	r24, r18
    11d2:	03 2e       	mov	r0, r19
    11d4:	00 0c       	add	r0, r0
    11d6:	aa 0b       	sbc	r26, r26
    11d8:	bb 0b       	sbc	r27, r27
    11da:	dc 01       	movw	r26, r24
    11dc:	99 27       	eor	r25, r25
    11de:	88 27       	eor	r24, r24
    11e0:	60 e0       	ldi	r22, 0x00	; 0
    11e2:	70 e0       	ldi	r23, 0x00	; 0
    11e4:	84 2b       	or	r24, r20
    11e6:	95 2b       	or	r25, r21
    11e8:	a6 2b       	or	r26, r22
    11ea:	b7 2b       	or	r27, r23
    11ec:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <timestamp>
    11f0:	90 93 7b 01 	sts	0x017B, r25	; 0x80017b <timestamp+0x1>
    11f4:	a0 93 7c 01 	sts	0x017C, r26	; 0x80017c <timestamp+0x2>
    11f8:	b0 93 7d 01 	sts	0x017D, r27	; 0x80017d <timestamp+0x3>
    11fc:	b0 9b       	sbis	0x16, 0	; 22
    11fe:	1b c0       	rjmp	.+54     	; 0x1236 <__vector_13+0x98>
    1200:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1204:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1208:	c9 01       	movw	r24, r18
    120a:	01 96       	adiw	r24, 0x01	; 1
    120c:	09 2e       	mov	r0, r25
    120e:	00 0c       	add	r0, r0
    1210:	aa 0b       	sbc	r26, r26
    1212:	bb 0b       	sbc	r27, r27
    1214:	dc 01       	movw	r26, r24
    1216:	99 27       	eor	r25, r25
    1218:	88 27       	eor	r24, r24
    121a:	60 e0       	ldi	r22, 0x00	; 0
    121c:	70 e0       	ldi	r23, 0x00	; 0
    121e:	84 2b       	or	r24, r20
    1220:	95 2b       	or	r25, r21
    1222:	a6 2b       	or	r26, r22
    1224:	b7 2b       	or	r27, r23
    1226:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <timestamp>
    122a:	90 93 7b 01 	sts	0x017B, r25	; 0x80017b <timestamp+0x1>
    122e:	a0 93 7c 01 	sts	0x017C, r26	; 0x80017c <timestamp+0x2>
    1232:	b0 93 7d 01 	sts	0x017D, r27	; 0x80017d <timestamp+0x3>
    1236:	e0 91 2a 02 	lds	r30, 0x022A	; 0x80022a <mtable+0x10>
    123a:	f0 91 2b 02 	lds	r31, 0x022B	; 0x80022b <mtable+0x11>
    123e:	30 97       	sbiw	r30, 0x00	; 0
    1240:	39 f0       	breq	.+14     	; 0x1250 <__vector_13+0xb2>
    1242:	68 e0       	ldi	r22, 0x08	; 8
    1244:	70 e0       	ldi	r23, 0x00	; 0
    1246:	80 91 92 01 	lds	r24, 0x0192	; 0x800192 <otable+0x10>
    124a:	90 91 93 01 	lds	r25, 0x0193	; 0x800193 <otable+0x11>
    124e:	09 95       	icall
    1250:	0e 94 34 05 	call	0xa68	; 0xa68 <schedule>
    1254:	ff 91       	pop	r31
    1256:	ef 91       	pop	r30
    1258:	bf 91       	pop	r27
    125a:	af 91       	pop	r26
    125c:	9f 91       	pop	r25
    125e:	8f 91       	pop	r24
    1260:	7f 91       	pop	r23
    1262:	6f 91       	pop	r22
    1264:	5f 91       	pop	r21
    1266:	4f 91       	pop	r20
    1268:	3f 91       	pop	r19
    126a:	2f 91       	pop	r18
    126c:	0f 90       	pop	r0
    126e:	0f be       	out	0x3f, r0	; 63
    1270:	0f 90       	pop	r0
    1272:	1f 90       	pop	r1
    1274:	18 95       	reti

00001276 <__vector_14>:
    1276:	1f 92       	push	r1
    1278:	0f 92       	push	r0
    127a:	0f b6       	in	r0, 0x3f	; 63
    127c:	0f 92       	push	r0
    127e:	11 24       	eor	r1, r1
    1280:	2f 93       	push	r18
    1282:	3f 93       	push	r19
    1284:	4f 93       	push	r20
    1286:	5f 93       	push	r21
    1288:	6f 93       	push	r22
    128a:	7f 93       	push	r23
    128c:	8f 93       	push	r24
    128e:	9f 93       	push	r25
    1290:	af 93       	push	r26
    1292:	bf 93       	push	r27
    1294:	ef 93       	push	r30
    1296:	ff 93       	push	r31
    1298:	20 91 78 01 	lds	r18, 0x0178	; 0x800178 <overflows>
    129c:	30 91 79 01 	lds	r19, 0x0179	; 0x800179 <overflows+0x1>
    12a0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    12a4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    12a8:	c9 01       	movw	r24, r18
    12aa:	03 2e       	mov	r0, r19
    12ac:	00 0c       	add	r0, r0
    12ae:	aa 0b       	sbc	r26, r26
    12b0:	bb 0b       	sbc	r27, r27
    12b2:	dc 01       	movw	r26, r24
    12b4:	99 27       	eor	r25, r25
    12b6:	88 27       	eor	r24, r24
    12b8:	60 e0       	ldi	r22, 0x00	; 0
    12ba:	70 e0       	ldi	r23, 0x00	; 0
    12bc:	84 2b       	or	r24, r20
    12be:	95 2b       	or	r25, r21
    12c0:	a6 2b       	or	r26, r22
    12c2:	b7 2b       	or	r27, r23
    12c4:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <timestamp>
    12c8:	90 93 7b 01 	sts	0x017B, r25	; 0x80017b <timestamp+0x1>
    12cc:	a0 93 7c 01 	sts	0x017C, r26	; 0x80017c <timestamp+0x2>
    12d0:	b0 93 7d 01 	sts	0x017D, r27	; 0x80017d <timestamp+0x3>
    12d4:	b0 9b       	sbis	0x16, 0	; 22
    12d6:	1b c0       	rjmp	.+54     	; 0x130e <__vector_14+0x98>
    12d8:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    12dc:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    12e0:	c9 01       	movw	r24, r18
    12e2:	01 96       	adiw	r24, 0x01	; 1
    12e4:	09 2e       	mov	r0, r25
    12e6:	00 0c       	add	r0, r0
    12e8:	aa 0b       	sbc	r26, r26
    12ea:	bb 0b       	sbc	r27, r27
    12ec:	dc 01       	movw	r26, r24
    12ee:	99 27       	eor	r25, r25
    12f0:	88 27       	eor	r24, r24
    12f2:	60 e0       	ldi	r22, 0x00	; 0
    12f4:	70 e0       	ldi	r23, 0x00	; 0
    12f6:	84 2b       	or	r24, r20
    12f8:	95 2b       	or	r25, r21
    12fa:	a6 2b       	or	r26, r22
    12fc:	b7 2b       	or	r27, r23
    12fe:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <timestamp>
    1302:	90 93 7b 01 	sts	0x017B, r25	; 0x80017b <timestamp+0x1>
    1306:	a0 93 7c 01 	sts	0x017C, r26	; 0x80017c <timestamp+0x2>
    130a:	b0 93 7d 01 	sts	0x017D, r27	; 0x80017d <timestamp+0x3>
    130e:	e0 91 2c 02 	lds	r30, 0x022C	; 0x80022c <mtable+0x12>
    1312:	f0 91 2d 02 	lds	r31, 0x022D	; 0x80022d <mtable+0x13>
    1316:	30 97       	sbiw	r30, 0x00	; 0
    1318:	39 f0       	breq	.+14     	; 0x1328 <__vector_14+0xb2>
    131a:	69 e0       	ldi	r22, 0x09	; 9
    131c:	70 e0       	ldi	r23, 0x00	; 0
    131e:	80 91 94 01 	lds	r24, 0x0194	; 0x800194 <otable+0x12>
    1322:	90 91 95 01 	lds	r25, 0x0195	; 0x800195 <otable+0x13>
    1326:	09 95       	icall
    1328:	0e 94 34 05 	call	0xa68	; 0xa68 <schedule>
    132c:	ff 91       	pop	r31
    132e:	ef 91       	pop	r30
    1330:	bf 91       	pop	r27
    1332:	af 91       	pop	r26
    1334:	9f 91       	pop	r25
    1336:	8f 91       	pop	r24
    1338:	7f 91       	pop	r23
    133a:	6f 91       	pop	r22
    133c:	5f 91       	pop	r21
    133e:	4f 91       	pop	r20
    1340:	3f 91       	pop	r19
    1342:	2f 91       	pop	r18
    1344:	0f 90       	pop	r0
    1346:	0f be       	out	0x3f, r0	; 63
    1348:	0f 90       	pop	r0
    134a:	1f 90       	pop	r1
    134c:	18 95       	reti

0000134e <__vector_15>:
    134e:	1f 92       	push	r1
    1350:	0f 92       	push	r0
    1352:	0f b6       	in	r0, 0x3f	; 63
    1354:	0f 92       	push	r0
    1356:	11 24       	eor	r1, r1
    1358:	2f 93       	push	r18
    135a:	3f 93       	push	r19
    135c:	4f 93       	push	r20
    135e:	5f 93       	push	r21
    1360:	6f 93       	push	r22
    1362:	7f 93       	push	r23
    1364:	8f 93       	push	r24
    1366:	9f 93       	push	r25
    1368:	af 93       	push	r26
    136a:	bf 93       	push	r27
    136c:	ef 93       	push	r30
    136e:	ff 93       	push	r31
    1370:	20 91 78 01 	lds	r18, 0x0178	; 0x800178 <overflows>
    1374:	30 91 79 01 	lds	r19, 0x0179	; 0x800179 <overflows+0x1>
    1378:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    137c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1380:	c9 01       	movw	r24, r18
    1382:	03 2e       	mov	r0, r19
    1384:	00 0c       	add	r0, r0
    1386:	aa 0b       	sbc	r26, r26
    1388:	bb 0b       	sbc	r27, r27
    138a:	dc 01       	movw	r26, r24
    138c:	99 27       	eor	r25, r25
    138e:	88 27       	eor	r24, r24
    1390:	60 e0       	ldi	r22, 0x00	; 0
    1392:	70 e0       	ldi	r23, 0x00	; 0
    1394:	84 2b       	or	r24, r20
    1396:	95 2b       	or	r25, r21
    1398:	a6 2b       	or	r26, r22
    139a:	b7 2b       	or	r27, r23
    139c:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <timestamp>
    13a0:	90 93 7b 01 	sts	0x017B, r25	; 0x80017b <timestamp+0x1>
    13a4:	a0 93 7c 01 	sts	0x017C, r26	; 0x80017c <timestamp+0x2>
    13a8:	b0 93 7d 01 	sts	0x017D, r27	; 0x80017d <timestamp+0x3>
    13ac:	b0 9b       	sbis	0x16, 0	; 22
    13ae:	1b c0       	rjmp	.+54     	; 0x13e6 <__vector_15+0x98>
    13b0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    13b4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    13b8:	c9 01       	movw	r24, r18
    13ba:	01 96       	adiw	r24, 0x01	; 1
    13bc:	09 2e       	mov	r0, r25
    13be:	00 0c       	add	r0, r0
    13c0:	aa 0b       	sbc	r26, r26
    13c2:	bb 0b       	sbc	r27, r27
    13c4:	dc 01       	movw	r26, r24
    13c6:	99 27       	eor	r25, r25
    13c8:	88 27       	eor	r24, r24
    13ca:	60 e0       	ldi	r22, 0x00	; 0
    13cc:	70 e0       	ldi	r23, 0x00	; 0
    13ce:	84 2b       	or	r24, r20
    13d0:	95 2b       	or	r25, r21
    13d2:	a6 2b       	or	r26, r22
    13d4:	b7 2b       	or	r27, r23
    13d6:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <timestamp>
    13da:	90 93 7b 01 	sts	0x017B, r25	; 0x80017b <timestamp+0x1>
    13de:	a0 93 7c 01 	sts	0x017C, r26	; 0x80017c <timestamp+0x2>
    13e2:	b0 93 7d 01 	sts	0x017D, r27	; 0x80017d <timestamp+0x3>
    13e6:	e0 91 2e 02 	lds	r30, 0x022E	; 0x80022e <mtable+0x14>
    13ea:	f0 91 2f 02 	lds	r31, 0x022F	; 0x80022f <mtable+0x15>
    13ee:	30 97       	sbiw	r30, 0x00	; 0
    13f0:	39 f0       	breq	.+14     	; 0x1400 <__vector_15+0xb2>
    13f2:	6a e0       	ldi	r22, 0x0A	; 10
    13f4:	70 e0       	ldi	r23, 0x00	; 0
    13f6:	80 91 96 01 	lds	r24, 0x0196	; 0x800196 <otable+0x14>
    13fa:	90 91 97 01 	lds	r25, 0x0197	; 0x800197 <otable+0x15>
    13fe:	09 95       	icall
    1400:	0e 94 34 05 	call	0xa68	; 0xa68 <schedule>
    1404:	ff 91       	pop	r31
    1406:	ef 91       	pop	r30
    1408:	bf 91       	pop	r27
    140a:	af 91       	pop	r26
    140c:	9f 91       	pop	r25
    140e:	8f 91       	pop	r24
    1410:	7f 91       	pop	r23
    1412:	6f 91       	pop	r22
    1414:	5f 91       	pop	r21
    1416:	4f 91       	pop	r20
    1418:	3f 91       	pop	r19
    141a:	2f 91       	pop	r18
    141c:	0f 90       	pop	r0
    141e:	0f be       	out	0x3f, r0	; 63
    1420:	0f 90       	pop	r0
    1422:	1f 90       	pop	r1
    1424:	18 95       	reti

00001426 <__vector_16>:
    1426:	1f 92       	push	r1
    1428:	0f 92       	push	r0
    142a:	0f b6       	in	r0, 0x3f	; 63
    142c:	0f 92       	push	r0
    142e:	11 24       	eor	r1, r1
    1430:	2f 93       	push	r18
    1432:	3f 93       	push	r19
    1434:	4f 93       	push	r20
    1436:	5f 93       	push	r21
    1438:	6f 93       	push	r22
    143a:	7f 93       	push	r23
    143c:	8f 93       	push	r24
    143e:	9f 93       	push	r25
    1440:	af 93       	push	r26
    1442:	bf 93       	push	r27
    1444:	ef 93       	push	r30
    1446:	ff 93       	push	r31
    1448:	20 91 78 01 	lds	r18, 0x0178	; 0x800178 <overflows>
    144c:	30 91 79 01 	lds	r19, 0x0179	; 0x800179 <overflows+0x1>
    1450:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1454:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1458:	c9 01       	movw	r24, r18
    145a:	03 2e       	mov	r0, r19
    145c:	00 0c       	add	r0, r0
    145e:	aa 0b       	sbc	r26, r26
    1460:	bb 0b       	sbc	r27, r27
    1462:	dc 01       	movw	r26, r24
    1464:	99 27       	eor	r25, r25
    1466:	88 27       	eor	r24, r24
    1468:	60 e0       	ldi	r22, 0x00	; 0
    146a:	70 e0       	ldi	r23, 0x00	; 0
    146c:	84 2b       	or	r24, r20
    146e:	95 2b       	or	r25, r21
    1470:	a6 2b       	or	r26, r22
    1472:	b7 2b       	or	r27, r23
    1474:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <timestamp>
    1478:	90 93 7b 01 	sts	0x017B, r25	; 0x80017b <timestamp+0x1>
    147c:	a0 93 7c 01 	sts	0x017C, r26	; 0x80017c <timestamp+0x2>
    1480:	b0 93 7d 01 	sts	0x017D, r27	; 0x80017d <timestamp+0x3>
    1484:	b0 9b       	sbis	0x16, 0	; 22
    1486:	1b c0       	rjmp	.+54     	; 0x14be <__vector_16+0x98>
    1488:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    148c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1490:	c9 01       	movw	r24, r18
    1492:	01 96       	adiw	r24, 0x01	; 1
    1494:	09 2e       	mov	r0, r25
    1496:	00 0c       	add	r0, r0
    1498:	aa 0b       	sbc	r26, r26
    149a:	bb 0b       	sbc	r27, r27
    149c:	dc 01       	movw	r26, r24
    149e:	99 27       	eor	r25, r25
    14a0:	88 27       	eor	r24, r24
    14a2:	60 e0       	ldi	r22, 0x00	; 0
    14a4:	70 e0       	ldi	r23, 0x00	; 0
    14a6:	84 2b       	or	r24, r20
    14a8:	95 2b       	or	r25, r21
    14aa:	a6 2b       	or	r26, r22
    14ac:	b7 2b       	or	r27, r23
    14ae:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <timestamp>
    14b2:	90 93 7b 01 	sts	0x017B, r25	; 0x80017b <timestamp+0x1>
    14b6:	a0 93 7c 01 	sts	0x017C, r26	; 0x80017c <timestamp+0x2>
    14ba:	b0 93 7d 01 	sts	0x017D, r27	; 0x80017d <timestamp+0x3>
    14be:	e0 91 30 02 	lds	r30, 0x0230	; 0x800230 <mtable+0x16>
    14c2:	f0 91 31 02 	lds	r31, 0x0231	; 0x800231 <mtable+0x17>
    14c6:	30 97       	sbiw	r30, 0x00	; 0
    14c8:	39 f0       	breq	.+14     	; 0x14d8 <__vector_16+0xb2>
    14ca:	6b e0       	ldi	r22, 0x0B	; 11
    14cc:	70 e0       	ldi	r23, 0x00	; 0
    14ce:	80 91 98 01 	lds	r24, 0x0198	; 0x800198 <otable+0x16>
    14d2:	90 91 99 01 	lds	r25, 0x0199	; 0x800199 <otable+0x17>
    14d6:	09 95       	icall
    14d8:	0e 94 34 05 	call	0xa68	; 0xa68 <schedule>
    14dc:	ff 91       	pop	r31
    14de:	ef 91       	pop	r30
    14e0:	bf 91       	pop	r27
    14e2:	af 91       	pop	r26
    14e4:	9f 91       	pop	r25
    14e6:	8f 91       	pop	r24
    14e8:	7f 91       	pop	r23
    14ea:	6f 91       	pop	r22
    14ec:	5f 91       	pop	r21
    14ee:	4f 91       	pop	r20
    14f0:	3f 91       	pop	r19
    14f2:	2f 91       	pop	r18
    14f4:	0f 90       	pop	r0
    14f6:	0f be       	out	0x3f, r0	; 63
    14f8:	0f 90       	pop	r0
    14fa:	1f 90       	pop	r1
    14fc:	18 95       	reti

000014fe <__vector_17>:
    14fe:	1f 92       	push	r1
    1500:	0f 92       	push	r0
    1502:	0f b6       	in	r0, 0x3f	; 63
    1504:	0f 92       	push	r0
    1506:	11 24       	eor	r1, r1
    1508:	2f 93       	push	r18
    150a:	3f 93       	push	r19
    150c:	4f 93       	push	r20
    150e:	5f 93       	push	r21
    1510:	6f 93       	push	r22
    1512:	7f 93       	push	r23
    1514:	8f 93       	push	r24
    1516:	9f 93       	push	r25
    1518:	af 93       	push	r26
    151a:	bf 93       	push	r27
    151c:	ef 93       	push	r30
    151e:	ff 93       	push	r31
    1520:	20 91 78 01 	lds	r18, 0x0178	; 0x800178 <overflows>
    1524:	30 91 79 01 	lds	r19, 0x0179	; 0x800179 <overflows+0x1>
    1528:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    152c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1530:	c9 01       	movw	r24, r18
    1532:	03 2e       	mov	r0, r19
    1534:	00 0c       	add	r0, r0
    1536:	aa 0b       	sbc	r26, r26
    1538:	bb 0b       	sbc	r27, r27
    153a:	dc 01       	movw	r26, r24
    153c:	99 27       	eor	r25, r25
    153e:	88 27       	eor	r24, r24
    1540:	60 e0       	ldi	r22, 0x00	; 0
    1542:	70 e0       	ldi	r23, 0x00	; 0
    1544:	84 2b       	or	r24, r20
    1546:	95 2b       	or	r25, r21
    1548:	a6 2b       	or	r26, r22
    154a:	b7 2b       	or	r27, r23
    154c:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <timestamp>
    1550:	90 93 7b 01 	sts	0x017B, r25	; 0x80017b <timestamp+0x1>
    1554:	a0 93 7c 01 	sts	0x017C, r26	; 0x80017c <timestamp+0x2>
    1558:	b0 93 7d 01 	sts	0x017D, r27	; 0x80017d <timestamp+0x3>
    155c:	b0 9b       	sbis	0x16, 0	; 22
    155e:	1b c0       	rjmp	.+54     	; 0x1596 <__vector_17+0x98>
    1560:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1564:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1568:	c9 01       	movw	r24, r18
    156a:	01 96       	adiw	r24, 0x01	; 1
    156c:	09 2e       	mov	r0, r25
    156e:	00 0c       	add	r0, r0
    1570:	aa 0b       	sbc	r26, r26
    1572:	bb 0b       	sbc	r27, r27
    1574:	dc 01       	movw	r26, r24
    1576:	99 27       	eor	r25, r25
    1578:	88 27       	eor	r24, r24
    157a:	60 e0       	ldi	r22, 0x00	; 0
    157c:	70 e0       	ldi	r23, 0x00	; 0
    157e:	84 2b       	or	r24, r20
    1580:	95 2b       	or	r25, r21
    1582:	a6 2b       	or	r26, r22
    1584:	b7 2b       	or	r27, r23
    1586:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <timestamp>
    158a:	90 93 7b 01 	sts	0x017B, r25	; 0x80017b <timestamp+0x1>
    158e:	a0 93 7c 01 	sts	0x017C, r26	; 0x80017c <timestamp+0x2>
    1592:	b0 93 7d 01 	sts	0x017D, r27	; 0x80017d <timestamp+0x3>
    1596:	e0 91 32 02 	lds	r30, 0x0232	; 0x800232 <mtable+0x18>
    159a:	f0 91 33 02 	lds	r31, 0x0233	; 0x800233 <mtable+0x19>
    159e:	30 97       	sbiw	r30, 0x00	; 0
    15a0:	39 f0       	breq	.+14     	; 0x15b0 <__vector_17+0xb2>
    15a2:	6c e0       	ldi	r22, 0x0C	; 12
    15a4:	70 e0       	ldi	r23, 0x00	; 0
    15a6:	80 91 9a 01 	lds	r24, 0x019A	; 0x80019a <otable+0x18>
    15aa:	90 91 9b 01 	lds	r25, 0x019B	; 0x80019b <otable+0x19>
    15ae:	09 95       	icall
    15b0:	0e 94 34 05 	call	0xa68	; 0xa68 <schedule>
    15b4:	ff 91       	pop	r31
    15b6:	ef 91       	pop	r30
    15b8:	bf 91       	pop	r27
    15ba:	af 91       	pop	r26
    15bc:	9f 91       	pop	r25
    15be:	8f 91       	pop	r24
    15c0:	7f 91       	pop	r23
    15c2:	6f 91       	pop	r22
    15c4:	5f 91       	pop	r21
    15c6:	4f 91       	pop	r20
    15c8:	3f 91       	pop	r19
    15ca:	2f 91       	pop	r18
    15cc:	0f 90       	pop	r0
    15ce:	0f be       	out	0x3f, r0	; 63
    15d0:	0f 90       	pop	r0
    15d2:	1f 90       	pop	r1
    15d4:	18 95       	reti

000015d6 <__vector_18>:
    15d6:	1f 92       	push	r1
    15d8:	0f 92       	push	r0
    15da:	0f b6       	in	r0, 0x3f	; 63
    15dc:	0f 92       	push	r0
    15de:	11 24       	eor	r1, r1
    15e0:	2f 93       	push	r18
    15e2:	3f 93       	push	r19
    15e4:	4f 93       	push	r20
    15e6:	5f 93       	push	r21
    15e8:	6f 93       	push	r22
    15ea:	7f 93       	push	r23
    15ec:	8f 93       	push	r24
    15ee:	9f 93       	push	r25
    15f0:	af 93       	push	r26
    15f2:	bf 93       	push	r27
    15f4:	ef 93       	push	r30
    15f6:	ff 93       	push	r31
    15f8:	20 91 78 01 	lds	r18, 0x0178	; 0x800178 <overflows>
    15fc:	30 91 79 01 	lds	r19, 0x0179	; 0x800179 <overflows+0x1>
    1600:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1604:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1608:	c9 01       	movw	r24, r18
    160a:	03 2e       	mov	r0, r19
    160c:	00 0c       	add	r0, r0
    160e:	aa 0b       	sbc	r26, r26
    1610:	bb 0b       	sbc	r27, r27
    1612:	dc 01       	movw	r26, r24
    1614:	99 27       	eor	r25, r25
    1616:	88 27       	eor	r24, r24
    1618:	60 e0       	ldi	r22, 0x00	; 0
    161a:	70 e0       	ldi	r23, 0x00	; 0
    161c:	84 2b       	or	r24, r20
    161e:	95 2b       	or	r25, r21
    1620:	a6 2b       	or	r26, r22
    1622:	b7 2b       	or	r27, r23
    1624:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <timestamp>
    1628:	90 93 7b 01 	sts	0x017B, r25	; 0x80017b <timestamp+0x1>
    162c:	a0 93 7c 01 	sts	0x017C, r26	; 0x80017c <timestamp+0x2>
    1630:	b0 93 7d 01 	sts	0x017D, r27	; 0x80017d <timestamp+0x3>
    1634:	b0 9b       	sbis	0x16, 0	; 22
    1636:	1b c0       	rjmp	.+54     	; 0x166e <__vector_18+0x98>
    1638:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    163c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1640:	c9 01       	movw	r24, r18
    1642:	01 96       	adiw	r24, 0x01	; 1
    1644:	09 2e       	mov	r0, r25
    1646:	00 0c       	add	r0, r0
    1648:	aa 0b       	sbc	r26, r26
    164a:	bb 0b       	sbc	r27, r27
    164c:	dc 01       	movw	r26, r24
    164e:	99 27       	eor	r25, r25
    1650:	88 27       	eor	r24, r24
    1652:	60 e0       	ldi	r22, 0x00	; 0
    1654:	70 e0       	ldi	r23, 0x00	; 0
    1656:	84 2b       	or	r24, r20
    1658:	95 2b       	or	r25, r21
    165a:	a6 2b       	or	r26, r22
    165c:	b7 2b       	or	r27, r23
    165e:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <timestamp>
    1662:	90 93 7b 01 	sts	0x017B, r25	; 0x80017b <timestamp+0x1>
    1666:	a0 93 7c 01 	sts	0x017C, r26	; 0x80017c <timestamp+0x2>
    166a:	b0 93 7d 01 	sts	0x017D, r27	; 0x80017d <timestamp+0x3>
    166e:	e0 91 34 02 	lds	r30, 0x0234	; 0x800234 <mtable+0x1a>
    1672:	f0 91 35 02 	lds	r31, 0x0235	; 0x800235 <mtable+0x1b>
    1676:	30 97       	sbiw	r30, 0x00	; 0
    1678:	39 f0       	breq	.+14     	; 0x1688 <__vector_18+0xb2>
    167a:	6d e0       	ldi	r22, 0x0D	; 13
    167c:	70 e0       	ldi	r23, 0x00	; 0
    167e:	80 91 9c 01 	lds	r24, 0x019C	; 0x80019c <otable+0x1a>
    1682:	90 91 9d 01 	lds	r25, 0x019D	; 0x80019d <otable+0x1b>
    1686:	09 95       	icall
    1688:	0e 94 34 05 	call	0xa68	; 0xa68 <schedule>
    168c:	ff 91       	pop	r31
    168e:	ef 91       	pop	r30
    1690:	bf 91       	pop	r27
    1692:	af 91       	pop	r26
    1694:	9f 91       	pop	r25
    1696:	8f 91       	pop	r24
    1698:	7f 91       	pop	r23
    169a:	6f 91       	pop	r22
    169c:	5f 91       	pop	r21
    169e:	4f 91       	pop	r20
    16a0:	3f 91       	pop	r19
    16a2:	2f 91       	pop	r18
    16a4:	0f 90       	pop	r0
    16a6:	0f be       	out	0x3f, r0	; 63
    16a8:	0f 90       	pop	r0
    16aa:	1f 90       	pop	r1
    16ac:	18 95       	reti

000016ae <__vector_19>:
    16ae:	1f 92       	push	r1
    16b0:	0f 92       	push	r0
    16b2:	0f b6       	in	r0, 0x3f	; 63
    16b4:	0f 92       	push	r0
    16b6:	11 24       	eor	r1, r1
    16b8:	2f 93       	push	r18
    16ba:	3f 93       	push	r19
    16bc:	4f 93       	push	r20
    16be:	5f 93       	push	r21
    16c0:	6f 93       	push	r22
    16c2:	7f 93       	push	r23
    16c4:	8f 93       	push	r24
    16c6:	9f 93       	push	r25
    16c8:	af 93       	push	r26
    16ca:	bf 93       	push	r27
    16cc:	ef 93       	push	r30
    16ce:	ff 93       	push	r31
    16d0:	20 91 78 01 	lds	r18, 0x0178	; 0x800178 <overflows>
    16d4:	30 91 79 01 	lds	r19, 0x0179	; 0x800179 <overflows+0x1>
    16d8:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    16dc:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    16e0:	c9 01       	movw	r24, r18
    16e2:	03 2e       	mov	r0, r19
    16e4:	00 0c       	add	r0, r0
    16e6:	aa 0b       	sbc	r26, r26
    16e8:	bb 0b       	sbc	r27, r27
    16ea:	dc 01       	movw	r26, r24
    16ec:	99 27       	eor	r25, r25
    16ee:	88 27       	eor	r24, r24
    16f0:	60 e0       	ldi	r22, 0x00	; 0
    16f2:	70 e0       	ldi	r23, 0x00	; 0
    16f4:	84 2b       	or	r24, r20
    16f6:	95 2b       	or	r25, r21
    16f8:	a6 2b       	or	r26, r22
    16fa:	b7 2b       	or	r27, r23
    16fc:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <timestamp>
    1700:	90 93 7b 01 	sts	0x017B, r25	; 0x80017b <timestamp+0x1>
    1704:	a0 93 7c 01 	sts	0x017C, r26	; 0x80017c <timestamp+0x2>
    1708:	b0 93 7d 01 	sts	0x017D, r27	; 0x80017d <timestamp+0x3>
    170c:	b0 9b       	sbis	0x16, 0	; 22
    170e:	1b c0       	rjmp	.+54     	; 0x1746 <__vector_19+0x98>
    1710:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1714:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1718:	c9 01       	movw	r24, r18
    171a:	01 96       	adiw	r24, 0x01	; 1
    171c:	09 2e       	mov	r0, r25
    171e:	00 0c       	add	r0, r0
    1720:	aa 0b       	sbc	r26, r26
    1722:	bb 0b       	sbc	r27, r27
    1724:	dc 01       	movw	r26, r24
    1726:	99 27       	eor	r25, r25
    1728:	88 27       	eor	r24, r24
    172a:	60 e0       	ldi	r22, 0x00	; 0
    172c:	70 e0       	ldi	r23, 0x00	; 0
    172e:	84 2b       	or	r24, r20
    1730:	95 2b       	or	r25, r21
    1732:	a6 2b       	or	r26, r22
    1734:	b7 2b       	or	r27, r23
    1736:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <timestamp>
    173a:	90 93 7b 01 	sts	0x017B, r25	; 0x80017b <timestamp+0x1>
    173e:	a0 93 7c 01 	sts	0x017C, r26	; 0x80017c <timestamp+0x2>
    1742:	b0 93 7d 01 	sts	0x017D, r27	; 0x80017d <timestamp+0x3>
    1746:	e0 91 36 02 	lds	r30, 0x0236	; 0x800236 <mtable+0x1c>
    174a:	f0 91 37 02 	lds	r31, 0x0237	; 0x800237 <mtable+0x1d>
    174e:	30 97       	sbiw	r30, 0x00	; 0
    1750:	39 f0       	breq	.+14     	; 0x1760 <__vector_19+0xb2>
    1752:	6e e0       	ldi	r22, 0x0E	; 14
    1754:	70 e0       	ldi	r23, 0x00	; 0
    1756:	80 91 9e 01 	lds	r24, 0x019E	; 0x80019e <otable+0x1c>
    175a:	90 91 9f 01 	lds	r25, 0x019F	; 0x80019f <otable+0x1d>
    175e:	09 95       	icall
    1760:	0e 94 34 05 	call	0xa68	; 0xa68 <schedule>
    1764:	ff 91       	pop	r31
    1766:	ef 91       	pop	r30
    1768:	bf 91       	pop	r27
    176a:	af 91       	pop	r26
    176c:	9f 91       	pop	r25
    176e:	8f 91       	pop	r24
    1770:	7f 91       	pop	r23
    1772:	6f 91       	pop	r22
    1774:	5f 91       	pop	r21
    1776:	4f 91       	pop	r20
    1778:	3f 91       	pop	r19
    177a:	2f 91       	pop	r18
    177c:	0f 90       	pop	r0
    177e:	0f be       	out	0x3f, r0	; 63
    1780:	0f 90       	pop	r0
    1782:	1f 90       	pop	r1
    1784:	18 95       	reti

00001786 <__vector_20>:
    1786:	1f 92       	push	r1
    1788:	0f 92       	push	r0
    178a:	0f b6       	in	r0, 0x3f	; 63
    178c:	0f 92       	push	r0
    178e:	11 24       	eor	r1, r1
    1790:	2f 93       	push	r18
    1792:	3f 93       	push	r19
    1794:	4f 93       	push	r20
    1796:	5f 93       	push	r21
    1798:	6f 93       	push	r22
    179a:	7f 93       	push	r23
    179c:	8f 93       	push	r24
    179e:	9f 93       	push	r25
    17a0:	af 93       	push	r26
    17a2:	bf 93       	push	r27
    17a4:	ef 93       	push	r30
    17a6:	ff 93       	push	r31
    17a8:	20 91 78 01 	lds	r18, 0x0178	; 0x800178 <overflows>
    17ac:	30 91 79 01 	lds	r19, 0x0179	; 0x800179 <overflows+0x1>
    17b0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    17b4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    17b8:	c9 01       	movw	r24, r18
    17ba:	03 2e       	mov	r0, r19
    17bc:	00 0c       	add	r0, r0
    17be:	aa 0b       	sbc	r26, r26
    17c0:	bb 0b       	sbc	r27, r27
    17c2:	dc 01       	movw	r26, r24
    17c4:	99 27       	eor	r25, r25
    17c6:	88 27       	eor	r24, r24
    17c8:	60 e0       	ldi	r22, 0x00	; 0
    17ca:	70 e0       	ldi	r23, 0x00	; 0
    17cc:	84 2b       	or	r24, r20
    17ce:	95 2b       	or	r25, r21
    17d0:	a6 2b       	or	r26, r22
    17d2:	b7 2b       	or	r27, r23
    17d4:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <timestamp>
    17d8:	90 93 7b 01 	sts	0x017B, r25	; 0x80017b <timestamp+0x1>
    17dc:	a0 93 7c 01 	sts	0x017C, r26	; 0x80017c <timestamp+0x2>
    17e0:	b0 93 7d 01 	sts	0x017D, r27	; 0x80017d <timestamp+0x3>
    17e4:	b0 9b       	sbis	0x16, 0	; 22
    17e6:	1b c0       	rjmp	.+54     	; 0x181e <__vector_20+0x98>
    17e8:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    17ec:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    17f0:	c9 01       	movw	r24, r18
    17f2:	01 96       	adiw	r24, 0x01	; 1
    17f4:	09 2e       	mov	r0, r25
    17f6:	00 0c       	add	r0, r0
    17f8:	aa 0b       	sbc	r26, r26
    17fa:	bb 0b       	sbc	r27, r27
    17fc:	dc 01       	movw	r26, r24
    17fe:	99 27       	eor	r25, r25
    1800:	88 27       	eor	r24, r24
    1802:	60 e0       	ldi	r22, 0x00	; 0
    1804:	70 e0       	ldi	r23, 0x00	; 0
    1806:	84 2b       	or	r24, r20
    1808:	95 2b       	or	r25, r21
    180a:	a6 2b       	or	r26, r22
    180c:	b7 2b       	or	r27, r23
    180e:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <timestamp>
    1812:	90 93 7b 01 	sts	0x017B, r25	; 0x80017b <timestamp+0x1>
    1816:	a0 93 7c 01 	sts	0x017C, r26	; 0x80017c <timestamp+0x2>
    181a:	b0 93 7d 01 	sts	0x017D, r27	; 0x80017d <timestamp+0x3>
    181e:	e0 91 38 02 	lds	r30, 0x0238	; 0x800238 <mtable+0x1e>
    1822:	f0 91 39 02 	lds	r31, 0x0239	; 0x800239 <mtable+0x1f>
    1826:	30 97       	sbiw	r30, 0x00	; 0
    1828:	39 f0       	breq	.+14     	; 0x1838 <__vector_20+0xb2>
    182a:	6f e0       	ldi	r22, 0x0F	; 15
    182c:	70 e0       	ldi	r23, 0x00	; 0
    182e:	80 91 a0 01 	lds	r24, 0x01A0	; 0x8001a0 <otable+0x1e>
    1832:	90 91 a1 01 	lds	r25, 0x01A1	; 0x8001a1 <otable+0x1f>
    1836:	09 95       	icall
    1838:	0e 94 34 05 	call	0xa68	; 0xa68 <schedule>
    183c:	ff 91       	pop	r31
    183e:	ef 91       	pop	r30
    1840:	bf 91       	pop	r27
    1842:	af 91       	pop	r26
    1844:	9f 91       	pop	r25
    1846:	8f 91       	pop	r24
    1848:	7f 91       	pop	r23
    184a:	6f 91       	pop	r22
    184c:	5f 91       	pop	r21
    184e:	4f 91       	pop	r20
    1850:	3f 91       	pop	r19
    1852:	2f 91       	pop	r18
    1854:	0f 90       	pop	r0
    1856:	0f be       	out	0x3f, r0	; 63
    1858:	0f 90       	pop	r0
    185a:	1f 90       	pop	r1
    185c:	18 95       	reti

0000185e <__vector_21>:
    185e:	1f 92       	push	r1
    1860:	0f 92       	push	r0
    1862:	0f b6       	in	r0, 0x3f	; 63
    1864:	0f 92       	push	r0
    1866:	11 24       	eor	r1, r1
    1868:	2f 93       	push	r18
    186a:	3f 93       	push	r19
    186c:	4f 93       	push	r20
    186e:	5f 93       	push	r21
    1870:	6f 93       	push	r22
    1872:	7f 93       	push	r23
    1874:	8f 93       	push	r24
    1876:	9f 93       	push	r25
    1878:	af 93       	push	r26
    187a:	bf 93       	push	r27
    187c:	ef 93       	push	r30
    187e:	ff 93       	push	r31
    1880:	20 91 78 01 	lds	r18, 0x0178	; 0x800178 <overflows>
    1884:	30 91 79 01 	lds	r19, 0x0179	; 0x800179 <overflows+0x1>
    1888:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    188c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1890:	c9 01       	movw	r24, r18
    1892:	03 2e       	mov	r0, r19
    1894:	00 0c       	add	r0, r0
    1896:	aa 0b       	sbc	r26, r26
    1898:	bb 0b       	sbc	r27, r27
    189a:	dc 01       	movw	r26, r24
    189c:	99 27       	eor	r25, r25
    189e:	88 27       	eor	r24, r24
    18a0:	60 e0       	ldi	r22, 0x00	; 0
    18a2:	70 e0       	ldi	r23, 0x00	; 0
    18a4:	84 2b       	or	r24, r20
    18a6:	95 2b       	or	r25, r21
    18a8:	a6 2b       	or	r26, r22
    18aa:	b7 2b       	or	r27, r23
    18ac:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <timestamp>
    18b0:	90 93 7b 01 	sts	0x017B, r25	; 0x80017b <timestamp+0x1>
    18b4:	a0 93 7c 01 	sts	0x017C, r26	; 0x80017c <timestamp+0x2>
    18b8:	b0 93 7d 01 	sts	0x017D, r27	; 0x80017d <timestamp+0x3>
    18bc:	b0 9b       	sbis	0x16, 0	; 22
    18be:	1b c0       	rjmp	.+54     	; 0x18f6 <__vector_21+0x98>
    18c0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    18c4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    18c8:	c9 01       	movw	r24, r18
    18ca:	01 96       	adiw	r24, 0x01	; 1
    18cc:	09 2e       	mov	r0, r25
    18ce:	00 0c       	add	r0, r0
    18d0:	aa 0b       	sbc	r26, r26
    18d2:	bb 0b       	sbc	r27, r27
    18d4:	dc 01       	movw	r26, r24
    18d6:	99 27       	eor	r25, r25
    18d8:	88 27       	eor	r24, r24
    18da:	60 e0       	ldi	r22, 0x00	; 0
    18dc:	70 e0       	ldi	r23, 0x00	; 0
    18de:	84 2b       	or	r24, r20
    18e0:	95 2b       	or	r25, r21
    18e2:	a6 2b       	or	r26, r22
    18e4:	b7 2b       	or	r27, r23
    18e6:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <timestamp>
    18ea:	90 93 7b 01 	sts	0x017B, r25	; 0x80017b <timestamp+0x1>
    18ee:	a0 93 7c 01 	sts	0x017C, r26	; 0x80017c <timestamp+0x2>
    18f2:	b0 93 7d 01 	sts	0x017D, r27	; 0x80017d <timestamp+0x3>
    18f6:	e0 91 3a 02 	lds	r30, 0x023A	; 0x80023a <mtable+0x20>
    18fa:	f0 91 3b 02 	lds	r31, 0x023B	; 0x80023b <mtable+0x21>
    18fe:	30 97       	sbiw	r30, 0x00	; 0
    1900:	39 f0       	breq	.+14     	; 0x1910 <__vector_21+0xb2>
    1902:	60 e1       	ldi	r22, 0x10	; 16
    1904:	70 e0       	ldi	r23, 0x00	; 0
    1906:	80 91 a2 01 	lds	r24, 0x01A2	; 0x8001a2 <otable+0x20>
    190a:	90 91 a3 01 	lds	r25, 0x01A3	; 0x8001a3 <otable+0x21>
    190e:	09 95       	icall
    1910:	0e 94 34 05 	call	0xa68	; 0xa68 <schedule>
    1914:	ff 91       	pop	r31
    1916:	ef 91       	pop	r30
    1918:	bf 91       	pop	r27
    191a:	af 91       	pop	r26
    191c:	9f 91       	pop	r25
    191e:	8f 91       	pop	r24
    1920:	7f 91       	pop	r23
    1922:	6f 91       	pop	r22
    1924:	5f 91       	pop	r21
    1926:	4f 91       	pop	r20
    1928:	3f 91       	pop	r19
    192a:	2f 91       	pop	r18
    192c:	0f 90       	pop	r0
    192e:	0f be       	out	0x3f, r0	; 63
    1930:	0f 90       	pop	r0
    1932:	1f 90       	pop	r1
    1934:	18 95       	reti

00001936 <__vector_22>:
    1936:	1f 92       	push	r1
    1938:	0f 92       	push	r0
    193a:	0f b6       	in	r0, 0x3f	; 63
    193c:	0f 92       	push	r0
    193e:	11 24       	eor	r1, r1
    1940:	2f 93       	push	r18
    1942:	3f 93       	push	r19
    1944:	4f 93       	push	r20
    1946:	5f 93       	push	r21
    1948:	6f 93       	push	r22
    194a:	7f 93       	push	r23
    194c:	8f 93       	push	r24
    194e:	9f 93       	push	r25
    1950:	af 93       	push	r26
    1952:	bf 93       	push	r27
    1954:	ef 93       	push	r30
    1956:	ff 93       	push	r31
    1958:	20 91 78 01 	lds	r18, 0x0178	; 0x800178 <overflows>
    195c:	30 91 79 01 	lds	r19, 0x0179	; 0x800179 <overflows+0x1>
    1960:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1964:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1968:	c9 01       	movw	r24, r18
    196a:	03 2e       	mov	r0, r19
    196c:	00 0c       	add	r0, r0
    196e:	aa 0b       	sbc	r26, r26
    1970:	bb 0b       	sbc	r27, r27
    1972:	dc 01       	movw	r26, r24
    1974:	99 27       	eor	r25, r25
    1976:	88 27       	eor	r24, r24
    1978:	60 e0       	ldi	r22, 0x00	; 0
    197a:	70 e0       	ldi	r23, 0x00	; 0
    197c:	84 2b       	or	r24, r20
    197e:	95 2b       	or	r25, r21
    1980:	a6 2b       	or	r26, r22
    1982:	b7 2b       	or	r27, r23
    1984:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <timestamp>
    1988:	90 93 7b 01 	sts	0x017B, r25	; 0x80017b <timestamp+0x1>
    198c:	a0 93 7c 01 	sts	0x017C, r26	; 0x80017c <timestamp+0x2>
    1990:	b0 93 7d 01 	sts	0x017D, r27	; 0x80017d <timestamp+0x3>
    1994:	b0 9b       	sbis	0x16, 0	; 22
    1996:	1b c0       	rjmp	.+54     	; 0x19ce <__vector_22+0x98>
    1998:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    199c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    19a0:	c9 01       	movw	r24, r18
    19a2:	01 96       	adiw	r24, 0x01	; 1
    19a4:	09 2e       	mov	r0, r25
    19a6:	00 0c       	add	r0, r0
    19a8:	aa 0b       	sbc	r26, r26
    19aa:	bb 0b       	sbc	r27, r27
    19ac:	dc 01       	movw	r26, r24
    19ae:	99 27       	eor	r25, r25
    19b0:	88 27       	eor	r24, r24
    19b2:	60 e0       	ldi	r22, 0x00	; 0
    19b4:	70 e0       	ldi	r23, 0x00	; 0
    19b6:	84 2b       	or	r24, r20
    19b8:	95 2b       	or	r25, r21
    19ba:	a6 2b       	or	r26, r22
    19bc:	b7 2b       	or	r27, r23
    19be:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <timestamp>
    19c2:	90 93 7b 01 	sts	0x017B, r25	; 0x80017b <timestamp+0x1>
    19c6:	a0 93 7c 01 	sts	0x017C, r26	; 0x80017c <timestamp+0x2>
    19ca:	b0 93 7d 01 	sts	0x017D, r27	; 0x80017d <timestamp+0x3>
    19ce:	e0 91 3c 02 	lds	r30, 0x023C	; 0x80023c <mtable+0x22>
    19d2:	f0 91 3d 02 	lds	r31, 0x023D	; 0x80023d <mtable+0x23>
    19d6:	30 97       	sbiw	r30, 0x00	; 0
    19d8:	39 f0       	breq	.+14     	; 0x19e8 <__vector_22+0xb2>
    19da:	61 e1       	ldi	r22, 0x11	; 17
    19dc:	70 e0       	ldi	r23, 0x00	; 0
    19de:	80 91 a4 01 	lds	r24, 0x01A4	; 0x8001a4 <otable+0x22>
    19e2:	90 91 a5 01 	lds	r25, 0x01A5	; 0x8001a5 <otable+0x23>
    19e6:	09 95       	icall
    19e8:	0e 94 34 05 	call	0xa68	; 0xa68 <schedule>
    19ec:	ff 91       	pop	r31
    19ee:	ef 91       	pop	r30
    19f0:	bf 91       	pop	r27
    19f2:	af 91       	pop	r26
    19f4:	9f 91       	pop	r25
    19f6:	8f 91       	pop	r24
    19f8:	7f 91       	pop	r23
    19fa:	6f 91       	pop	r22
    19fc:	5f 91       	pop	r21
    19fe:	4f 91       	pop	r20
    1a00:	3f 91       	pop	r19
    1a02:	2f 91       	pop	r18
    1a04:	0f 90       	pop	r0
    1a06:	0f be       	out	0x3f, r0	; 63
    1a08:	0f 90       	pop	r0
    1a0a:	1f 90       	pop	r1
    1a0c:	18 95       	reti

00001a0e <enqueueByDeadline>:
    1a0e:	ef 92       	push	r14
    1a10:	ff 92       	push	r15
    1a12:	0f 93       	push	r16
    1a14:	1f 93       	push	r17
    1a16:	cf 93       	push	r28
    1a18:	df 93       	push	r29
    1a1a:	7b 01       	movw	r14, r22
    1a1c:	eb 01       	movw	r28, r22
    1a1e:	a8 81       	ld	r26, Y
    1a20:	b9 81       	ldd	r27, Y+1	; 0x01
    1a22:	10 97       	sbiw	r26, 0x00	; 0
    1a24:	61 f1       	breq	.+88     	; 0x1a7e <enqueueByDeadline+0x70>
    1a26:	fc 01       	movw	r30, r24
    1a28:	06 81       	ldd	r16, Z+6	; 0x06
    1a2a:	17 81       	ldd	r17, Z+7	; 0x07
    1a2c:	20 85       	ldd	r18, Z+8	; 0x08
    1a2e:	31 85       	ldd	r19, Z+9	; 0x09
    1a30:	16 96       	adiw	r26, 0x06	; 6
    1a32:	4d 91       	ld	r20, X+
    1a34:	5d 91       	ld	r21, X+
    1a36:	6d 91       	ld	r22, X+
    1a38:	7c 91       	ld	r23, X
    1a3a:	19 97       	sbiw	r26, 0x09	; 9
    1a3c:	04 17       	cp	r16, r20
    1a3e:	15 07       	cpc	r17, r21
    1a40:	26 07       	cpc	r18, r22
    1a42:	37 07       	cpc	r19, r23
    1a44:	14 f4       	brge	.+4      	; 0x1a4a <enqueueByDeadline+0x3c>
    1a46:	1b c0       	rjmp	.+54     	; 0x1a7e <enqueueByDeadline+0x70>
    1a48:	df 01       	movw	r26, r30
    1a4a:	ed 91       	ld	r30, X+
    1a4c:	fc 91       	ld	r31, X
    1a4e:	11 97       	sbiw	r26, 0x01	; 1
    1a50:	30 97       	sbiw	r30, 0x00	; 0
    1a52:	49 f0       	breq	.+18     	; 0x1a66 <enqueueByDeadline+0x58>
    1a54:	46 81       	ldd	r20, Z+6	; 0x06
    1a56:	57 81       	ldd	r21, Z+7	; 0x07
    1a58:	60 85       	ldd	r22, Z+8	; 0x08
    1a5a:	71 85       	ldd	r23, Z+9	; 0x09
    1a5c:	04 17       	cp	r16, r20
    1a5e:	15 07       	cpc	r17, r21
    1a60:	26 07       	cpc	r18, r22
    1a62:	37 07       	cpc	r19, r23
    1a64:	8c f7       	brge	.-30     	; 0x1a48 <enqueueByDeadline+0x3a>
    1a66:	ec 01       	movw	r28, r24
    1a68:	f9 83       	std	Y+1, r31	; 0x01
    1a6a:	e8 83       	st	Y, r30
    1a6c:	10 97       	sbiw	r26, 0x00	; 0
    1a6e:	21 f4       	brne	.+8      	; 0x1a78 <enqueueByDeadline+0x6a>
    1a70:	f7 01       	movw	r30, r14
    1a72:	91 83       	std	Z+1, r25	; 0x01
    1a74:	80 83       	st	Z, r24
    1a76:	07 c0       	rjmp	.+14     	; 0x1a86 <enqueueByDeadline+0x78>
    1a78:	8d 93       	st	X+, r24
    1a7a:	9c 93       	st	X, r25
    1a7c:	04 c0       	rjmp	.+8      	; 0x1a86 <enqueueByDeadline+0x78>
    1a7e:	ec 01       	movw	r28, r24
    1a80:	b9 83       	std	Y+1, r27	; 0x01
    1a82:	a8 83       	st	Y, r26
    1a84:	f5 cf       	rjmp	.-22     	; 0x1a70 <enqueueByDeadline+0x62>
    1a86:	df 91       	pop	r29
    1a88:	cf 91       	pop	r28
    1a8a:	1f 91       	pop	r17
    1a8c:	0f 91       	pop	r16
    1a8e:	ff 90       	pop	r15
    1a90:	ef 90       	pop	r14
    1a92:	08 95       	ret

00001a94 <enqueueByBaseline>:
    1a94:	ef 92       	push	r14
    1a96:	ff 92       	push	r15
    1a98:	0f 93       	push	r16
    1a9a:	1f 93       	push	r17
    1a9c:	cf 93       	push	r28
    1a9e:	df 93       	push	r29
    1aa0:	7b 01       	movw	r14, r22
    1aa2:	eb 01       	movw	r28, r22
    1aa4:	a8 81       	ld	r26, Y
    1aa6:	b9 81       	ldd	r27, Y+1	; 0x01
    1aa8:	10 97       	sbiw	r26, 0x00	; 0
    1aaa:	61 f1       	breq	.+88     	; 0x1b04 <enqueueByBaseline+0x70>
    1aac:	fc 01       	movw	r30, r24
    1aae:	02 81       	ldd	r16, Z+2	; 0x02
    1ab0:	13 81       	ldd	r17, Z+3	; 0x03
    1ab2:	24 81       	ldd	r18, Z+4	; 0x04
    1ab4:	35 81       	ldd	r19, Z+5	; 0x05
    1ab6:	12 96       	adiw	r26, 0x02	; 2
    1ab8:	4d 91       	ld	r20, X+
    1aba:	5d 91       	ld	r21, X+
    1abc:	6d 91       	ld	r22, X+
    1abe:	7c 91       	ld	r23, X
    1ac0:	15 97       	sbiw	r26, 0x05	; 5
    1ac2:	04 17       	cp	r16, r20
    1ac4:	15 07       	cpc	r17, r21
    1ac6:	26 07       	cpc	r18, r22
    1ac8:	37 07       	cpc	r19, r23
    1aca:	14 f4       	brge	.+4      	; 0x1ad0 <enqueueByBaseline+0x3c>
    1acc:	1b c0       	rjmp	.+54     	; 0x1b04 <enqueueByBaseline+0x70>
    1ace:	df 01       	movw	r26, r30
    1ad0:	ed 91       	ld	r30, X+
    1ad2:	fc 91       	ld	r31, X
    1ad4:	11 97       	sbiw	r26, 0x01	; 1
    1ad6:	30 97       	sbiw	r30, 0x00	; 0
    1ad8:	49 f0       	breq	.+18     	; 0x1aec <enqueueByBaseline+0x58>
    1ada:	42 81       	ldd	r20, Z+2	; 0x02
    1adc:	53 81       	ldd	r21, Z+3	; 0x03
    1ade:	64 81       	ldd	r22, Z+4	; 0x04
    1ae0:	75 81       	ldd	r23, Z+5	; 0x05
    1ae2:	04 17       	cp	r16, r20
    1ae4:	15 07       	cpc	r17, r21
    1ae6:	26 07       	cpc	r18, r22
    1ae8:	37 07       	cpc	r19, r23
    1aea:	8c f7       	brge	.-30     	; 0x1ace <enqueueByBaseline+0x3a>
    1aec:	ec 01       	movw	r28, r24
    1aee:	f9 83       	std	Y+1, r31	; 0x01
    1af0:	e8 83       	st	Y, r30
    1af2:	10 97       	sbiw	r26, 0x00	; 0
    1af4:	21 f4       	brne	.+8      	; 0x1afe <enqueueByBaseline+0x6a>
    1af6:	f7 01       	movw	r30, r14
    1af8:	91 83       	std	Z+1, r25	; 0x01
    1afa:	80 83       	st	Z, r24
    1afc:	07 c0       	rjmp	.+14     	; 0x1b0c <enqueueByBaseline+0x78>
    1afe:	8d 93       	st	X+, r24
    1b00:	9c 93       	st	X, r25
    1b02:	04 c0       	rjmp	.+8      	; 0x1b0c <enqueueByBaseline+0x78>
    1b04:	ec 01       	movw	r28, r24
    1b06:	b9 83       	std	Y+1, r27	; 0x01
    1b08:	a8 83       	st	Y, r26
    1b0a:	f5 cf       	rjmp	.-22     	; 0x1af6 <enqueueByBaseline+0x62>
    1b0c:	df 91       	pop	r29
    1b0e:	cf 91       	pop	r28
    1b10:	1f 91       	pop	r17
    1b12:	0f 91       	pop	r16
    1b14:	ff 90       	pop	r15
    1b16:	ef 90       	pop	r14
    1b18:	08 95       	ret

00001b1a <dequeue>:
    1b1a:	dc 01       	movw	r26, r24
    1b1c:	ed 91       	ld	r30, X+
    1b1e:	fc 91       	ld	r31, X
    1b20:	11 97       	sbiw	r26, 0x01	; 1
    1b22:	30 97       	sbiw	r30, 0x00	; 0
    1b24:	59 f4       	brne	.+22     	; 0x1b3c <dequeue+0x22>
    1b26:	8f ef       	ldi	r24, 0xFF	; 255
    1b28:	80 93 ec 00 	sts	0x00EC, r24	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7fc0ec>
    1b2c:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7fc0ed>
    1b30:	80 93 ee 00 	sts	0x00EE, r24	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7fc0ee>
    1b34:	81 e0       	ldi	r24, 0x01	; 1
    1b36:	83 bf       	out	0x33, r24	; 51
    1b38:	88 95       	sleep
    1b3a:	fd cf       	rjmp	.-6      	; 0x1b36 <dequeue+0x1c>
    1b3c:	20 81       	ld	r18, Z
    1b3e:	31 81       	ldd	r19, Z+1	; 0x01
    1b40:	2d 93       	st	X+, r18
    1b42:	3c 93       	st	X, r19
    1b44:	cf 01       	movw	r24, r30
    1b46:	08 95       	ret

00001b48 <__vector_9>:
    1b48:	1f 92       	push	r1
    1b4a:	0f 92       	push	r0
    1b4c:	0f b6       	in	r0, 0x3f	; 63
    1b4e:	0f 92       	push	r0
    1b50:	11 24       	eor	r1, r1
    1b52:	2f 93       	push	r18
    1b54:	3f 93       	push	r19
    1b56:	4f 93       	push	r20
    1b58:	5f 93       	push	r21
    1b5a:	6f 93       	push	r22
    1b5c:	7f 93       	push	r23
    1b5e:	8f 93       	push	r24
    1b60:	9f 93       	push	r25
    1b62:	ef 93       	push	r30
    1b64:	ff 93       	push	r31
    1b66:	80 91 78 01 	lds	r24, 0x0178	; 0x800178 <overflows>
    1b6a:	90 91 79 01 	lds	r25, 0x0179	; 0x800179 <overflows+0x1>
    1b6e:	01 96       	adiw	r24, 0x01	; 1
    1b70:	90 93 79 01 	sts	0x0179, r25	; 0x800179 <overflows+0x1>
    1b74:	80 93 78 01 	sts	0x0178, r24	; 0x800178 <overflows>
    1b78:	e0 91 7e 01 	lds	r30, 0x017E	; 0x80017e <timerQ>
    1b7c:	f0 91 7f 01 	lds	r31, 0x017F	; 0x80017f <timerQ+0x1>
    1b80:	30 97       	sbiw	r30, 0x00	; 0
    1b82:	01 f1       	breq	.+64     	; 0x1bc4 <__vector_9+0x7c>
    1b84:	42 81       	ldd	r20, Z+2	; 0x02
    1b86:	53 81       	ldd	r21, Z+3	; 0x03
    1b88:	64 81       	ldd	r22, Z+4	; 0x04
    1b8a:	75 81       	ldd	r23, Z+5	; 0x05
    1b8c:	86 17       	cp	r24, r22
    1b8e:	97 07       	cpc	r25, r23
    1b90:	c9 f4       	brne	.+50     	; 0x1bc4 <__vector_9+0x7c>
    1b92:	ca 01       	movw	r24, r20
    1b94:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1b98:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1b9c:	42 1b       	sub	r20, r18
    1b9e:	53 0b       	sbc	r21, r19
    1ba0:	41 30       	cpi	r20, 0x01	; 1
    1ba2:	51 05       	cpc	r21, r1
    1ba4:	29 f4       	brne	.+10     	; 0x1bb0 <__vector_9+0x68>
    1ba6:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1baa:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1bae:	01 96       	adiw	r24, 0x01	; 1
    1bb0:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1bb4:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1bb8:	ef e6       	ldi	r30, 0x6F	; 111
    1bba:	f0 e0       	ldi	r31, 0x00	; 0
    1bbc:	80 81       	ld	r24, Z
    1bbe:	82 60       	ori	r24, 0x02	; 2
    1bc0:	80 83       	st	Z, r24
    1bc2:	05 c0       	rjmp	.+10     	; 0x1bce <__vector_9+0x86>
    1bc4:	ef e6       	ldi	r30, 0x6F	; 111
    1bc6:	f0 e0       	ldi	r31, 0x00	; 0
    1bc8:	80 81       	ld	r24, Z
    1bca:	8d 7f       	andi	r24, 0xFD	; 253
    1bcc:	80 83       	st	Z, r24
    1bce:	ff 91       	pop	r31
    1bd0:	ef 91       	pop	r30
    1bd2:	9f 91       	pop	r25
    1bd4:	8f 91       	pop	r24
    1bd6:	7f 91       	pop	r23
    1bd8:	6f 91       	pop	r22
    1bda:	5f 91       	pop	r21
    1bdc:	4f 91       	pop	r20
    1bde:	3f 91       	pop	r19
    1be0:	2f 91       	pop	r18
    1be2:	0f 90       	pop	r0
    1be4:	0f be       	out	0x3f, r0	; 63
    1be6:	0f 90       	pop	r0
    1be8:	1f 90       	pop	r1
    1bea:	18 95       	reti

00001bec <__vector_7>:
    1bec:	1f 92       	push	r1
    1bee:	0f 92       	push	r0
    1bf0:	0f b6       	in	r0, 0x3f	; 63
    1bf2:	0f 92       	push	r0
    1bf4:	11 24       	eor	r1, r1
    1bf6:	cf 92       	push	r12
    1bf8:	df 92       	push	r13
    1bfa:	ef 92       	push	r14
    1bfc:	ff 92       	push	r15
    1bfe:	2f 93       	push	r18
    1c00:	3f 93       	push	r19
    1c02:	4f 93       	push	r20
    1c04:	5f 93       	push	r21
    1c06:	6f 93       	push	r22
    1c08:	7f 93       	push	r23
    1c0a:	8f 93       	push	r24
    1c0c:	9f 93       	push	r25
    1c0e:	af 93       	push	r26
    1c10:	bf 93       	push	r27
    1c12:	ef 93       	push	r30
    1c14:	ff 93       	push	r31
    1c16:	c0 90 78 01 	lds	r12, 0x0178	; 0x800178 <overflows>
    1c1a:	d0 90 79 01 	lds	r13, 0x0179	; 0x800179 <overflows+0x1>
    1c1e:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1c22:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1c26:	b0 99       	sbic	0x16, 0	; 22
    1c28:	0f c0       	rjmp	.+30     	; 0x1c48 <__vector_7+0x5c>
    1c2a:	0d 2c       	mov	r0, r13
    1c2c:	00 0c       	add	r0, r0
    1c2e:	ee 08       	sbc	r14, r14
    1c30:	ff 08       	sbc	r15, r15
    1c32:	d6 01       	movw	r26, r12
    1c34:	99 27       	eor	r25, r25
    1c36:	88 27       	eor	r24, r24
    1c38:	69 01       	movw	r12, r18
    1c3a:	e1 2c       	mov	r14, r1
    1c3c:	f1 2c       	mov	r15, r1
    1c3e:	c8 2a       	or	r12, r24
    1c40:	d9 2a       	or	r13, r25
    1c42:	ea 2a       	or	r14, r26
    1c44:	fb 2a       	or	r15, r27
    1c46:	15 c0       	rjmp	.+42     	; 0x1c72 <__vector_7+0x86>
    1c48:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1c4c:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1c50:	8f ef       	ldi	r24, 0xFF	; 255
    1c52:	c8 1a       	sub	r12, r24
    1c54:	d8 0a       	sbc	r13, r24
    1c56:	0d 2c       	mov	r0, r13
    1c58:	00 0c       	add	r0, r0
    1c5a:	ee 08       	sbc	r14, r14
    1c5c:	ff 08       	sbc	r15, r15
    1c5e:	d6 01       	movw	r26, r12
    1c60:	99 27       	eor	r25, r25
    1c62:	88 27       	eor	r24, r24
    1c64:	69 01       	movw	r12, r18
    1c66:	e1 2c       	mov	r14, r1
    1c68:	f1 2c       	mov	r15, r1
    1c6a:	c8 2a       	or	r12, r24
    1c6c:	d9 2a       	or	r13, r25
    1c6e:	ea 2a       	or	r14, r26
    1c70:	fb 2a       	or	r15, r27
    1c72:	e0 91 7e 01 	lds	r30, 0x017E	; 0x80017e <timerQ>
    1c76:	f0 91 7f 01 	lds	r31, 0x017F	; 0x80017f <timerQ+0x1>
    1c7a:	30 97       	sbiw	r30, 0x00	; 0
    1c7c:	09 f4       	brne	.+2      	; 0x1c80 <__vector_7+0x94>
    1c7e:	42 c0       	rjmp	.+132    	; 0x1d04 <__vector_7+0x118>
    1c80:	82 81       	ldd	r24, Z+2	; 0x02
    1c82:	93 81       	ldd	r25, Z+3	; 0x03
    1c84:	a4 81       	ldd	r26, Z+4	; 0x04
    1c86:	b5 81       	ldd	r27, Z+5	; 0x05
    1c88:	8c 19       	sub	r24, r12
    1c8a:	9d 09       	sbc	r25, r13
    1c8c:	ae 09       	sbc	r26, r14
    1c8e:	bf 09       	sbc	r27, r15
    1c90:	18 16       	cp	r1, r24
    1c92:	19 06       	cpc	r1, r25
    1c94:	1a 06       	cpc	r1, r26
    1c96:	1b 06       	cpc	r1, r27
    1c98:	ec f1       	brlt	.+122    	; 0x1d14 <__vector_7+0x128>
    1c9a:	8e e7       	ldi	r24, 0x7E	; 126
    1c9c:	91 e0       	ldi	r25, 0x01	; 1
    1c9e:	0e 94 8d 0d 	call	0x1b1a	; 0x1b1a <dequeue>
    1ca2:	60 e8       	ldi	r22, 0x80	; 128
    1ca4:	71 e0       	ldi	r23, 0x01	; 1
    1ca6:	0e 94 07 0d 	call	0x1a0e	; 0x1a0e <enqueueByDeadline>
    1caa:	e0 91 7e 01 	lds	r30, 0x017E	; 0x80017e <timerQ>
    1cae:	f0 91 7f 01 	lds	r31, 0x017F	; 0x80017f <timerQ+0x1>
    1cb2:	30 97       	sbiw	r30, 0x00	; 0
    1cb4:	39 f1       	breq	.+78     	; 0x1d04 <__vector_7+0x118>
    1cb6:	82 81       	ldd	r24, Z+2	; 0x02
    1cb8:	93 81       	ldd	r25, Z+3	; 0x03
    1cba:	a4 81       	ldd	r26, Z+4	; 0x04
    1cbc:	b5 81       	ldd	r27, Z+5	; 0x05
    1cbe:	8c 19       	sub	r24, r12
    1cc0:	9d 09       	sbc	r25, r13
    1cc2:	ae 09       	sbc	r26, r14
    1cc4:	bf 09       	sbc	r27, r15
    1cc6:	18 16       	cp	r1, r24
    1cc8:	19 06       	cpc	r1, r25
    1cca:	1a 06       	cpc	r1, r26
    1ccc:	1b 06       	cpc	r1, r27
    1cce:	2c f7       	brge	.-54     	; 0x1c9a <__vector_7+0xae>
    1cd0:	21 c0       	rjmp	.+66     	; 0x1d14 <__vector_7+0x128>
    1cd2:	9c 01       	movw	r18, r24
    1cd4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1cd8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1cdc:	84 1b       	sub	r24, r20
    1cde:	95 0b       	sbc	r25, r21
    1ce0:	01 97       	sbiw	r24, 0x01	; 1
    1ce2:	31 f4       	brne	.+12     	; 0x1cf0 <__vector_7+0x104>
    1ce4:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1ce8:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1cec:	2f 5f       	subi	r18, 0xFF	; 255
    1cee:	3f 4f       	sbci	r19, 0xFF	; 255
    1cf0:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1cf4:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1cf8:	ef e6       	ldi	r30, 0x6F	; 111
    1cfa:	f0 e0       	ldi	r31, 0x00	; 0
    1cfc:	80 81       	ld	r24, Z
    1cfe:	82 60       	ori	r24, 0x02	; 2
    1d00:	80 83       	st	Z, r24
    1d02:	05 c0       	rjmp	.+10     	; 0x1d0e <__vector_7+0x122>
    1d04:	ef e6       	ldi	r30, 0x6F	; 111
    1d06:	f0 e0       	ldi	r31, 0x00	; 0
    1d08:	80 81       	ld	r24, Z
    1d0a:	8d 7f       	andi	r24, 0xFD	; 253
    1d0c:	80 83       	st	Z, r24
    1d0e:	0e 94 34 05 	call	0xa68	; 0xa68 <schedule>
    1d12:	0c c0       	rjmp	.+24     	; 0x1d2c <__vector_7+0x140>
    1d14:	82 81       	ldd	r24, Z+2	; 0x02
    1d16:	93 81       	ldd	r25, Z+3	; 0x03
    1d18:	a4 81       	ldd	r26, Z+4	; 0x04
    1d1a:	b5 81       	ldd	r27, Z+5	; 0x05
    1d1c:	20 91 78 01 	lds	r18, 0x0178	; 0x800178 <overflows>
    1d20:	30 91 79 01 	lds	r19, 0x0179	; 0x800179 <overflows+0x1>
    1d24:	2a 17       	cp	r18, r26
    1d26:	3b 07       	cpc	r19, r27
    1d28:	69 f7       	brne	.-38     	; 0x1d04 <__vector_7+0x118>
    1d2a:	d3 cf       	rjmp	.-90     	; 0x1cd2 <__vector_7+0xe6>
    1d2c:	ff 91       	pop	r31
    1d2e:	ef 91       	pop	r30
    1d30:	bf 91       	pop	r27
    1d32:	af 91       	pop	r26
    1d34:	9f 91       	pop	r25
    1d36:	8f 91       	pop	r24
    1d38:	7f 91       	pop	r23
    1d3a:	6f 91       	pop	r22
    1d3c:	5f 91       	pop	r21
    1d3e:	4f 91       	pop	r20
    1d40:	3f 91       	pop	r19
    1d42:	2f 91       	pop	r18
    1d44:	ff 90       	pop	r15
    1d46:	ef 90       	pop	r14
    1d48:	df 90       	pop	r13
    1d4a:	cf 90       	pop	r12
    1d4c:	0f 90       	pop	r0
    1d4e:	0f be       	out	0x3f, r0	; 63
    1d50:	0f 90       	pop	r0
    1d52:	1f 90       	pop	r1
    1d54:	18 95       	reti

00001d56 <async>:
    1d56:	3f 92       	push	r3
    1d58:	4f 92       	push	r4
    1d5a:	5f 92       	push	r5
    1d5c:	6f 92       	push	r6
    1d5e:	7f 92       	push	r7
    1d60:	8f 92       	push	r8
    1d62:	9f 92       	push	r9
    1d64:	af 92       	push	r10
    1d66:	bf 92       	push	r11
    1d68:	cf 92       	push	r12
    1d6a:	df 92       	push	r13
    1d6c:	ef 92       	push	r14
    1d6e:	ff 92       	push	r15
    1d70:	0f 93       	push	r16
    1d72:	1f 93       	push	r17
    1d74:	cf 93       	push	r28
    1d76:	df 93       	push	r29
    1d78:	2b 01       	movw	r4, r22
    1d7a:	3c 01       	movw	r6, r24
    1d7c:	49 01       	movw	r8, r18
    1d7e:	5a 01       	movw	r10, r20
    1d80:	8f b7       	in	r24, 0x3f	; 63
    1d82:	80 78       	andi	r24, 0x80	; 128
    1d84:	38 2e       	mov	r3, r24
    1d86:	f8 94       	cli
    1d88:	8a e2       	ldi	r24, 0x2A	; 42
    1d8a:	91 e0       	ldi	r25, 0x01	; 1
    1d8c:	0e 94 8d 0d 	call	0x1b1a	; 0x1b1a <dequeue>
    1d90:	ec 01       	movw	r28, r24
    1d92:	1b 87       	std	Y+11, r17	; 0x0b
    1d94:	0a 87       	std	Y+10, r16	; 0x0a
    1d96:	fd 86       	std	Y+13, r15	; 0x0d
    1d98:	ec 86       	std	Y+12, r14	; 0x0c
    1d9a:	df 86       	std	Y+15, r13	; 0x0f
    1d9c:	ce 86       	std	Y+14, r12	; 0x0e
    1d9e:	33 20       	and	r3, r3
    1da0:	61 f0       	breq	.+24     	; 0x1dba <async+0x64>
    1da2:	e0 91 24 01 	lds	r30, 0x0124	; 0x800124 <current>
    1da6:	f0 91 25 01 	lds	r31, 0x0125	; 0x800125 <current+0x1>
    1daa:	02 80       	ldd	r0, Z+2	; 0x02
    1dac:	f3 81       	ldd	r31, Z+3	; 0x03
    1dae:	e0 2d       	mov	r30, r0
    1db0:	82 81       	ldd	r24, Z+2	; 0x02
    1db2:	93 81       	ldd	r25, Z+3	; 0x03
    1db4:	a4 81       	ldd	r26, Z+4	; 0x04
    1db6:	b5 81       	ldd	r27, Z+5	; 0x05
    1db8:	08 c0       	rjmp	.+16     	; 0x1dca <async+0x74>
    1dba:	80 91 7a 01 	lds	r24, 0x017A	; 0x80017a <timestamp>
    1dbe:	90 91 7b 01 	lds	r25, 0x017B	; 0x80017b <timestamp+0x1>
    1dc2:	a0 91 7c 01 	lds	r26, 0x017C	; 0x80017c <timestamp+0x2>
    1dc6:	b0 91 7d 01 	lds	r27, 0x017D	; 0x80017d <timestamp+0x3>
    1dca:	48 0e       	add	r4, r24
    1dcc:	59 1e       	adc	r5, r25
    1dce:	6a 1e       	adc	r6, r26
    1dd0:	7b 1e       	adc	r7, r27
    1dd2:	4a 82       	std	Y+2, r4	; 0x02
    1dd4:	5b 82       	std	Y+3, r5	; 0x03
    1dd6:	6c 82       	std	Y+4, r6	; 0x04
    1dd8:	7d 82       	std	Y+5, r7	; 0x05
    1dda:	18 14       	cp	r1, r8
    1ddc:	19 04       	cpc	r1, r9
    1dde:	1a 04       	cpc	r1, r10
    1de0:	1b 04       	cpc	r1, r11
    1de2:	44 f0       	brlt	.+16     	; 0x1df4 <async+0x9e>
    1de4:	0f 2e       	mov	r0, r31
    1de6:	88 24       	eor	r8, r8
    1de8:	8a 94       	dec	r8
    1dea:	98 2c       	mov	r9, r8
    1dec:	a8 2c       	mov	r10, r8
    1dee:	ff e7       	ldi	r31, 0x7F	; 127
    1df0:	bf 2e       	mov	r11, r31
    1df2:	f0 2d       	mov	r31, r0
    1df4:	84 0c       	add	r8, r4
    1df6:	95 1c       	adc	r9, r5
    1df8:	a6 1c       	adc	r10, r6
    1dfa:	b7 1c       	adc	r11, r7
    1dfc:	8e 82       	std	Y+6, r8	; 0x06
    1dfe:	9f 82       	std	Y+7, r9	; 0x07
    1e00:	a8 86       	std	Y+8, r10	; 0x08
    1e02:	b9 86       	std	Y+9, r11	; 0x09
    1e04:	80 91 78 01 	lds	r24, 0x0178	; 0x800178 <overflows>
    1e08:	90 91 79 01 	lds	r25, 0x0179	; 0x800179 <overflows+0x1>
    1e0c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1e10:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1e14:	b0 99       	sbic	0x16, 0	; 22
    1e16:	0e c0       	rjmp	.+28     	; 0x1e34 <async+0xde>
    1e18:	09 2e       	mov	r0, r25
    1e1a:	00 0c       	add	r0, r0
    1e1c:	aa 0b       	sbc	r26, r26
    1e1e:	bb 0b       	sbc	r27, r27
    1e20:	dc 01       	movw	r26, r24
    1e22:	99 27       	eor	r25, r25
    1e24:	88 27       	eor	r24, r24
    1e26:	60 e0       	ldi	r22, 0x00	; 0
    1e28:	70 e0       	ldi	r23, 0x00	; 0
    1e2a:	84 2b       	or	r24, r20
    1e2c:	95 2b       	or	r25, r21
    1e2e:	a6 2b       	or	r26, r22
    1e30:	b7 2b       	or	r27, r23
    1e32:	13 c0       	rjmp	.+38     	; 0x1e5a <async+0x104>
    1e34:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1e38:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1e3c:	01 96       	adiw	r24, 0x01	; 1
    1e3e:	09 2e       	mov	r0, r25
    1e40:	00 0c       	add	r0, r0
    1e42:	aa 0b       	sbc	r26, r26
    1e44:	bb 0b       	sbc	r27, r27
    1e46:	dc 01       	movw	r26, r24
    1e48:	99 27       	eor	r25, r25
    1e4a:	88 27       	eor	r24, r24
    1e4c:	a9 01       	movw	r20, r18
    1e4e:	60 e0       	ldi	r22, 0x00	; 0
    1e50:	70 e0       	ldi	r23, 0x00	; 0
    1e52:	84 2b       	or	r24, r20
    1e54:	95 2b       	or	r25, r21
    1e56:	a6 2b       	or	r26, r22
    1e58:	b7 2b       	or	r27, r23
    1e5a:	48 1a       	sub	r4, r24
    1e5c:	59 0a       	sbc	r5, r25
    1e5e:	6a 0a       	sbc	r6, r26
    1e60:	7b 0a       	sbc	r7, r27
    1e62:	14 14       	cp	r1, r4
    1e64:	15 04       	cpc	r1, r5
    1e66:	16 04       	cpc	r1, r6
    1e68:	17 04       	cpc	r1, r7
    1e6a:	ac f5       	brge	.+106    	; 0x1ed6 <async+0x180>
    1e6c:	6e e7       	ldi	r22, 0x7E	; 126
    1e6e:	71 e0       	ldi	r23, 0x01	; 1
    1e70:	ce 01       	movw	r24, r28
    1e72:	0e 94 4a 0d 	call	0x1a94	; 0x1a94 <enqueueByBaseline>
    1e76:	e0 91 7e 01 	lds	r30, 0x017E	; 0x80017e <timerQ>
    1e7a:	f0 91 7f 01 	lds	r31, 0x017F	; 0x80017f <timerQ+0x1>
    1e7e:	30 97       	sbiw	r30, 0x00	; 0
    1e80:	21 f1       	breq	.+72     	; 0x1eca <async+0x174>
    1e82:	82 81       	ldd	r24, Z+2	; 0x02
    1e84:	93 81       	ldd	r25, Z+3	; 0x03
    1e86:	a4 81       	ldd	r26, Z+4	; 0x04
    1e88:	b5 81       	ldd	r27, Z+5	; 0x05
    1e8a:	20 91 78 01 	lds	r18, 0x0178	; 0x800178 <overflows>
    1e8e:	30 91 79 01 	lds	r19, 0x0179	; 0x800179 <overflows+0x1>
    1e92:	2a 17       	cp	r18, r26
    1e94:	3b 07       	cpc	r19, r27
    1e96:	c9 f4       	brne	.+50     	; 0x1eca <async+0x174>
    1e98:	9c 01       	movw	r18, r24
    1e9a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1e9e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1ea2:	84 1b       	sub	r24, r20
    1ea4:	95 0b       	sbc	r25, r21
    1ea6:	01 97       	sbiw	r24, 0x01	; 1
    1ea8:	31 f4       	brne	.+12     	; 0x1eb6 <async+0x160>
    1eaa:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1eae:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1eb2:	2f 5f       	subi	r18, 0xFF	; 255
    1eb4:	3f 4f       	sbci	r19, 0xFF	; 255
    1eb6:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1eba:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1ebe:	ef e6       	ldi	r30, 0x6F	; 111
    1ec0:	f0 e0       	ldi	r31, 0x00	; 0
    1ec2:	80 81       	ld	r24, Z
    1ec4:	82 60       	ori	r24, 0x02	; 2
    1ec6:	80 83       	st	Z, r24
    1ec8:	41 c0       	rjmp	.+130    	; 0x1f4c <async+0x1f6>
    1eca:	ef e6       	ldi	r30, 0x6F	; 111
    1ecc:	f0 e0       	ldi	r31, 0x00	; 0
    1ece:	80 81       	ld	r24, Z
    1ed0:	8d 7f       	andi	r24, 0xFD	; 253
    1ed2:	80 83       	st	Z, r24
    1ed4:	3b c0       	rjmp	.+118    	; 0x1f4c <async+0x1f6>
    1ed6:	60 e8       	ldi	r22, 0x80	; 128
    1ed8:	71 e0       	ldi	r23, 0x01	; 1
    1eda:	ce 01       	movw	r24, r28
    1edc:	0e 94 07 0d 	call	0x1a0e	; 0x1a0e <enqueueByDeadline>
    1ee0:	33 20       	and	r3, r3
    1ee2:	b9 f1       	breq	.+110    	; 0x1f52 <async+0x1fc>
    1ee4:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <threadPool>
    1ee8:	90 91 29 01 	lds	r25, 0x0129	; 0x800129 <threadPool+0x1>
    1eec:	00 97       	sbiw	r24, 0x00	; 0
    1eee:	81 f1       	breq	.+96     	; 0x1f50 <async+0x1fa>
    1ef0:	e0 91 26 01 	lds	r30, 0x0126	; 0x800126 <activeStack>
    1ef4:	f0 91 27 01 	lds	r31, 0x0127	; 0x800127 <activeStack+0x1>
    1ef8:	20 91 80 01 	lds	r18, 0x0180	; 0x800180 <msgQ>
    1efc:	30 91 81 01 	lds	r19, 0x0181	; 0x800181 <msgQ+0x1>
    1f00:	02 81       	ldd	r16, Z+2	; 0x02
    1f02:	13 81       	ldd	r17, Z+3	; 0x03
    1f04:	d9 01       	movw	r26, r18
    1f06:	16 96       	adiw	r26, 0x06	; 6
    1f08:	4d 91       	ld	r20, X+
    1f0a:	5d 91       	ld	r21, X+
    1f0c:	6d 91       	ld	r22, X+
    1f0e:	7c 91       	ld	r23, X
    1f10:	19 97       	sbiw	r26, 0x09	; 9
    1f12:	d8 01       	movw	r26, r16
    1f14:	16 96       	adiw	r26, 0x06	; 6
    1f16:	0d 91       	ld	r16, X+
    1f18:	1d 91       	ld	r17, X+
    1f1a:	2d 91       	ld	r18, X+
    1f1c:	3c 91       	ld	r19, X
    1f1e:	19 97       	sbiw	r26, 0x09	; 9
    1f20:	40 1b       	sub	r20, r16
    1f22:	51 0b       	sbc	r21, r17
    1f24:	62 0b       	sbc	r22, r18
    1f26:	73 0b       	sbc	r23, r19
    1f28:	9a f4       	brpl	.+38     	; 0x1f50 <async+0x1fa>
    1f2a:	dc 01       	movw	r26, r24
    1f2c:	2d 91       	ld	r18, X+
    1f2e:	3c 91       	ld	r19, X
    1f30:	11 97       	sbiw	r26, 0x01	; 1
    1f32:	30 93 29 01 	sts	0x0129, r19	; 0x800129 <threadPool+0x1>
    1f36:	20 93 28 01 	sts	0x0128, r18	; 0x800128 <threadPool>
    1f3a:	ed 93       	st	X+, r30
    1f3c:	fc 93       	st	X, r31
    1f3e:	90 93 27 01 	sts	0x0127, r25	; 0x800127 <activeStack+0x1>
    1f42:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <activeStack>
    1f46:	0e 94 14 05 	call	0xa28	; 0xa28 <dispatch>
    1f4a:	02 c0       	rjmp	.+4      	; 0x1f50 <async+0x1fa>
    1f4c:	33 20       	and	r3, r3
    1f4e:	09 f0       	breq	.+2      	; 0x1f52 <async+0x1fc>
    1f50:	78 94       	sei
    1f52:	ce 01       	movw	r24, r28
    1f54:	df 91       	pop	r29
    1f56:	cf 91       	pop	r28
    1f58:	1f 91       	pop	r17
    1f5a:	0f 91       	pop	r16
    1f5c:	ff 90       	pop	r15
    1f5e:	ef 90       	pop	r14
    1f60:	df 90       	pop	r13
    1f62:	cf 90       	pop	r12
    1f64:	bf 90       	pop	r11
    1f66:	af 90       	pop	r10
    1f68:	9f 90       	pop	r9
    1f6a:	8f 90       	pop	r8
    1f6c:	7f 90       	pop	r7
    1f6e:	6f 90       	pop	r6
    1f70:	5f 90       	pop	r5
    1f72:	4f 90       	pop	r4
    1f74:	3f 90       	pop	r3
    1f76:	08 95       	ret

00001f78 <sync>:
    1f78:	cf 92       	push	r12
    1f7a:	df 92       	push	r13
    1f7c:	ef 92       	push	r14
    1f7e:	ff 92       	push	r15
    1f80:	0f 93       	push	r16
    1f82:	1f 93       	push	r17
    1f84:	cf 93       	push	r28
    1f86:	df 93       	push	r29
    1f88:	ec 01       	movw	r28, r24
    1f8a:	7b 01       	movw	r14, r22
    1f8c:	6a 01       	movw	r12, r20
    1f8e:	1f b7       	in	r17, 0x3f	; 63
    1f90:	10 78       	andi	r17, 0x80	; 128
    1f92:	f8 94       	cli
    1f94:	a8 81       	ld	r26, Y
    1f96:	b9 81       	ldd	r27, Y+1	; 0x01
    1f98:	10 97       	sbiw	r26, 0x00	; 0
    1f9a:	61 f1       	breq	.+88     	; 0x1ff4 <sync+0x7c>
    1f9c:	14 96       	adiw	r26, 0x04	; 4
    1f9e:	ed 91       	ld	r30, X+
    1fa0:	fc 91       	ld	r31, X
    1fa2:	15 97       	sbiw	r26, 0x05	; 5
    1fa4:	30 97       	sbiw	r30, 0x00	; 0
    1fa6:	41 f0       	breq	.+16     	; 0x1fb8 <sync+0x40>
    1fa8:	a0 81       	ld	r26, Z
    1faa:	b1 81       	ldd	r27, Z+1	; 0x01
    1fac:	14 96       	adiw	r26, 0x04	; 4
    1fae:	ed 91       	ld	r30, X+
    1fb0:	fc 91       	ld	r31, X
    1fb2:	15 97       	sbiw	r26, 0x05	; 5
    1fb4:	30 97       	sbiw	r30, 0x00	; 0
    1fb6:	c1 f7       	brne	.-16     	; 0x1fa8 <sync+0x30>
    1fb8:	20 91 24 01 	lds	r18, 0x0124	; 0x800124 <current>
    1fbc:	30 91 25 01 	lds	r19, 0x0125	; 0x800125 <current+0x1>
    1fc0:	2a 17       	cp	r18, r26
    1fc2:	3b 07       	cpc	r19, r27
    1fc4:	21 f0       	breq	.+8      	; 0x1fce <sync+0x56>
    1fc6:	11 23       	and	r17, r17
    1fc8:	09 f4       	brne	.+2      	; 0x1fcc <sync+0x54>
    1fca:	3d c0       	rjmp	.+122    	; 0x2046 <sync+0xce>
    1fcc:	07 c0       	rjmp	.+14     	; 0x1fdc <sync+0x64>
    1fce:	11 23       	and	r17, r17
    1fd0:	09 f4       	brne	.+2      	; 0x1fd4 <sync+0x5c>
    1fd2:	3c c0       	rjmp	.+120    	; 0x204c <sync+0xd4>
    1fd4:	78 94       	sei
    1fd6:	8f ef       	ldi	r24, 0xFF	; 255
    1fd8:	9f ef       	ldi	r25, 0xFF	; 255
    1fda:	52 c0       	rjmp	.+164    	; 0x2080 <sync+0x108>
    1fdc:	8a 81       	ldd	r24, Y+2	; 0x02
    1fde:	9b 81       	ldd	r25, Y+3	; 0x03
    1fe0:	00 97       	sbiw	r24, 0x00	; 0
    1fe2:	d1 f1       	breq	.+116    	; 0x2058 <sync+0xe0>
    1fe4:	fc 01       	movw	r30, r24
    1fe6:	15 82       	std	Z+5, r1	; 0x05
    1fe8:	14 82       	std	Z+4, r1	; 0x04
    1fea:	36 c0       	rjmp	.+108    	; 0x2058 <sync+0xe0>
    1fec:	78 94       	sei
    1fee:	80 e0       	ldi	r24, 0x00	; 0
    1ff0:	90 e0       	ldi	r25, 0x00	; 0
    1ff2:	46 c0       	rjmp	.+140    	; 0x2080 <sync+0x108>
    1ff4:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <current>
    1ff8:	90 91 25 01 	lds	r25, 0x0125	; 0x800125 <current+0x1>
    1ffc:	99 83       	std	Y+1, r25	; 0x01
    1ffe:	88 83       	st	Y, r24
    2000:	11 23       	and	r17, r17
    2002:	29 f0       	breq	.+10     	; 0x200e <sync+0x96>
    2004:	8a 81       	ldd	r24, Y+2	; 0x02
    2006:	9b 81       	ldd	r25, Y+3	; 0x03
    2008:	01 97       	sbiw	r24, 0x01	; 1
    200a:	09 f0       	breq	.+2      	; 0x200e <sync+0x96>
    200c:	78 94       	sei
    200e:	b6 01       	movw	r22, r12
    2010:	ce 01       	movw	r24, r28
    2012:	f7 01       	movw	r30, r14
    2014:	09 95       	icall
    2016:	f8 2e       	mov	r15, r24
    2018:	09 2f       	mov	r16, r25
    201a:	8f b7       	in	r24, 0x3f	; 63
    201c:	f8 94       	cli
    201e:	19 82       	std	Y+1, r1	; 0x01
    2020:	18 82       	st	Y, r1
    2022:	8a 81       	ldd	r24, Y+2	; 0x02
    2024:	9b 81       	ldd	r25, Y+3	; 0x03
    2026:	82 30       	cpi	r24, 0x02	; 2
    2028:	91 05       	cpc	r25, r1
    202a:	38 f0       	brcs	.+14     	; 0x203a <sync+0xc2>
    202c:	1b 82       	std	Y+3, r1	; 0x03
    202e:	1a 82       	std	Y+2, r1	; 0x02
    2030:	fc 01       	movw	r30, r24
    2032:	15 82       	std	Z+5, r1	; 0x05
    2034:	14 82       	std	Z+4, r1	; 0x04
    2036:	0e 94 14 05 	call	0xa28	; 0xa28 <dispatch>
    203a:	11 23       	and	r17, r17
    203c:	51 f0       	breq	.+20     	; 0x2052 <sync+0xda>
    203e:	78 94       	sei
    2040:	8f 2d       	mov	r24, r15
    2042:	90 2f       	mov	r25, r16
    2044:	1d c0       	rjmp	.+58     	; 0x2080 <sync+0x108>
    2046:	8f ef       	ldi	r24, 0xFF	; 255
    2048:	9f ef       	ldi	r25, 0xFF	; 255
    204a:	1a c0       	rjmp	.+52     	; 0x2080 <sync+0x108>
    204c:	8f ef       	ldi	r24, 0xFF	; 255
    204e:	9f ef       	ldi	r25, 0xFF	; 255
    2050:	17 c0       	rjmp	.+46     	; 0x2080 <sync+0x108>
    2052:	8f 2d       	mov	r24, r15
    2054:	90 2f       	mov	r25, r16
    2056:	14 c0       	rjmp	.+40     	; 0x2080 <sync+0x108>
    2058:	3b 83       	std	Y+3, r19	; 0x03
    205a:	2a 83       	std	Y+2, r18	; 0x02
    205c:	f9 01       	movw	r30, r18
    205e:	d5 83       	std	Z+5, r29	; 0x05
    2060:	c4 83       	std	Z+4, r28	; 0x04
    2062:	cd 01       	movw	r24, r26
    2064:	0e 94 14 05 	call	0xa28	; 0xa28 <dispatch>
    2068:	e0 91 24 01 	lds	r30, 0x0124	; 0x800124 <current>
    206c:	f0 91 25 01 	lds	r31, 0x0125	; 0x800125 <current+0x1>
    2070:	82 81       	ldd	r24, Z+2	; 0x02
    2072:	93 81       	ldd	r25, Z+3	; 0x03
    2074:	89 2b       	or	r24, r25
    2076:	09 f4       	brne	.+2      	; 0x207a <sync+0x102>
    2078:	b9 cf       	rjmp	.-142    	; 0x1fec <sync+0x74>
    207a:	f9 83       	std	Y+1, r31	; 0x01
    207c:	e8 83       	st	Y, r30
    207e:	c2 cf       	rjmp	.-124    	; 0x2004 <sync+0x8c>
    2080:	df 91       	pop	r29
    2082:	cf 91       	pop	r28
    2084:	1f 91       	pop	r17
    2086:	0f 91       	pop	r16
    2088:	ff 90       	pop	r15
    208a:	ef 90       	pop	r14
    208c:	df 90       	pop	r13
    208e:	cf 90       	pop	r12
    2090:	08 95       	ret

00002092 <run>:
    2092:	00 91 24 01 	lds	r16, 0x0124	; 0x800124 <current>
    2096:	10 91 25 01 	lds	r17, 0x0125	; 0x800125 <current+0x1>
    209a:	80 e8       	ldi	r24, 0x80	; 128
    209c:	91 e0       	ldi	r25, 0x01	; 1
    209e:	0e 94 8d 0d 	call	0x1b1a	; 0x1b1a <dequeue>
    20a2:	ec 01       	movw	r28, r24
    20a4:	d8 01       	movw	r26, r16
    20a6:	13 96       	adiw	r26, 0x03	; 3
    20a8:	9c 93       	st	X, r25
    20aa:	8e 93       	st	-X, r24
    20ac:	12 97       	sbiw	r26, 0x02	; 2
    20ae:	78 94       	sei
    20b0:	4e 85       	ldd	r20, Y+14	; 0x0e
    20b2:	5f 85       	ldd	r21, Y+15	; 0x0f
    20b4:	6c 85       	ldd	r22, Y+12	; 0x0c
    20b6:	7d 85       	ldd	r23, Y+13	; 0x0d
    20b8:	8a 85       	ldd	r24, Y+10	; 0x0a
    20ba:	9b 85       	ldd	r25, Y+11	; 0x0b
    20bc:	0e 94 bc 0f 	call	0x1f78	; 0x1f78 <sync>
    20c0:	8f b7       	in	r24, 0x3f	; 63
    20c2:	f8 94       	cli
    20c4:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <msgPool>
    20c8:	90 91 2b 01 	lds	r25, 0x012B	; 0x80012b <msgPool+0x1>
    20cc:	99 83       	std	Y+1, r25	; 0x01
    20ce:	88 83       	st	Y, r24
    20d0:	d0 93 2b 01 	sts	0x012B, r29	; 0x80012b <msgPool+0x1>
    20d4:	c0 93 2a 01 	sts	0x012A, r28	; 0x80012a <msgPool>
    20d8:	e0 91 26 01 	lds	r30, 0x0126	; 0x800126 <activeStack>
    20dc:	f0 91 27 01 	lds	r31, 0x0127	; 0x800127 <activeStack+0x1>
    20e0:	00 81       	ld	r16, Z
    20e2:	11 81       	ldd	r17, Z+1	; 0x01
    20e4:	e8 01       	movw	r28, r16
    20e6:	2a 81       	ldd	r18, Y+2	; 0x02
    20e8:	3b 81       	ldd	r19, Y+3	; 0x03
    20ea:	a0 91 80 01 	lds	r26, 0x0180	; 0x800180 <msgQ>
    20ee:	b0 91 81 01 	lds	r27, 0x0181	; 0x800181 <msgQ+0x1>
    20f2:	10 97       	sbiw	r26, 0x00	; 0
    20f4:	c1 f0       	breq	.+48     	; 0x2126 <run+0x94>
    20f6:	21 15       	cp	r18, r1
    20f8:	31 05       	cpc	r19, r1
    20fa:	59 f2       	breq	.-106    	; 0x2092 <run>
    20fc:	16 96       	adiw	r26, 0x06	; 6
    20fe:	8d 91       	ld	r24, X+
    2100:	9d 91       	ld	r25, X+
    2102:	0d 90       	ld	r0, X+
    2104:	bc 91       	ld	r27, X
    2106:	a0 2d       	mov	r26, r0
    2108:	e9 01       	movw	r28, r18
    210a:	4e 81       	ldd	r20, Y+6	; 0x06
    210c:	5f 81       	ldd	r21, Y+7	; 0x07
    210e:	68 85       	ldd	r22, Y+8	; 0x08
    2110:	79 85       	ldd	r23, Y+9	; 0x09
    2112:	84 1b       	sub	r24, r20
    2114:	95 0b       	sbc	r25, r21
    2116:	a6 0b       	sbc	r26, r22
    2118:	b7 0b       	sbc	r27, r23
    211a:	18 16       	cp	r1, r24
    211c:	19 06       	cpc	r1, r25
    211e:	1a 06       	cpc	r1, r26
    2120:	1b 06       	cpc	r1, r27
    2122:	0c f0       	brlt	.+2      	; 0x2126 <run+0x94>
    2124:	b6 cf       	rjmp	.-148    	; 0x2092 <run>
    2126:	10 93 27 01 	sts	0x0127, r17	; 0x800127 <activeStack+0x1>
    212a:	00 93 26 01 	sts	0x0126, r16	; 0x800126 <activeStack>
    212e:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <threadPool>
    2132:	90 91 29 01 	lds	r25, 0x0129	; 0x800129 <threadPool+0x1>
    2136:	91 83       	std	Z+1, r25	; 0x01
    2138:	80 83       	st	Z, r24
    213a:	f0 93 29 01 	sts	0x0129, r31	; 0x800129 <threadPool+0x1>
    213e:	e0 93 28 01 	sts	0x0128, r30	; 0x800128 <threadPool>
    2142:	a0 91 26 01 	lds	r26, 0x0126	; 0x800126 <activeStack>
    2146:	b0 91 27 01 	lds	r27, 0x0127	; 0x800127 <activeStack+0x1>
    214a:	14 96       	adiw	r26, 0x04	; 4
    214c:	ed 91       	ld	r30, X+
    214e:	fc 91       	ld	r31, X
    2150:	15 97       	sbiw	r26, 0x05	; 5
    2152:	30 97       	sbiw	r30, 0x00	; 0
    2154:	41 f0       	breq	.+16     	; 0x2166 <run+0xd4>
    2156:	a0 81       	ld	r26, Z
    2158:	b1 81       	ldd	r27, Z+1	; 0x01
    215a:	14 96       	adiw	r26, 0x04	; 4
    215c:	ed 91       	ld	r30, X+
    215e:	fc 91       	ld	r31, X
    2160:	15 97       	sbiw	r26, 0x05	; 5
    2162:	30 97       	sbiw	r30, 0x00	; 0
    2164:	c1 f7       	brne	.-16     	; 0x2156 <run+0xc4>
    2166:	cd 01       	movw	r24, r26
    2168:	0e 94 14 05 	call	0xa28	; 0xa28 <dispatch>
    216c:	92 cf       	rjmp	.-220    	; 0x2092 <run>

0000216e <ABORT>:
    216e:	1f 93       	push	r17
    2170:	cf 93       	push	r28
    2172:	df 93       	push	r29
    2174:	ec 01       	movw	r28, r24
    2176:	1f b7       	in	r17, 0x3f	; 63
    2178:	10 78       	andi	r17, 0x80	; 128
    217a:	f8 94       	cli
    217c:	6e e7       	ldi	r22, 0x7E	; 126
    217e:	71 e0       	ldi	r23, 0x01	; 1
    2180:	0e 94 7d 04 	call	0x8fa	; 0x8fa <remove>
    2184:	89 2b       	or	r24, r25
    2186:	39 f4       	brne	.+14     	; 0x2196 <ABORT+0x28>
    2188:	60 e8       	ldi	r22, 0x80	; 128
    218a:	71 e0       	ldi	r23, 0x01	; 1
    218c:	ce 01       	movw	r24, r28
    218e:	0e 94 7d 04 	call	0x8fa	; 0x8fa <remove>
    2192:	89 2b       	or	r24, r25
    2194:	59 f0       	breq	.+22     	; 0x21ac <ABORT+0x3e>
    2196:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <msgPool>
    219a:	90 91 2b 01 	lds	r25, 0x012B	; 0x80012b <msgPool+0x1>
    219e:	99 83       	std	Y+1, r25	; 0x01
    21a0:	88 83       	st	Y, r24
    21a2:	d0 93 2b 01 	sts	0x012B, r29	; 0x80012b <msgPool+0x1>
    21a6:	c0 93 2a 01 	sts	0x012A, r28	; 0x80012a <msgPool>
    21aa:	2b c0       	rjmp	.+86     	; 0x2202 <ABORT+0x94>
    21ac:	e0 91 26 01 	lds	r30, 0x0126	; 0x800126 <activeStack>
    21b0:	f0 91 27 01 	lds	r31, 0x0127	; 0x800127 <activeStack+0x1>
    21b4:	30 97       	sbiw	r30, 0x00	; 0
    21b6:	29 f1       	breq	.+74     	; 0x2202 <ABORT+0x94>
    21b8:	20 91 24 01 	lds	r18, 0x0124	; 0x800124 <current>
    21bc:	30 91 25 01 	lds	r19, 0x0125	; 0x800125 <current+0x1>
    21c0:	2e 17       	cp	r18, r30
    21c2:	3f 07       	cpc	r19, r31
    21c4:	c9 f0       	breq	.+50     	; 0x21f8 <ABORT+0x8a>
    21c6:	82 81       	ldd	r24, Z+2	; 0x02
    21c8:	93 81       	ldd	r25, Z+3	; 0x03
    21ca:	c8 17       	cp	r28, r24
    21cc:	d9 07       	cpc	r29, r25
    21ce:	a1 f4       	brne	.+40     	; 0x21f8 <ABORT+0x8a>
    21d0:	44 81       	ldd	r20, Z+4	; 0x04
    21d2:	55 81       	ldd	r21, Z+5	; 0x05
    21d4:	8a 85       	ldd	r24, Y+10	; 0x0a
    21d6:	9b 85       	ldd	r25, Y+11	; 0x0b
    21d8:	48 17       	cp	r20, r24
    21da:	59 07       	cpc	r21, r25
    21dc:	69 f4       	brne	.+26     	; 0x21f8 <ABORT+0x8a>
    21de:	13 82       	std	Z+3, r1	; 0x03
    21e0:	12 82       	std	Z+2, r1	; 0x02
    21e2:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <msgPool>
    21e6:	90 91 2b 01 	lds	r25, 0x012B	; 0x80012b <msgPool+0x1>
    21ea:	99 83       	std	Y+1, r25	; 0x01
    21ec:	88 83       	st	Y, r24
    21ee:	d0 93 2b 01 	sts	0x012B, r29	; 0x80012b <msgPool+0x1>
    21f2:	c0 93 2a 01 	sts	0x012A, r28	; 0x80012a <msgPool>
    21f6:	05 c0       	rjmp	.+10     	; 0x2202 <ABORT+0x94>
    21f8:	01 90       	ld	r0, Z+
    21fa:	f0 81       	ld	r31, Z
    21fc:	e0 2d       	mov	r30, r0
    21fe:	30 97       	sbiw	r30, 0x00	; 0
    2200:	f9 f6       	brne	.-66     	; 0x21c0 <ABORT+0x52>
    2202:	11 23       	and	r17, r17
    2204:	09 f0       	breq	.+2      	; 0x2208 <ABORT+0x9a>
    2206:	78 94       	sei
    2208:	df 91       	pop	r29
    220a:	cf 91       	pop	r28
    220c:	1f 91       	pop	r17
    220e:	08 95       	ret

00002210 <install>:
    
    TIMER_INIT();
}

void install(Object *obj, Method m, enum Vector i) {
    if (i >= 0 && i < N_VECTORS) {
    2210:	42 31       	cpi	r20, 0x12	; 18
    2212:	b8 f4       	brcc	.+46     	; 0x2242 <install+0x32>
        char status;
        DISABLE(status);
    2214:	2f b7       	in	r18, 0x3f	; 63
    2216:	f8 94       	cli
        otable[i] = obj;
    2218:	50 e0       	ldi	r21, 0x00	; 0
    221a:	44 0f       	add	r20, r20
    221c:	55 1f       	adc	r21, r21
    221e:	fa 01       	movw	r30, r20
    2220:	ee 57       	subi	r30, 0x7E	; 126
    2222:	fe 4f       	sbci	r31, 0xFE	; 254
    2224:	91 83       	std	Z+1, r25	; 0x01
    2226:	80 83       	st	Z, r24
        mtable[i] = m;
    2228:	fa 01       	movw	r30, r20
    222a:	e6 5e       	subi	r30, 0xE6	; 230
    222c:	fd 4f       	sbci	r31, 0xFD	; 253
    222e:	71 83       	std	Z+1, r23	; 0x01
    2230:	60 83       	st	Z, r22
        obj->wantedBy = INSTALLED_TAG;  // Mark object as subject to synchronization by interrupt disabling
    2232:	41 e0       	ldi	r20, 0x01	; 1
    2234:	50 e0       	ldi	r21, 0x00	; 0
    2236:	fc 01       	movw	r30, r24
    2238:	53 83       	std	Z+3, r21	; 0x03
    223a:	42 83       	std	Z+2, r20	; 0x02
        ENABLE(status);
    223c:	22 23       	and	r18, r18
    223e:	0c f4       	brge	.+2      	; 0x2242 <install+0x32>
    2240:	78 94       	sei
    2242:	08 95       	ret

00002244 <tinytimber>:
    }
}

int tinytimber(Object *obj, Method m, int arg) {
    2244:	8c 01       	movw	r16, r24
    2246:	7b 01       	movw	r14, r22
    2248:	6a 01       	movw	r12, r20
    char status;
    DISABLE(status);
    224a:	8f b7       	in	r24, 0x3f	; 63
    224c:	f8 94       	cli
    initialize();
    224e:	0e 94 a9 04 	call	0x952	; 0x952 <initialize>
    ENABLE(1);
    2252:	78 94       	sei
    if (m != NULL)
    2254:	e1 14       	cp	r14, r1
    2256:	f1 04       	cpc	r15, r1
    2258:	41 f0       	breq	.+16     	; 0x226a <tinytimber+0x26>
        //m(obj, arg);
		ASYNC(obj,m,arg);
    225a:	20 e0       	ldi	r18, 0x00	; 0
    225c:	30 e0       	ldi	r19, 0x00	; 0
    225e:	a9 01       	movw	r20, r18
    2260:	60 e0       	ldi	r22, 0x00	; 0
    2262:	70 e0       	ldi	r23, 0x00	; 0
    2264:	cb 01       	movw	r24, r22
    2266:	0e 94 ab 0e 	call	0x1d56	; 0x1d56 <async>
    DISABLE(status);
    226a:	8f b7       	in	r24, 0x3f	; 63
    226c:	f8 94       	cli
        }
    }
}

static void idle(void) {
    schedule();
    226e:	0e 94 34 05 	call	0xa68	; 0xa68 <schedule>
    ENABLE(1);
    2272:	78 94       	sei
    while (1) {
        SLEEP();
    2274:	81 e0       	ldi	r24, 0x01	; 1
    2276:	83 bf       	out	0x33, r24	; 51
    2278:	88 95       	sleep
    227a:	fd cf       	rjmp	.-6      	; 0x2276 <tinytimber+0x32>

0000227c <__divmodsi4>:
    227c:	05 2e       	mov	r0, r21
    227e:	97 fb       	bst	r25, 7
    2280:	1e f4       	brtc	.+6      	; 0x2288 <__divmodsi4+0xc>
    2282:	00 94       	com	r0
    2284:	0e 94 55 11 	call	0x22aa	; 0x22aa <__negsi2>
    2288:	57 fd       	sbrc	r21, 7
    228a:	07 d0       	rcall	.+14     	; 0x229a <__divmodsi4_neg2>
    228c:	0e 94 68 11 	call	0x22d0	; 0x22d0 <__udivmodsi4>
    2290:	07 fc       	sbrc	r0, 7
    2292:	03 d0       	rcall	.+6      	; 0x229a <__divmodsi4_neg2>
    2294:	4e f4       	brtc	.+18     	; 0x22a8 <__divmodsi4_exit>
    2296:	0c 94 55 11 	jmp	0x22aa	; 0x22aa <__negsi2>

0000229a <__divmodsi4_neg2>:
    229a:	50 95       	com	r21
    229c:	40 95       	com	r20
    229e:	30 95       	com	r19
    22a0:	21 95       	neg	r18
    22a2:	3f 4f       	sbci	r19, 0xFF	; 255
    22a4:	4f 4f       	sbci	r20, 0xFF	; 255
    22a6:	5f 4f       	sbci	r21, 0xFF	; 255

000022a8 <__divmodsi4_exit>:
    22a8:	08 95       	ret

000022aa <__negsi2>:
    22aa:	90 95       	com	r25
    22ac:	80 95       	com	r24
    22ae:	70 95       	com	r23
    22b0:	61 95       	neg	r22
    22b2:	7f 4f       	sbci	r23, 0xFF	; 255
    22b4:	8f 4f       	sbci	r24, 0xFF	; 255
    22b6:	9f 4f       	sbci	r25, 0xFF	; 255
    22b8:	08 95       	ret

000022ba <__muluhisi3>:
    22ba:	0e 94 8a 11 	call	0x2314	; 0x2314 <__umulhisi3>
    22be:	a5 9f       	mul	r26, r21
    22c0:	90 0d       	add	r25, r0
    22c2:	b4 9f       	mul	r27, r20
    22c4:	90 0d       	add	r25, r0
    22c6:	a4 9f       	mul	r26, r20
    22c8:	80 0d       	add	r24, r0
    22ca:	91 1d       	adc	r25, r1
    22cc:	11 24       	eor	r1, r1
    22ce:	08 95       	ret

000022d0 <__udivmodsi4>:
    22d0:	a1 e2       	ldi	r26, 0x21	; 33
    22d2:	1a 2e       	mov	r1, r26
    22d4:	aa 1b       	sub	r26, r26
    22d6:	bb 1b       	sub	r27, r27
    22d8:	fd 01       	movw	r30, r26
    22da:	0d c0       	rjmp	.+26     	; 0x22f6 <__udivmodsi4_ep>

000022dc <__udivmodsi4_loop>:
    22dc:	aa 1f       	adc	r26, r26
    22de:	bb 1f       	adc	r27, r27
    22e0:	ee 1f       	adc	r30, r30
    22e2:	ff 1f       	adc	r31, r31
    22e4:	a2 17       	cp	r26, r18
    22e6:	b3 07       	cpc	r27, r19
    22e8:	e4 07       	cpc	r30, r20
    22ea:	f5 07       	cpc	r31, r21
    22ec:	20 f0       	brcs	.+8      	; 0x22f6 <__udivmodsi4_ep>
    22ee:	a2 1b       	sub	r26, r18
    22f0:	b3 0b       	sbc	r27, r19
    22f2:	e4 0b       	sbc	r30, r20
    22f4:	f5 0b       	sbc	r31, r21

000022f6 <__udivmodsi4_ep>:
    22f6:	66 1f       	adc	r22, r22
    22f8:	77 1f       	adc	r23, r23
    22fa:	88 1f       	adc	r24, r24
    22fc:	99 1f       	adc	r25, r25
    22fe:	1a 94       	dec	r1
    2300:	69 f7       	brne	.-38     	; 0x22dc <__udivmodsi4_loop>
    2302:	60 95       	com	r22
    2304:	70 95       	com	r23
    2306:	80 95       	com	r24
    2308:	90 95       	com	r25
    230a:	9b 01       	movw	r18, r22
    230c:	ac 01       	movw	r20, r24
    230e:	bd 01       	movw	r22, r26
    2310:	cf 01       	movw	r24, r30
    2312:	08 95       	ret

00002314 <__umulhisi3>:
    2314:	a2 9f       	mul	r26, r18
    2316:	b0 01       	movw	r22, r0
    2318:	b3 9f       	mul	r27, r19
    231a:	c0 01       	movw	r24, r0
    231c:	a3 9f       	mul	r26, r19
    231e:	70 0d       	add	r23, r0
    2320:	81 1d       	adc	r24, r1
    2322:	11 24       	eor	r1, r1
    2324:	91 1d       	adc	r25, r1
    2326:	b2 9f       	mul	r27, r18
    2328:	70 0d       	add	r23, r0
    232a:	81 1d       	adc	r24, r1
    232c:	11 24       	eor	r1, r1
    232e:	91 1d       	adc	r25, r1
    2330:	08 95       	ret

00002332 <setjmp>:
    2332:	dc 01       	movw	r26, r24
    2334:	2d 92       	st	X+, r2
    2336:	3d 92       	st	X+, r3
    2338:	4d 92       	st	X+, r4
    233a:	5d 92       	st	X+, r5
    233c:	6d 92       	st	X+, r6
    233e:	7d 92       	st	X+, r7
    2340:	8d 92       	st	X+, r8
    2342:	9d 92       	st	X+, r9
    2344:	ad 92       	st	X+, r10
    2346:	bd 92       	st	X+, r11
    2348:	cd 92       	st	X+, r12
    234a:	dd 92       	st	X+, r13
    234c:	ed 92       	st	X+, r14
    234e:	fd 92       	st	X+, r15
    2350:	0d 93       	st	X+, r16
    2352:	1d 93       	st	X+, r17
    2354:	cd 93       	st	X+, r28
    2356:	dd 93       	st	X+, r29
    2358:	ff 91       	pop	r31
    235a:	ef 91       	pop	r30
    235c:	8d b7       	in	r24, 0x3d	; 61
    235e:	8d 93       	st	X+, r24
    2360:	8e b7       	in	r24, 0x3e	; 62
    2362:	8d 93       	st	X+, r24
    2364:	8f b7       	in	r24, 0x3f	; 63
    2366:	8d 93       	st	X+, r24
    2368:	ed 93       	st	X+, r30
    236a:	fd 93       	st	X+, r31
    236c:	88 27       	eor	r24, r24
    236e:	99 27       	eor	r25, r25
    2370:	09 94       	ijmp

00002372 <longjmp>:
    2372:	dc 01       	movw	r26, r24
    2374:	cb 01       	movw	r24, r22
    2376:	81 30       	cpi	r24, 0x01	; 1
    2378:	91 05       	cpc	r25, r1
    237a:	81 1d       	adc	r24, r1
    237c:	2d 90       	ld	r2, X+
    237e:	3d 90       	ld	r3, X+
    2380:	4d 90       	ld	r4, X+
    2382:	5d 90       	ld	r5, X+
    2384:	6d 90       	ld	r6, X+
    2386:	7d 90       	ld	r7, X+
    2388:	8d 90       	ld	r8, X+
    238a:	9d 90       	ld	r9, X+
    238c:	ad 90       	ld	r10, X+
    238e:	bd 90       	ld	r11, X+
    2390:	cd 90       	ld	r12, X+
    2392:	dd 90       	ld	r13, X+
    2394:	ed 90       	ld	r14, X+
    2396:	fd 90       	ld	r15, X+
    2398:	0d 91       	ld	r16, X+
    239a:	1d 91       	ld	r17, X+
    239c:	cd 91       	ld	r28, X+
    239e:	dd 91       	ld	r29, X+
    23a0:	ed 91       	ld	r30, X+
    23a2:	fd 91       	ld	r31, X+
    23a4:	0d 90       	ld	r0, X+
    23a6:	f8 94       	cli
    23a8:	fe bf       	out	0x3e, r31	; 62
    23aa:	0f be       	out	0x3f, r0	; 63
    23ac:	ed bf       	out	0x3d, r30	; 61
    23ae:	ed 91       	ld	r30, X+
    23b0:	fd 91       	ld	r31, X+
    23b2:	09 94       	ijmp

000023b4 <_exit>:
    23b4:	f8 94       	cli

000023b6 <__stop_program>:
    23b6:	ff cf       	rjmp	.-2      	; 0x23b6 <__stop_program>
